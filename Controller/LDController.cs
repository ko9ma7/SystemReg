using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;
using System.Drawing;
using HtmlAgilityPack;
using System.Threading;
using System.Xml;
using RestSharp;
using SharpAdbClient.DeviceCommands;
using SharpAdbClient;
using Newtonsoft.Json;
using MessagingToolkit.QRCode.Codec.Data;
using System.Runtime.InteropServices;
using System.Text.RegularExpressions;
using System.Drawing.Imaging;
using Newtonsoft.Json.Linq;
using System.Net;
using MihaZupan;
using System.Net.Http;
using System.Xml.Linq;
using xNet;
namespace NinjaSystem
{
    public class LDController
    {

        NinjaADB ninjaadb = new NinjaADB();
        static object syncObjUID = new object();
        public void setKeyboard(string ldID)
        {
            string cmd = "shell ime set com.android.adbkeyboard/.AdbIME";
            runAdb(ldID, cmd);
        }
        public void openAppAdb(string ldid, string app)
        {
            string cmd = "shell monkey -p com.facebook.katana 1";
            runAdb(ldid, cmd);
        }

        public DetechModel checkScreen(string ldid)
        {
            DetechModel dump = new DetechModel();
            dump.parent = "Video";
            dump.content = "com.facebook.katana/com.facebook.video.channelfeed.activity.ChannelFeedActivity";
            SettingTool.lang.list_dump.Add(dump);
            DetechModel kq = new DetechModel();
            try
            {
                string cmd = "shell dumpsys activity | grep -i run";
                string html = runAdb(ldid, cmd);
                string[] data = html.Split('\n');
                string datadump = "";
                foreach (string str in data)
                {
                    if (str.Contains("Run #"))
                    {
                        datadump = str.Trim();
                        break;
                    }
                }
                //File.AppendAllText(Application.StartupPath + "\\logs\\" + ldid + ".txt", ldid + " : " + datadump + "\n");
                foreach (DetechModel model in SettingTool.lang.list_dump)
                {
                    if (datadump.Contains(model.content))
                    {
                        kq = model;
                        kq.status = true;
                        return kq;
                    }
                }
            }
            catch { }
            kq.status = false;
            return kq;
        }
        public string checkScreen2(string ldid)
        {
            DetechModel kq = new DetechModel();
            string cmd = "shell dumpsys activity | grep -i run";
            string html = runAdb(ldid, cmd);
            return html;
        }
        public DetechModel checkOpenFacebookFinish(userLD u, string ldid)
        {
            DetechModel kq = new DetechModel();
            DetechModel kq_tieptuc = new DetechModel();

            DetechModel model = new DetechModel();
            model.parent = "";
            model.content = "TIẾP TỤC BẰNG";
            model.text = "TIẾP TỤC BẰNG";
            model.node = "//node[contains(@class,'android.widget.Button')]";
            model.function = 1;

            List<DetechModel> ls_tieptuc = new List<DetechModel>();
            ls_tieptuc.Add(model);

            int i = 0;
        Lb_Continued:
            kq = checkScreen(ldid);
            if (kq.status)
            {
                kq_tieptuc = detechFunction(ldid, ls_tieptuc);
                if (kq_tieptuc.status)
                    ClickOnLeapdroidPosition(ldid, kq_tieptuc.point);
                switch (kq.parent)
                {
                    case "loading":
                        u.setStatus(ldid, "Loading...");
                        Thread.Sleep(1000);
                        goto Lb_Continued;
                    case "loadinglang":
                        u.setStatus(ldid, "Loading...");
                        Thread.Sleep(1000);
                        goto Lb_Continued;
                    case "launcher":
                        {
                            i++;
                            u.setStatus(ldid, "Launcher...");
                            Thread.Sleep(1000);
                            if (i == 20)
                            {
                                openAppAdb(ldid, "com.facebook.katana");
                                // launchex(ldid, "com.facebook.katana");
                            }
                            if (i > 40)
                            {
                                kq.status = false;
                                break;
                            }

                            goto Lb_Continued;
                        }

                }

            }
            return kq;
        }
        public void disableGPS(string ldid)
        {
            string cmd = "shell settings put secure location_providers_allowed -gps";
            string html = runAdb(ldid, cmd);
        }
        public void customLD(LDModel m)
        {
            //set timezone
            //change info
            //string cmd = "shell setprop gsm.network.type \"LTE4G\"";
            //string html = runAdb(m.id.ToString(), cmd);

            //set timezone
            string cmd = "shell setprop persist.sys.timezone \"" + m.timezone + "\"";
            string html = runAdb(m.id.ToString(), cmd);
        }
        public bool checkScreen(string ldid, string string_0)
        {
            string cmd = "shell dumpsys activity | grep -i run";
            string html = runAdb(ldid, cmd);
            File.AppendAllText(Application.StartupPath + "\\logs\\" + ldid + ".txt", ldid + " : " + html + "\n");
            string[] datahtml = html.Split('\n');
            string datadump = "";
            foreach (string str in datahtml)
            {
                if (str.Contains("Run #"))
                {
                    datadump = str.Trim();
                    break;
                }
            }
            string[] arr = string_0.Split('|');
            if (arr.Length > 0)
            {
                foreach (string data in arr)
                {
                    if (datadump.Contains(data))
                    {
                        return true;
                    }
                }
            }
            else
            {
                if (html.Contains(string_0))
                {
                    return true;
                }

            }
            return false;

        }
        public void settingLD(string ldid)
        {
            //thiet lap do phan giai
            modify(ldid);

            changeLanguage(ldid);
            //thiet lap duong dan mac dinh
            #region
            try
            {
                Newtonsoft.Json.Linq.JObject jobject = new Newtonsoft.Json.Linq.JObject();
                string pathjson = string.Format("{0}\\vms\\config\\leidian{1}.config", SettingTool.pathfolderld, ldid);
                if (File.Exists(pathjson))
                {
                    try
                    {
                        string json = File.ReadAllText(pathjson);
                        jobject = Newtonsoft.Json.Linq.JObject.Parse(json);
                    }
                    catch
                    {
                    }

                    string path = "c:\\test\\" + ldid + "\\pictures\\temp";
                    if (Directory.Exists(path) == false)
                    {
                        Directory.CreateDirectory(path);
                    }
                    jobject["statusSettings.sharedPictures"] = "c:/test/" + ldid + "/pictures";
                    File.WriteAllText(pathjson, jobject.ToString());
                }

            }
            catch
            {
            }
            try
            {
                Newtonsoft.Json.Linq.JObject jobject = new Newtonsoft.Json.Linq.JObject();
                string pathjson = string.Format("{0}\\vms\\config\\leidian{1}.config", SettingTool.pathfolderld, ldid);
                if (File.Exists(pathjson))
                {
                    try
                    {
                        string json = File.ReadAllText(pathjson);
                        jobject = Newtonsoft.Json.Linq.JObject.Parse(json);
                    }
                    catch
                    {
                    }


                    if (string.IsNullOrEmpty(jobject["propertySettings.phoneNumber"].ToString()))
                    {
                        Random rd = new Random();
                        jobject["propertySettings.phoneNumber"] = "091" + rd.Next(1000000, 9999999);
                    }
                    File.WriteAllText(pathjson, jobject.ToString());
                }

            }
            catch
            {
            }

            try
            {
                Newtonsoft.Json.Linq.JObject jobject = new Newtonsoft.Json.Linq.JObject();
                string pathjson = string.Format("{0}\\vms\\config\\leidian{1}.config", SettingTool.pathfolderld, ldid);
                if (File.Exists(pathjson))
                {
                    try
                    {
                        string json = File.ReadAllText(pathjson);
                        jobject = Newtonsoft.Json.Linq.JObject.Parse(json);
                    }
                    catch
                    {
                    }
                    jobject["basicSettings.mulFsAutoSize"] = 1;
                    jobject["basicSettings.rootMode"] = true;

                    File.WriteAllText(pathjson, jobject.ToString());
                }

            }
            catch
            {
            }




            #endregion

        }
        public List<LDModel> getLdPlay()
        {
            List<LDModel> list_ld = new List<LDModel>();
            try
            {
                string html = ExecuteAsAdmin(SettingTool.pathLD, "list2");
                string[] lines = html.Split('\n');
                foreach (string line in lines)
                {
                    try
                    {
                        string[] device = line.Split(',');
                        LDModel model = new LDModel();
                        model.id = Convert.ToInt32(device[0]);
                        model.name = device[1];
                        list_ld.Add(model);
                    }
                    catch { }
                }
            }
            catch { }
            return list_ld;
        }
        public bool autoRunLD(string ldID)
        {
            ninjaDroidHelper droid = new ninjaDroidHelper();
            if (checkIsFinishLD(ldID))
            {
                return true;
            }
            else
            {

                launch(ldID);

                int i = 30;
                while (i > 0)
                {
                    i--;
                    if (i == 20)
                    {
                        quit(ldID);
                        launch(ldID);
                    }

                    if (checkIsFinishLD(ldID))
                        return true;
                    else
                    {
                        // droid.startAdbserver("adb devices");
                        Thread.Sleep(3000);
                    }

                }
            }
            return false;
        }

        public bool autoRunLDSetPosition(string ldID, userLD form, CancellationToken token)
        {
            try
            {
                if (token.IsCancellationRequested)
                    return false;
                if (checkIsRunning(ldID))
                {
                    return true;
                }
                else
                    return false;
            }
            catch
            {

            }
            return false;
        }

        public bool IsFinishLD(string ldID)
        {
            ninjaDroidHelper droid = new ninjaDroidHelper();
            if (checkIsFinishLD(ldID))
            {
                return true;
            }
            else
            {

                int i = 20;
                while (i > 0)
                {
                    i--;
                    if (i == 10)
                    {
                        quit(ldID);
                        Delay(1);
                        launch(ldID);
                        Delay(20);
                    }
                    if (checkIsFinishLD(ldID))
                        return true;
                    else
                    {
                        Thread.Sleep(3000);
                    }

                }
            }
            return false;
        }
        public bool checkIsRunning(string ldID)
        {
            try
            {
                string cmd = String.Format("isrunning --index {0}", ldID);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
                //string html = runAdb(ldID, "shell pm list packages -3");
                //if (html.Contains("com.facebook"))
                if (html.Contains("running"))
                    return true;
                else
                    return false;
            }
            catch { }
            return false;
        }
        public bool checkAppInstall(string ldID)
        {
            try
            {
                string html = runAdb(ldID, "shell pm list packages -3");

                if (html.Contains("com.facebook"))
                {
                    //backup app dang chay

                    return true;
                }

            }
            catch { }
            return false;
        }
        public bool checkAppCurrent(Account acc)
        {
            string path = string.Format("{0}\\LD\\{1}.ninja", Application.StartupPath, acc.ldid);
            if (File.Exists(path))
            {
                try
                {
                    string uid = File.ReadAllText(path);
                    if (uid == acc.Id_account.ToString())
                    {
                        return true;
                    }
                    else
                    {
                        if (string.IsNullOrEmpty(uid) == false)
                        {
                            backupAccount(acc.ldid, "acc" + uid);
                        }

                    }

                }
                catch { }
            }
            return false;
        }
        public string ExecuteAsAdmin(string fileName, string cmd)
        {
            try
            {
                Process proc = new Process();
                proc.StartInfo.FileName = fileName;
                proc.StartInfo.UseShellExecute = false;
                proc.StartInfo.Verb = "runas";
                proc.StartInfo.Arguments = cmd;
                proc.StartInfo.RedirectStandardInput = true;
                proc.StartInfo.RedirectStandardOutput = true;
                proc.StartInfo.RedirectStandardError = true;
                proc.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                proc.StartInfo.CreateNoWindow = true;
                proc.Start();


                string cv_out = null;
                Thread ot = new Thread(() => { cv_out = proc.StandardOutput.ReadToEnd(); });
                ot.Start();

                int timeout = 10000;
                proc.WaitForExit(timeout);
                // ot.Join();
                //   et.Join();

                // ot.Join();
                //   et.Join();

                return cv_out;

            }
            catch { }
            return null;

        }

        public bool installApp(string ldID, string fileName)
        {
            try
            {
                string cmd = String.Format("installapp --index {0} --filename \"{1}\"", ldID, fileName);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
            }
            catch { }
            return false;
        }
        public bool uninStallApp(string ldID, string packagename)
        {
            try
            {
                string cmd = String.Format("uninstallapp --index {0} --packagename \"{1}\"", ldID, packagename);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
            }
            catch { }
            return false;
        }
        public bool runApp(string ldID, string packagename)
        {
            try
            {
                string cmd = String.Format("runapp --index {0} --packagename {1}", ldID, packagename);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
            }
            catch { }
            return false;
        }
        public bool killApp(string ldID, string packagename)
        {
            try
            {
                string cmd = String.Format("killapp --index {0} --packagename {1}", ldID, packagename);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
            }
            catch { }
            return false;
        }
        public string runAdb(string ldID, string command)
        {
            try
            {

                string cmd = String.Format("adb --index {0} --command \"{1}\"", ldID, command);

                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);

                if (html.Contains("device not found"))
                {
                    string port = checkPortLD(ldID);
                    if (port != null)
                    {
                        cmd = string.Format("disconnect 127.0.0.1:{0}", port);
                        html = ExecuteAsAdmin(SettingTool.pathLD, cmd);

                        cmd = string.Format("connect 127.0.0.1:{0}", port);
                        html = ExecuteAsAdmin(SettingTool.pathLD, cmd);

                        if (html.Contains("connected"))//already connected
                        {
                            html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
                        }
                        else
                        {

                        }
                    }
                }
                return html;


            }
            catch { }
            return null;
        }
        public void sortLD()
        {
            try
            {

                string html = ExecuteAsAdmin(SettingTool.pathLD, "sortWnd");
            }
            catch { }

        }
        public void launch(string ldID)
        {
            try
            {

                string cmd = String.Format("launch --index {0}", ldID);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
            }
            catch { }

        }

        public void changeIp()
        {
            NinjaADB droid = new NinjaADB();
            //  ProcessStartInfo ProcessInfo;
            Process Process;
            string command = "";
            Process[] lsLD = Process.GetProcessesByName("HMA! Pro VPN");
            if (lsLD.Count() == 0) //run HMA
            {
                command = "\"" + SettingTool.configld.pathHMA + "\\HMA! Pro VPN.exe\"";
                //ProcessInfo = new ProcessStartInfo("cmd.exe", "/c " + command);
                //ProcessInfo.CreateNoWindow = true;
                //ProcessInfo.UseShellExecute = false;
                //Process = Process.Start(ProcessInfo);
                droid.ExecuteCMD(command);
                Delay(6);
            }
            //disconnect
            command = "\"" + SettingTool.configld.pathHMA + "\\HMA! Pro VPN.exe\" -disconnect";
            //ProcessInfo = new ProcessStartInfo("cmd.exe", "/c " + command);
            //ProcessInfo.CreateNoWindow = true;
            //ProcessInfo.UseShellExecute = false;
            //Process = Process.Start(ProcessInfo);
            droid.ExecuteCMD(command);
            Delay(3);

            //connect 

            command = "\"" + SettingTool.configld.pathHMA + "\\HMA! Pro VPN.exe\" -connect";
            //ProcessInfo = new ProcessStartInfo("cmd.exe", "/c " + command);
            //ProcessInfo.CreateNoWindow = true;
            //ProcessInfo.UseShellExecute = false;
            //Process = Process.Start(ProcessInfo);
            droid.ExecuteCMD(command);
            Delay(20);

        }
        public string checkIP(string proxy = null, int step = 15)
        {
            try
            {
                for (int i = 0; i < step; i++)
                {
                    var client = new RestClient("http://v4v6.ipv6-test.com/api/myip.php?json");//https://api.ipify.org/?format=json
                    var request = new RestRequest(Method.GET);
                    if (string.IsNullOrEmpty(proxy) == false)
                        client.Proxy = new WebProxy(proxy);


                    try
                    {
                        client.Timeout = 10000;
                        IRestResponse response = client.Execute(request);
                        JObject obj = JObject.Parse(response.Content);
                        string yourip = obj["address"].ToString();
                        if (string.IsNullOrEmpty(yourip) == false)
                        {
                            return yourip;
                        }
                        else
                        {
                            Thread.Sleep(3000);
                        }

                    }
                    catch
                    {

                    }
                }


            }
            catch
            { }
            return null;

        }
        public string checkIPSock5(string yourproxy, int step = 1)
        {
            try
            {

                string[] arr = yourproxy.Split(':');
                if (arr.Length > 0)
                {
                    for (int i = 0; i < step; i++)
                    {
                        var proxy = new HttpToSocks5Proxy(arr[0], Convert.ToInt32(arr[1]));
                        var handler = new HttpClientHandler { Proxy = proxy };
                        HttpClient httpClient = new HttpClient(handler, true);

                        try
                        {

                            var result = httpClient.SendAsync(new HttpRequestMessage(System.Net.Http.HttpMethod.Get, "http://v4v6.ipv6-test.com/api/myip.php?json"));
                            var kq = result.Result.Content.ReadAsStringAsync();
                            string html = kq.Result.ToString();
                            JObject obj = JObject.Parse(html);
                            string yourip = obj["address"].ToString();
                            if (string.IsNullOrEmpty(yourip) == false)
                            {
                                return yourip;
                            }
                            else
                            {
                                Thread.Sleep(1000);
                            }

                        }
                        catch
                        {

                        }
                    }
                }
            }
            catch
            { }
            return null;

        }
        public void quit(string ldID)
        {
            try
            {

                string cmd = String.Format("quit --index {0}", ldID);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
            }
            catch { }

        }
        public void quitall()
        {
            try
            {
                string html = ExecuteAsAdmin(SettingTool.pathLD, "quitall");
            }
            catch { }

        }
        public void add()
        {
            try
            {
                //string cmd = String.Format("add --name {0}", name);
                string html = ExecuteAsAdmin(SettingTool.pathLD, "add");
            }
            catch { }

        }
        public void add(string name)
        {
            try
            {
                string cmd = String.Format("add --name {0}", name);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
            }
            catch { }

        }
        public void copy(string name, string ldID)
        {
            try
            {
                string cmd = String.Format("copy --name {0} --from {1}", name, ldID);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
            }
            catch { }

        }

        public void modify(string ldID)
        {
            try
            {
                string cmd = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmd = String.Format("modify --index {0} --resolution 320,480,120", ldID);
                }
                else
                {
                    cmd = String.Format("modify --index {0} --resolution 1080,1920,480", ldID);
                }
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
            }
            catch { }

        }
        public void modify(string ldID, string phone)
        {
            try
            {
                string cmd = "";
                cmd = String.Format("modify --index {0} --pnumber ", phone);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
            }
            catch { }

        }
        public void modify(string ldID, LDModel m)
        {
            try
            {
                string cmd = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmd = String.Format("modify --index {0} --resolution 320,480,120 --cpu {1} --memory {2} --manufacturer {3} --model {4} --pnumber {5} --imei {6} --imsi auto --simserial auto --androidid auto --mac auto", ldID, m.cpu, m.ram, m.manufacturer, m.model, m.phonenumber, m.imei);
                }
                else
                {
                    cmd = String.Format("modify --index {0} --resolution 1080,1920,480 --cpu {1} --memory {2} --manufacturer {3} --model {4} --pnumber {5} --imei {6} --imsi auto --simserial auto --androidid auto --mac auto", ldID, m.cpu, m.ram, m.manufacturer, m.model, m.phonenumber, m.imei);
                }

                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);


            }
            catch { }

        }

        public void modify_cpuram(string ldID, string cpu, string ram)
        {
            try
            {
                string cmd = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmd = String.Format("modify --index {0} --resolution 320,480,120 --cpu {1} --memory {2}", ldID, cpu, ram);
                }
                else
                {
                    cmd = String.Format("modify --index {0} --resolution 1080,1920,480 --cpu {1} --memory {2}", ldID, cpu, ram);
                }

                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);


            }
            catch { }

        }

        public void rename(string tiento, string ldID)
        {
            try
            {
                string cmd = String.Format("rename --index {1} --title {0}{1}", tiento, ldID);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
            }
            catch { }

        }
        public void remove(string ldID)
        {
            try
            {
                string cmd = String.Format("remove --index {0}", ldID);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
            }
            catch { }

        }

        public void removeData(string ldID)
        {
            try
            {
                string cmd = String.Format("{0}\\vms\\leidian{1}\\data.vmdk", SettingTool.configld.pathLD, ldID);
                if (File.Exists(cmd))
                {
                    File.Delete(cmd);
                }

            }
            catch { }

        }
        public bool checkExitsFolder(string ldID, string filename)
        {
            try
            {
                string cmd = "shell ls data/data/" + filename;
                string html = runAdb(ldID, cmd);
                if (html.Contains("No such file or directory"))
                    return false;
            }
            catch { }
            return true;
        }
        public bool renameFolder(string ldID, string oldfile, string newfile)
        {
            try
            {
                string cmd = String.Format("shell mv data/data/{0} data/data/{1}", oldfile, newfile);
                string html = runAdb(ldID, cmd);
                if (html.Contains("No such file or directory"))
                    return false;
            }
            catch { }
            return true;
        }
        public bool createFolder(string ldID, string folder)
        {
            try
            {
                string cmd = String.Format("shell mkdir data/data/{0}", folder);
                string html = runAdb(ldID, cmd);
                if (html.Contains("No such file or directory"))
                    return false;
            }
            catch { }
            return true;
        }
        public bool deleteFolder(string ldID, string folder)
        {
            try
            {
                string cmd = String.Format("shell  rm -r /data/data/android/{0}", folder);
                string html = runAdb(ldID, cmd);
                if (html.Contains("No such file or directory"))
                    return false;
            }
            catch { }
            return true;
        }

        public bool deleteFolderFacebook(string ldID, string folder)
        {
            try
            {
                string cmd = String.Format("shell  rm -r /data/data/{0}", folder);
                string html = runAdb(ldID, cmd);
                if (html.Contains("No such file or directory"))
                    return false;
            }
            catch { }
            return true;
        }

        public bool createFolder2(string ldID, string folder)
        {
            try
            {
                string cmd = String.Format("shell mkdir {0}", folder);
                string html = runAdb(ldID, cmd);
                if (html.Contains("No such file or directory"))
                    return false;
            }
            catch { }
            return true;
        }
        public bool deleteFolder2(string ldID, string folder)
        {
            try
            {
                string cmd = String.Format("shell  rm -r {0}", folder);
                string html = runAdb(ldID, cmd);
                if (html.Contains("No such file or directory"))
                    return false;
            }
            catch { }
            return true;
        }
        public void backupAccount(string ldID, string folder)
        {
            try
            {
                killApp(ldID, "com.facebook.katana");
                deleteFolder(ldID, folder);
                createFolder(ldID, "android");
                string cmd = String.Format("shell mv data/data/com.facebook.katana data/data/android/{0}", folder);
                string html = runAdb(ldID, cmd);

                cmd = String.Format("shell mkdir data/data/com.facebook.katana", folder);
                html = runAdb(ldID, cmd);

            }
            catch { }
        }
        public void restoreAccount(string ldID, Account acc)
        {
            try
            {
                killApp(ldID, "com.facebook.katana");
                deleteFolderFacebook(ldID, "com.facebook.katana");
                string cmd = String.Format("shell mv /data/data/android/{0} data/data/com.facebook.katana", "acc" + acc.Id_account);
                string html = runAdb(ldID, cmd);
                File.WriteAllText(String.Format("{0}\\LD\\{1}.ninja", Application.StartupPath, ldID), acc.Id_account.ToString());
                if (html.Contains("No such file or directory"))
                {
                    createFolder(ldID, "com.facebook.katana");
                }

            }
            catch { }
        }

        public string pull(string ldID, string filename, string pathname)
        {
            try
            {
                string cmd = String.Format("pull --index {0} --remote {1} --local \"{2}\"", ldID, filename, pathname);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
                return html;
            }
            catch { }
            return null;
        }
        public string readFile(string ldID, string filename)
        {
            string html = null;
            try
            {
                // string path = "C:\\test\\" + filename;

                string path = string.Format("C:\\test\\{0}\\pictures\\temp\\{1}", ldID, filename);


                //string cmd = String.Format("pull \"/storage/sdcard0/window_dump.xml\" \"{0}\"", path);
                // string cmd = String.Format("pull \"/storage/emulated/0/window_dump.xml\" \"{0}\"", path); //LD new
                // string a = runAdb(ldID, cmd);

                html = File.ReadAllText(path); //.ToLower(); ban cu ko co

                if (File.Exists(path))
                    File.Delete(path);

            }
            catch { }
            return html;
        }
        public string checkListContent(string ldID, List<string> list_content)
        {
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }


                string data = runAdb(ldID, cmdCommand);
                Thread.Sleep(100);
                string html = readFile(ldID, filename).ToLower();
                foreach (string content in list_content)
                {
                    if (html.Contains(content.ToLower()))
                        return content;
                }

            }
            catch { }
            return null;
        }
        public bool checkExitsListContent(string ldID, List<string> list_content)
        {
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }


                string data = runAdb(ldID, cmdCommand);
                Thread.Sleep(100);
                string html = readFile(ldID, filename).ToLower();
                foreach (string content in list_content)
                {
                    if (html.Contains(content.ToLower()))
                    {
                        return true;
                    }
                }

            }
            catch { }
            return false;
        }
        #region xpath
        public Point FindByXpath(string ldID, string xpath, int num)
        {
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }

                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename).ToLower();
                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                HtmlNode.ElementsFlags.Remove("form");
                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                HtmlNode node = nodes[num];
                string text = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                string[] arr = text.Split(']');
                if (arr.Length > 0)
                {
                    string[] arr1 = arr[0].Split(',');
                    point.X = Convert.ToInt32(arr1[0]);
                    point.Y = Convert.ToInt32(arr1[1]);
                    return point;
                }

            }
            catch { }
            return point;
        }


        public List<Point> FindListPointByXpath(string ldID, string xpath)
        {
            Random rd = new Random();
            List<Point> list_point = new List<Point>();

            try
            {

                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                HtmlNode.ElementsFlags.Remove("form");
                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {
                    string text = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                    string[] arr = text.Split(']');
                    if (arr.Length > 0)
                    {
                        string[] arr1 = arr[0].Split(',');
                        Point point = new Point();
                        point.X = Convert.ToInt32(arr1[0]);
                        point.Y = Convert.ToInt32(arr1[1]);
                        list_point.Add(point);
                    }
                }

            }
            catch { }
            return list_point;
        }
        public Point FindByXpath(string ldID, string xpath, string datatext)
        {
            Random rd = new Random();
            Point point = new Point();

            try
            {

                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();

                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {
                    string text = node.Attributes["text"].Value.ToString().ToLower();
                    if (text.Contains(datatext.ToLower()))
                    {
                        string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                        string[] arr = bound.Split(']');
                        if (arr.Length > 0)
                        {
                            string[] arr1 = arr[0].Split(',');
                            point.X = Convert.ToInt32(arr1[0]);
                            point.Y = Convert.ToInt32(arr1[1]);
                            return point;
                        }
                    }
                }


            }
            catch { }
            return point;
        }
        public Point FindByXpath(string ldID, string xpath, List<string> list_text)
        {
            Random rd = new Random();
            Point point = new Point();
            try
            {

                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);


                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();

                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {
                    try
                    {
                        string text = node.Attributes["text"].Value.ToString().ToLower();
                        foreach (string template in list_text)
                        {
                            if (text.Contains(template.ToLower()))
                            {
                                if (template.ToLower() == "ok")
                                {
                                    if (text.Contains("facebook") == false)
                                    {
                                        string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                        string[] arr = bound.Split(']');
                                        if (arr.Length > 0)
                                        {
                                            string[] arr1 = arr[0].Split(',');
                                            point.X = Convert.ToInt32(arr1[0]);
                                            point.Y = Convert.ToInt32(arr1[1]);
                                            return point;
                                        }
                                    }

                                }
                                else
                                {
                                    string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                    string[] arr = bound.Split(']');
                                    if (arr.Length > 0)
                                    {
                                        string[] arr1 = arr[0].Split(',');
                                        point.X = Convert.ToInt32(arr1[0]);
                                        point.Y = Convert.ToInt32(arr1[1]);
                                        return point;
                                    }

                                }


                            }
                        }

                    }
                    catch
                    { }

                }


            }
            catch { }
            return point;
        }

        //find list xpath
        public Point FindByListXpath(string ldID, List<string> list_xpath, List<string> list_text)
        {
            Random rd = new Random();
            Point point = new Point();

            try
            {

                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                document.LoadHtml(html);
                foreach (string xpath in list_xpath)
                {
                    HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                    if (nodes != null)
                    {
                        foreach (HtmlNode node in nodes)
                        {
                            try
                            {
                                string text = node.Attributes["text"].Value.ToString().ToLower();
                                foreach (string template in list_text)
                                {
                                    if (text.Contains(template.ToLower()))
                                    {
                                        if (template.ToLower() == "ok")
                                        {
                                            if (text.Contains("facebook") == false)
                                            {
                                                string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                                string[] arr = bound.Split(']');
                                                if (arr.Length > 0)
                                                {
                                                    string[] arr1 = arr[0].Split(',');
                                                    point.X = Convert.ToInt32(arr1[0]);
                                                    point.Y = Convert.ToInt32(arr1[1]);
                                                    return point;
                                                }
                                            }

                                        }
                                        else
                                        {
                                            string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                            string[] arr = bound.Split(']');
                                            if (arr.Length > 0)
                                            {
                                                string[] arr1 = arr[0].Split(',');
                                                point.X = Convert.ToInt32(arr1[0]);
                                                point.Y = Convert.ToInt32(arr1[1]);
                                                return point;
                                            }
                                        }
                                    }
                                }

                            }
                            catch
                            { }
                        }
                    }
                }
            }
            catch { }
            return point;
        }
        public List<Point> FindByXpathList(string ldID, string xpath)
        {
            Random rd = new Random();
            List<Point> list_point = new List<Point>();
            try
            {

                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }

                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                HtmlNode.ElementsFlags.Remove("form");
                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {
                    string text = node.Attributes["bounds"].Value.ToString().Remove(0, 1).ToLower();
                    string[] arr = text.Split(']');
                    if (arr.Length > 0)
                    {
                        string[] arr1 = arr[0].Split(',');
                        Point point = new Point();
                        point.X = Convert.ToInt32(arr1[0]);
                        point.Y = Convert.ToInt32(arr1[1]);
                        list_point.Add(point);
                    }
                }

            }
            catch { }
            return list_point;
        }

        public List<Point> FindByXpathList(string ldID, string xpath, List<string> list_text)
        {
            Random rd = new Random();
            List<Point> list_point = new List<Point>();
            try
            {
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                HtmlNode.ElementsFlags.Remove("form");
                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);

                foreach (HtmlNode node in nodes)
                {
                    string enable = node.Attributes["enabled"].Value.ToString();
                    if (enable == "true")
                    {
                        string text = node.Attributes["text"].Value.ToString().ToLower();
                        string desc = node.Attributes["content-desc"].Value.ToString().ToLower();
                        foreach (string template in list_text)
                        {
                            if (text.Contains(template.ToLower()) || desc.Contains(template.ToLower()))
                            {
                                text = node.Attributes["bounds"].Value.ToString().Remove(0, 1).ToLower();
                                string[] arr = text.Split(']');
                                if (arr.Length > 0)
                                {
                                    string[] arr1 = arr[0].Split(',');
                                    Point point = new Point();
                                    point.X = Convert.ToInt32(arr1[0]);
                                    point.Y = Convert.ToInt32(arr1[1]);
                                    list_point.Add(point);
                                }

                            }
                        }
                    }
                }


            }
            catch { }
            return list_point;
        }

        public Point FindByXpathDesc(string ldID, string xpath, string content)
        {
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();

                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {
                    string text = node.Attributes["content-desc"].Value.ToString().ToLower();
                    if (text.Contains(content.ToLower()))
                    {
                        string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                        string[] arr = bound.Split(']');
                        if (arr.Length > 0)
                        {
                            string[] arr1 = arr[0].Split(',');
                            point.X = Convert.ToInt32(arr1[0]);
                            point.Y = Convert.ToInt32(arr1[1]);
                            return point;
                        }
                    }
                }


            }
            catch { }
            return point;
        }
        public Point FindByXpathIndex(string ldID, string xpath, string content)
        {
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();

                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {
                    string text = node.Attributes["Index"].Value.ToString().ToLower();
                    if (text.Contains(content.ToLower()))
                    {
                        string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                        string[] arr = bound.Split(']');
                        if (arr.Length > 0)
                        {
                            string[] arr1 = arr[0].Split(',');
                            point.X = Convert.ToInt32(arr1[0]);
                            point.Y = Convert.ToInt32(arr1[1]);
                            return point;
                        }
                    }
                }


            }
            catch { }
            return point;
        }

        public Point FindByXpathDesc(string ldID, string xpath, List<string> list_text)
        {
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();

                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {
                    string text = node.Attributes["content-desc"].Value.ToString().ToLower();
                    if (String.IsNullOrEmpty(text) == false)
                    {
                        foreach (string content in list_text)
                        {
                            if (text.Contains(content.ToLower()))
                            {
                                string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                string[] arr = bound.Split(']');
                                if (arr.Length > 0)
                                {
                                    string[] arr1 = arr[0].Split(',');
                                    point.X = Convert.ToInt32(arr1[0]);
                                    point.Y = Convert.ToInt32(arr1[1]);
                                    return point;
                                }
                            }
                        }
                    }

                }


            }
            catch { }
            return point;
        }

        public Point FindByListXpathDesc(string ldID, List<string> list_xpath, List<string> list_text)
        {

            Point point = new Point();

            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();

                document.LoadHtml(html);
                foreach (string xpath in list_xpath)
                {
                    HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                    if (nodes != null)
                    {
                        foreach (HtmlNode node in nodes)
                        {
                            string text = node.Attributes["content-desc"].Value.ToString().ToLower();
                            foreach (string content in list_text)
                            {
                                if (text.Contains(content.ToLower()))
                                {
                                    string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                    string[] arr = bound.Split(']');
                                    if (arr.Length > 0)
                                    {
                                        string[] arr1 = arr[0].Split(',');
                                        point.X = Convert.ToInt32(arr1[0]);
                                        point.Y = Convert.ToInt32(arr1[1]);
                                        return point;
                                    }
                                }
                            }
                        }
                    }
                }

            }
            catch { }
            return point;
        }

        public Point FindByListXpathDesc(string ldID, List<string> list_xpath, string content)
        {
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                document.LoadHtml(html);
                foreach (string xpath in list_xpath)
                {
                    HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                    if (nodes != null)
                    {
                        foreach (HtmlNode node in nodes)
                        {
                            string text = node.Attributes["content-desc"].Value.ToString().ToLower();

                            if (text.Contains(content.ToLower()))
                            {
                                string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                string[] arr = bound.Split(']');
                                if (arr.Length > 0)
                                {
                                    string[] arr1 = arr[0].Split(',');
                                    point.X = Convert.ToInt32(arr1[0]);
                                    point.Y = Convert.ToInt32(arr1[1]);
                                    return point;
                                }
                            }

                        }
                    }
                }


            }
            catch { }
            return point;
        }
        public List<Point> FindByXpathDescList(string ldID, string xpath, List<string> list_text)
        {
            List<Point> list_point = new List<Point>();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                HtmlNode.ElementsFlags.Remove("form");
                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {

                    string text = node.Attributes["text"].Value.ToString().ToLower();
                    string desc = node.Attributes["content-desc"].Value.ToString().ToLower();

                    foreach (string template in list_text)
                    {

                        if (text.Contains(template.ToLower()) || desc.Contains(template.ToLower()))
                        {
                            text = node.Attributes["bounds"].Value.ToString().Remove(0, 1).ToLower();
                            string[] arr = text.Split(']');
                            if (arr.Length > 0)
                            {
                                string[] arr1 = arr[0].Split(',');
                                Point point = new Point();
                                point.X = Convert.ToInt32(arr1[0]);
                                point.Y = Convert.ToInt32(arr1[1]);
                                list_point.Add(point);
                            }

                        }
                    }

                }

            }
            catch { }
            return list_point;
        }

        public void FindByXpathBound(string ldID, string xpath, ref Point point1, ref Point point2)
        {
            Random rd = new Random();
            try
            {

                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();

                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {
                    string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);

                    string[] arr = bound.Split(']');
                    if (arr.Length > 0)
                    {
                        string[] arr1 = arr[0].Split(',');
                        point1.X = Convert.ToInt32(arr1[0]);
                        point1.Y = Convert.ToInt32(arr1[1]);

                        string databound = arr[1].Replace("[", "").Replace("]", "");
                        string[] arr2 = databound.Split(',');
                        point2.X = Convert.ToInt32(arr2[0]);
                        point2.Y = Convert.ToInt32(arr2[1]);
                    }
                    return;
                }

            }
            catch { }

        }
        public void FindByXpathDescBound(string ldID, string xpath, string content, ref Point point1, ref Point point2)
        {
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();

                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {
                    string text = node.Attributes["content-desc"].Value.ToString().ToLower();
                    if (text.Contains(content.ToLower()))
                    {
                        string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);

                        string[] arr = bound.Split(']');
                        if (arr.Length > 0)
                        {
                            string[] arr1 = arr[0].Split(',');
                            point1.X = Convert.ToInt32(arr1[0]);
                            point1.Y = Convert.ToInt32(arr1[1]);

                            string databound = arr[1].Replace("[", "").Replace("]", "");
                            string[] arr2 = databound.Split(',');
                            point2.X = Convert.ToInt32(arr2[0]);
                            point2.Y = Convert.ToInt32(arr2[1]);
                        }
                        return;
                    }
                }


            }
            catch { }

        }

        public void FindByXpathDescBound(string ldID, string xpath, List<string> list_des, ref Point point1, ref Point point2)
        {
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();

                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {
                    string text = node.Attributes["content-desc"].Value.ToString().ToLower();
                    foreach (string content in list_des)
                    {
                        if (text.Contains(content.ToLower()))
                        {
                            string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);

                            string[] arr = bound.Split(']');
                            if (arr.Length > 0)
                            {
                                string[] arr1 = arr[0].Split(',');
                                point1.X = Convert.ToInt32(arr1[0]);
                                point1.Y = Convert.ToInt32(arr1[1]);

                                string databound = arr[1].Replace("[", "").Replace("]", "");
                                string[] arr2 = databound.Split(',');
                                point2.X = Convert.ToInt32(arr2[0]);
                                point2.Y = Convert.ToInt32(arr2[1]);
                            }
                            return;


                        }
                    }
                }

            }
            catch { }

        }


        public bool checkContent(string ldID, string content)
        {
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename).ToLower();

                if (html.Contains(content.ToLower()))
                    return true;
            }
            catch { }
            return false;
        }

        public Point FindByXpath(string ldID, string xpath)
        {

            Point point = new Point();

            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                HtmlNode.ElementsFlags.Remove("form");
                document.LoadHtml(html);
                HtmlNode node = document.DocumentNode.SelectSingleNode(xpath);

                if (node != null)
                {
                    string text = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                    string[] arr = text.Split(']');
                    if (arr.Length > 0)
                    {
                        string[] arr1 = arr[0].Split(',');
                        point.X = Convert.ToInt32(arr1[0]);
                        point.Y = Convert.ToInt32(arr1[1]);
                        return point;
                    }
                }

            }
            catch { }
            return point;
        }
        public Point FindByXpathResourceID(string ldID, string xpath, string datatext)
        {
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();

                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {
                    string text = node.Attributes["resource-id"].Value.ToString().ToLower();
                    if (text.Contains(datatext.ToLower()))
                    {
                        string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                        string[] arr = bound.Split(']');
                        if (arr.Length > 0)
                        {
                            string[] arr1 = arr[0].Split(',');
                            point.X = Convert.ToInt32(arr1[0]);
                            point.Y = Convert.ToInt32(arr1[1]);
                            return point;
                        }
                    }
                }


            }
            catch { }
            return point;
        }
        #endregion
        private Point intoMenu(string ldID)
        {
            Point point1 = new Point();
            Point point2 = new Point();
            DetechModel kq = new DetechModel();

            List<DetechModel> list_messenger = new List<DetechModel>();
            DetechModel model = new DetechModel();
            model.parent = "menu";
            model.content = "Nhắn tin";
            model.text = "Nhắn tin";
            model.node = "//node[contains(@class,'android.widget.Button')]";
            model.function = 1;
            list_messenger.Add(model);
            model = new DetechModel();
            model.parent = "menu";
            model.content = "cuộc trò chuyện";
            model.text = "cuộc trò chuyện";
            model.node = "//node[contains(@class,'android.widget.Button')]";
            model.function = 1;
            list_messenger.Add(model);

            List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
            DetechImageModel modelimg = new DetechImageModel();
            modelimg.function = 1;
            modelimg.name = "menu";
            modelimg.img = PointDefault.img_logout_menu;
            list_detechimg.Add(modelimg);

            modelimg = new DetechImageModel();
            modelimg.function = 1;
            modelimg.name = "menu";
            modelimg.img = PointDefault.img_logout_button;
            list_detechimg.Add(modelimg);


            DetechModel detech = new DetechModel();
            int i = 0;

        Lb_Start:
            detech = detechFunctionCatchImages(ldID, list_detechimg);
            if (detech.status)
                return detech.point;
            if (SettingTool.configld.versionld == "3.x")
            {
                return PointDefault.p_logoutmenu;
            }
            else
            {
                FindBoundDetech_unLower(ldID, list_messenger, ref point1, ref point2);
                if (point2.X > 0 || point2.Y > 0)
                {
                    Point point = new Point();
                    point.X = point2.X - 20;
                    point.Y = point2.Y + 70;
                    return point;
                }
                else
                {
                    i++;
                    if (i <= 5)
                    {
                        Delay(4);
                        goto Lb_Start;
                    }
                }
            }
            return new Point();
        }
        public DetechModel menuCon(string ldID, List<DetechModel> list_menuCon)
        {
            DetechModel kq = new DetechModel();
            int i = 0;
        Lb_Start:
            kq = detechFunction(ldID, list_menuCon);
            if (kq.status)
            {
                if (kq.function == 1)
                {
                    ClickOnLeapdroidPosition(ldID, kq.point);
                }
                else if (kq.function == 2)
                {
                    ClickOnLeapdroidPosition(ldID, kq.point);
                    return kq;
                }
                goto Lb_Start;
            }
            else
            {
                i++;
                if (i <= 5)
                {
                    goto Lb_Start;
                }
            }
            return kq;
        }
        public Point GetScreenResolution(string ldID)
        {
            string cmdCommand = "shell dumpsys display | Find \"mCurrentDisplayRect\"";
            string text = runAdb(ldID, cmdCommand);
            text = text.Substring(text.IndexOf("- "));
            text = text.Substring(text.IndexOf(' '), text.IndexOf(')') - text.IndexOf(' '));
            string[] array = text.Split(new char[]
    {
        ','
    });
            int x = Convert.ToInt32(array[0].Trim());
            int y = Convert.ToInt32(array[1].Trim());
            return new Point(x, y);
        }

        public void ClickOnLeapdroidPosition(string ldID, Point point)
        {
            string cmdCommand = string.Format("shell input tap {0} {1}", point.X, point.Y);
            runAdb(ldID, cmdCommand);
        }
        public void ClickHoldOnLeapdroidPosition(string ldID, Point point)
        {
            string cmdCommand = string.Format("shell input tap {0} {1}", point.X, point.Y);
            runAdb(ldID, cmdCommand);
        }
        public void ClickOnLeapdroidPosition(string ldID, int x, int y)
        {
            string cmdCommand = string.Format("shell input tap {0} {1}", x, y);
            runAdb(ldID, cmdCommand);
        }
        void Delay(double delay)
        {
            double delayTime = 0;
            while (delayTime < delay)
            {
                Thread.Sleep(TimeSpan.FromSeconds(1));
                delayTime++;
            }
        }
        public void scroll_down(string ldID)
        {
            if (SettingTool.configld.versionld == "4.x")
            {
                string cmd = "shell input swipe 300 500 300 1500";
                runAdb(ldID, cmd);
            }
            else
            {
                string cmd = "shell input swipe 250 140 250 400";
                runAdb(ldID, cmd);
            }
        }
        public void scroll_up_checkpoint(string ldID)
        {
            string cmd = "shell input swipe 200 450 200 200";

            runAdb(ldID, cmd);

        }
        public void scroll_up_thang1(string ldID)
        {
            string cmd = "shell input swipe 200 450 200 200";

            runAdb(ldID, cmd);

        }
        public void scroll_up(string ldID)
        {
            if (SettingTool.configld.versionld == "4.x")
            {
                string cmd = "shell input swipe 400 1700 400 300";

                runAdb(ldID, cmd);
            }
            else
            {
                string cmd = "shell input swipe 200 400 200 140";

                runAdb(ldID, cmd);
            }

        }

        public void scroll_up_mid(string ldID)
        {
            if (SettingTool.configld.versionld == "4.x")
            {
                string cmd = "shell input swipe 300 1700 300 1000";
                runAdb(ldID, cmd);
            }
            else
            {
                string cmd = "shell input swipe 250 400 250 200";
                runAdb(ldID, cmd);
            }

        }
        public void scroll_up_slow(string ldID)
        {
            if (SettingTool.configld.versionld == "4.x")
            {
                string cmd = "shell input swipe 300 1700 300 1000";
                runAdb(ldID, cmd);
            }
            else
            {
                string cmd = "shell input swipe 250 320 250 250";
                runAdb(ldID, cmd);
            }

        }
        public void scroll_up_slowmax(string ldID)
        {
            if (SettingTool.configld.versionld == "4.x")
            {
                string cmd = "shell input swipe 300 1700 300 1000";
                runAdb(ldID, cmd);
            }
            else
            {
                string cmd = "shell input swipe 250 320 250 200";
                runAdb(ldID, cmd);
            }

        }
        public void scroll_up_point(string ldID, Point pointA, Point pointB)
        {
            string cmd = string.Format("shell input swipe {0} {1} {2} {3}", pointA.X, pointA.Y, pointB.X, pointB.Y);
            runAdb(ldID, cmd);
        }
        public void scroll_down_mid(string ldID)
        {
            if (SettingTool.configld.versionld == "4.x")
            {
                string cmd = "shell input swipe 300 1000 300 1700";
                runAdb(ldID, cmd);
            }
            else
            {
                string cmd = "shell input swipe 250 200 300 400";
                runAdb(ldID, cmd);
            }

        }
        public void back(string ldID, int times, int delay = 1)
        {
            for (int i = 0; i < times; i++)
            {
                Delay(delay);
                Return(ldID);
                Delay(delay);
            }

        }

        public void Return(string ldID)
        {
            runAdb(ldID, "shell input keyevent KEYCODE_BACK");
        }

        public bool checkAppFinish(string device, string app, bool removeaccount = false)
        {
            try
            {
                int i = 0;
            Lb_Start:

                List<string> list_check = new List<string>();

                string check = checkListContent(device, SettingTool.lang.list_appfinish);
                if (check != null)
                {
                    return true;
                }
                Point point = new Point();
                list_check = new List<string>();
                list_check.Add("Next time you log in");
                list_check.Add("gỡ tài khoản nào đó khỏi thiết bị này");
                if (checkListContent(device, list_check) != null)
                {
                    back(device, 1);
                    Thread.Sleep(1000);
                    goto Lb_Start;
                }
                List<string> list_xpath = new List<string>();
                if (removeaccount)
                {
                    list_check = new List<string>();
                    list_check.Add("Menu");
                    point = FindByXpathDesc(device, "//node[contains(@class,'android.widget.ImageView')]", list_check);
                    if (point.Y > 0)
                    {
                        ClickOnLeapdroidPosition(device, point);

                        list_check = new List<string>();
                        list_check.Add("Remove account from device");
                        list_check.Add("Gỡ tài khoản khỏi thiết bị"); //thoong add
                        list_check.Add("Gỡ tài khoản");
                        list_check.Add("REMOVE ACCOUNT");
                        point = FindByXpath(device, "//node[contains(@class,'android.widget.TextView')]", list_check);
                        if (point.Y > 0)
                        {
                            ClickOnLeapdroidPosition(device, point);
                            point = FindByXpath(device, "//node[contains(@class,'android.widget.Button')]", list_check);
                            if (point.Y > 0)
                                ClickOnLeapdroidPosition(device, point);
                            goto Lb_Start;
                        }
                    }
                }
                list_check = new List<string>();
                list_check.Add("Log Into Another Account");
                list_check.Add("Đăng nhập bằng tài khoản khác");
                list_xpath = new List<string>();
                list_xpath.Add("//node[contains(@class,'android.widget.TextView')]");
                list_xpath.Add("//node[contains(@class,'android.widget.Button')]");
                point = FindByListXpath(device, list_xpath, list_check);
                if (point.X > 0 || point.Y > 0)
                {
                    //ClickOnLeapdroidPosition(device, point);
                    return true;
                }
                i++;
                if (i == 5)
                {
                    killApp(device, app);
                    //openAppFacebook(device, app); //thoong edit =>
                    runAdb(device, app);
                    goto Lb_Start;
                }
                point = FindByXpath(device, "//node[contains(@class,'android.widget.Button')]", SettingTool.lang.list_skip);
                if (point.X > 0 || point.Y > 0)
                {
                    ClickOnLeapdroidPosition(device, point);
                }
                if (i < 10)
                {
                    Thread.Sleep(1000);
                    goto Lb_Start;
                }

            }
            catch
            { }
            return false;

        }

        private bool verify(string device, string app, Account acc)
        {
            bool result = false;
        Lb_loggin:

            if (checkContent(device, "android.widget.ProgressBar"))
            {
                Delay(1);
                goto Lb_loggin;
            }
            else
            {
                if (hasLoginFail(device, acc) == false)
                {

                }
                else
                {
                    var point = FindByXpath(device, "//node[contains(@class,'android.widget.Button')]", SettingTool.lang.list_skip);
                    if (point.X > 0 || point.Y > 0)
                    {
                        ClickOnLeapdroidPosition(device, point);
                    Lb_process:
                        if (checkContent(device, "android.widget.ProgressBar"))
                        {
                            Delay(1);
                            goto Lb_process;
                        }
                    }

                    point = FindByXpathResourceID(device, "//node[contains(@class,'android.widget.EditText')]", "approvals_code");
                    List<string> ls_text = new List<string>();
                    ls_text.Add("Login Code");
                    ls_text.Add("Mã đăng nhập");
                    var point_198 = FindByXpath(device, "//node[contains(@class,'android.widget.EditText')]", ls_text);
                    if (point.X > 0 || point_198.Y > 0)
                    {
                        if (point.X > 0)
                            ClickOnLeapdroidPosition(device, point);
                        else
                            ClickOnLeapdroidPosition(device, point_198);
                        CustomerController control = new CustomerController();
                        TwoFaModel model = control.getCodeTwofa(acc.email.Trim(), acc.privatekey);
                        if (string.IsNullOrEmpty(model.message) == false)
                        {
                            PressOnLeapdroid(device, model.message);

                            point = FindByXpathResourceID(device, "//node[contains(@class,'android.widget.Button')]", "checkpointSubmitButton-actual-button");
                            ls_text.Clear();
                            ls_text.Add("Continue");
                            ls_text.Add("Tiếp tục");
                            point_198 = FindByXpath(device, "//node[contains(@class,'android.widget.Button')]", ls_text);
                            if (point.Y > 0 || point_198.Y > 0)
                            {
                                if (point.X > 0)
                                    ClickOnLeapdroidPosition(device, point.X + 10, point.Y + 10);
                                else
                                    ClickOnLeapdroidPosition(device, point_198.X + 10, point_198.Y + 10);
                                Delay(1);
                                if (point.X > 0) //neu ban 175 thi back
                                {
                                    back(device, 1);
                                    Delay(1);
                                    OpenLink(device, acc.app, "fb://newsfeed");
                                }
                                else
                                {
                                    point_198 = FindByXpath(device, "//node[contains(@class,'android.widget.Button')]", "OK");
                                    if (point_198.Y > 0)
                                    {
                                        bool result_check = checkContent(device, "Authentication Error");
                                        ClickOnLeapdroidPosition(device, point_198.X + 10, point_198.Y + 10);

                                        if (result_check)
                                            return false;
                                        else
                                            return true;
                                    }

                                }
                            }
                        }
                    }
                    ls_text.Clear();
                    ls_text.Add("Get Started");
                    ls_text.Add("Bắt đầu");
                    point = FindByXpath(device, "//node[contains(@class,'android.widget.Button')]", ls_text);
                    if (point.X > 0)
                    {
                        ClickOnLeapdroidPosition(device, point);
                        back(device, 1);

                    }
                }

            }

            return result;
        }
        public string OpenLink(string device, string app, string link)
        {
            string cmdCommand = string.Format(SettingTool.data["openlinkld"], link, app);
            string str = runAdb(device, cmdCommand);
            return str;
        }
        public bool hasLoginFail(string device, Account acc)
        {
            try
            {
                string check = checkListContent(device, SettingTool.lang.list_loi);
                if (check != null)
                {
                    acc.Thongbao = check;
                    return true;
                }

            }
            catch
            {
            }
            return false;
        }

        public void PressOnLeapdroid(string device, string keys)
        {
            string cmdCommand = String.Format(SettingTool.data["inputtextld"], keys.Replace(" ", "%s"));
            runAdb(device, cmdCommand);
        }
        public void PressOnLeapdroid_vietnamese(string device, string keys)
        {
            InputText_vietnamese(device, Base64Encode(keys));
        }
        public string Base64Encode(string plainText)
        {
            var plainTextBytes = System.Text.Encoding.UTF8.GetBytes(plainText);
            return System.Convert.ToBase64String(plainTextBytes);
        }
        public void PressEnter(string device)
        {
            string cmdCommand = "shell input keyevent KEYCODE_ENTER";
            runAdb(device, cmdCommand);
        }
        public void InputText_vietnamese(string device, string text)
        {
            string cmdCommand = String.Format("shell am broadcast -a ADB_INPUT_B64 --es msg '{0}' ", text);
            runAdb(device, cmdCommand);

        }
        //detech
        public void FindBoundDetech(string ldID, List<DetechModel> list_detech, ref Point point1, ref Point point2)
        {
            DetechModel kq = new DetechModel();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();

                document.LoadHtml(html);
                foreach (DetechModel model in list_detech)
                {
                    if (html.Contains(model.content.ToLower()))
                    {
                        HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(model.node);
                        if (nodes != null)
                        {
                            foreach (HtmlNode node in nodes)
                            {
                                string enable = node.Attributes["enabled"].Value.ToString();
                                if (enable == "true")
                                {
                                    try
                                    {
                                        string text = node.Attributes["text"].Value.ToString();
                                        string desc = node.Attributes["content-desc"].Value.ToString();
                                        if (text.Contains(model.text.ToLower()) || desc.Contains(model.text.ToLower()))
                                        {
                                            string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);

                                            string[] arr = bound.Split(']');
                                            if (arr.Length > 0)
                                            {
                                                string[] arr1 = arr[0].Split(',');
                                                point1.X = Convert.ToInt32(arr1[0]);
                                                point1.Y = Convert.ToInt32(arr1[1]);

                                                string databound = arr[1].Replace("[", "").Replace("]", "");
                                                string[] arr2 = databound.Split(',');
                                                point2.X = Convert.ToInt32(arr2[0]);
                                                point2.Y = Convert.ToInt32(arr2[1]);
                                            }
                                            return;
                                        }
                                    }
                                    catch
                                    {

                                    }

                                }

                            }
                        }
                    }
                }

            }
            catch { }

        }

        public void FindBoundDetech_unLower(string ldID, List<DetechModel> list_detech, ref Point point1, ref Point point2)
        {
            DetechModel kq = new DetechModel();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();

                document.LoadHtml(html);
                foreach (DetechModel model in list_detech)
                {
                    if (html.Contains(model.content))
                    {
                        HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(model.node);
                        if (nodes != null)
                        {
                            foreach (HtmlNode node in nodes)
                            {
                                string enable = node.Attributes["enabled"].Value.ToString();
                                if (enable == "true")
                                {
                                    try
                                    {
                                        string text = node.Attributes["text"].Value.ToString();
                                        string desc = node.Attributes["content-desc"].Value.ToString();
                                        if (text.Contains(model.text) || desc.Contains(model.text))
                                        {
                                            string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);

                                            string[] arr = bound.Split(']');
                                            if (arr.Length > 0)
                                            {
                                                string[] arr1 = arr[0].Split(',');
                                                point1.X = Convert.ToInt32(arr1[0]);
                                                point1.Y = Convert.ToInt32(arr1[1]);

                                                string databound = arr[1].Replace("[", "").Replace("]", "");
                                                string[] arr2 = databound.Split(',');
                                                point2.X = Convert.ToInt32(arr2[0]);
                                                point2.Y = Convert.ToInt32(arr2[1]);
                                            }
                                            return;
                                        }
                                    }
                                    catch
                                    {

                                    }

                                }

                            }
                        }
                    }
                }

            }
            catch { }

        }
        public DetechModel detechFunction(string ldID, List<DetechModel> list_detech, int vitri = 1)
        {
            DetechModel kq = new DetechModel();
            string html = "";
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);

                html = readFile(ldID, filename).ToLower();
                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                document.LoadHtml(html);
                int i = 0;
                foreach (DetechModel model in list_detech)
                {
                    if (html.Contains(model.content.ToLower()))
                    {
                        if (String.IsNullOrEmpty(model.node))
                        {
                            kq = model;
                            kq.status = true;
                            kq.function = model.function;
                            kq.point = point;
                            kq.parent = model.parent;
                            return kq;
                        }
                        else
                        {
                            HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(model.node.ToLower());
                            if (nodes != null)
                            {
                                foreach (HtmlNode node in nodes)
                                {
                                    string enable = node.Attributes["enabled"].Value.ToString();
                                    if (enable == "true")
                                    {
                                        try
                                        {

                                            string text = node.Attributes["text"].Value.ToString();
                                            string desc = node.Attributes["content-desc"].Value.ToString();
                                            if (text.Contains(model.text.ToLower()) || desc.Contains(model.text.ToLower()))
                                            {
                                                i++;
                                                if (i == vitri)
                                                {
                                                    string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                                    bound = bound.Replace("[", "");
                                                    string[] arr = bound.Split(']');
                                                    if (arr.Length > 0)
                                                    {
                                                        kq = model;
                                                        string[] arr1 = arr[0].Split(',');
                                                        point.X = Convert.ToInt32(arr1[0]);
                                                        point.Y = Convert.ToInt32(arr1[1]);
                                                        kq.status = true;
                                                        kq.function = model.function;
                                                        kq.point = point;

                                                        Point point2 = new Point();
                                                        string[] arr2 = arr[1].Split(',');
                                                        point2.X = Convert.ToInt32(arr2[0]);
                                                        point2.Y = Convert.ToInt32(arr2[1]);
                                                        kq.point2 = point2;
                                                        kq.parent = model.parent;
                                                        kq.data = node.Attributes["text"].Value.ToString();
                                                        kq.desc = node.Attributes["content-desc"].Value.ToString();
                                                        return kq;
                                                    }
                                                }
                                            }

                                        }
                                        catch
                                        {

                                        }

                                    }

                                }
                            }

                        }
                    }
                }

            }
            catch { }

            return kq;
        }
        public DetechModel detechFunctionOne(string ldID, DetechModel detech, int vitri = 1)
        {
            List<DetechModel> list_detech = new List<DetechModel>();
            list_detech.Add(detech);
            DetechModel kq = new DetechModel();
            string html = "";
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);

                html = readFile(ldID, filename).ToLower();
                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                document.LoadHtml(html);
                int i = 0;
                foreach (DetechModel model in list_detech)
                {
                    if (html.Contains(model.content.ToLower()))
                    {
                        if (String.IsNullOrEmpty(model.node))
                        {
                            kq = model;
                            kq.status = true;
                            kq.function = model.function;
                            kq.point = point;
                            kq.parent = model.parent;
                            return kq;
                        }
                        else
                        {
                            HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(model.node.ToLower());
                            if (nodes != null)
                            {
                                foreach (HtmlNode node in nodes)
                                {
                                    string enable = node.Attributes["enabled"].Value.ToString();
                                    if (enable == "true")
                                    {
                                        try
                                        {

                                            string text = node.Attributes["text"].Value.ToString();
                                            string desc = node.Attributes["content-desc"].Value.ToString();
                                            if (text.Contains(model.text.ToLower()) || desc.Contains(model.text.ToLower()))
                                            {
                                                i++;
                                                if (i == vitri)
                                                {
                                                    string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                                    bound = bound.Replace("[", "");
                                                    string[] arr = bound.Split(']');
                                                    if (arr.Length > 0)
                                                    {
                                                        kq = model;
                                                        string[] arr1 = arr[0].Split(',');
                                                        point.X = Convert.ToInt32(arr1[0]);
                                                        point.Y = Convert.ToInt32(arr1[1]);
                                                        kq.status = true;
                                                        kq.function = model.function;
                                                        kq.point = point;

                                                        Point point2 = new Point();
                                                        string[] arr2 = arr[1].Split(',');
                                                        point2.X = Convert.ToInt32(arr2[0]);
                                                        point2.Y = Convert.ToInt32(arr2[1]);
                                                        kq.point2 = point2;
                                                        kq.parent = model.parent;
                                                        kq.data = node.Attributes["text"].Value.ToString();
                                                        kq.desc = node.Attributes["content-desc"].Value.ToString();
                                                        return kq;
                                                    }
                                                }
                                            }

                                        }
                                        catch
                                        {

                                        }

                                    }

                                }
                            }

                        }
                    }
                }

            }
            catch { }

            return kq;
        }

        public List<DetechModel> detechFunctionListPoint(string ldID, List<DetechModel> list_detech)
        {
            List<DetechModel> list_kq = new List<DetechModel>();

            string html = "";
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);

                html = readFile(ldID, filename).ToLower();
                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                document.LoadHtml(html);

                foreach (DetechModel model in list_detech)
                {
                    if (html.Contains(model.content.ToLower()))
                    {
                        if (String.IsNullOrEmpty(model.node))
                        {
                            DetechModel kq = new DetechModel();
                            kq = model;
                            kq.status = true;
                            kq.function = model.function;
                            kq.point = point;
                            kq.parent = model.parent;
                            list_kq.Add(kq);
                        }
                        else
                        {
                            HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(model.node.ToLower());
                            if (nodes != null)
                            {
                                foreach (HtmlNode node in nodes)
                                {
                                    string enable = node.Attributes["enabled"].Value.ToString();
                                    if (enable == "true")
                                    {
                                        try
                                        {

                                            string text = node.Attributes["text"].Value.ToString();
                                            string desc = node.Attributes["content-desc"].Value.ToString();
                                            if (text.Contains(model.text.ToLower()) || desc.Contains(model.text.ToLower()))
                                            {

                                                string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                                string[] arr = bound.Split(']');
                                                if (arr.Length > 0)
                                                {
                                                    DetechModel kq = new DetechModel();
                                                    string[] arr1 = arr[0].Split(',');
                                                    point.X = Convert.ToInt32(arr1[0]);
                                                    point.Y = Convert.ToInt32(arr1[1]);
                                                    kq.status = true;
                                                    kq.function = model.function;
                                                    kq.point = point;
                                                    kq.parent = model.parent;
                                                    kq.data = node.Attributes["text"].Value.ToString();

                                                    list_kq.Add(kq);
                                                }

                                            }

                                        }
                                        catch
                                        {

                                        }

                                    }

                                }
                            }

                        }
                    }
                }

            }
            catch (Exception exx) { exx.ToString(); }

            return list_kq;
        }

        public DetechModel detechFunctionPlus(string ldID, List<DetechModel> list_detech)
        {
            DetechModel kq = new DetechModel();
            string html = "";
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                html = readFile(ldID, filename).ToLower();

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                document.LoadHtml(html);
                foreach (DetechModel model in list_detech)
                {
                    if (html.Contains(model.content.ToLower()))
                    {
                        if (String.IsNullOrEmpty(model.node))
                        {
                            kq = model;
                            kq.status = true;
                            kq.function = model.function;
                            kq.point = point;
                            kq.parent = model.parent;
                            return kq;
                        }
                        else
                        {
                            HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(model.node.ToLower());
                            if (nodes != null)
                            {
                                foreach (HtmlNode node in nodes)
                                {
                                    string enable = node.Attributes["enabled"].Value.ToString();
                                    if (enable == "true")
                                    {
                                        try
                                        {
                                            string text = node.Attributes["text"].Value.ToString();
                                            string desc = node.Attributes["content-desc"].Value.ToString();
                                            if (text.Contains(model.text.ToLower()) || desc.Contains(model.text.ToLower()))
                                            {
                                                string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                                string[] arr = bound.Split(']');
                                                if (arr.Length > 0)
                                                {
                                                    string[] check = arr[1].Split(',');

                                                    decimal checkPlusY = decimal.Parse(check[1]);
                                                    string[] arr1 = arr[0].Split(',');
                                                    if (checkPlusY > 0 && checkPlusY > Convert.ToDecimal(arr1[1]))
                                                    {
                                                        kq = model;
                                                        point.X = Convert.ToInt32(arr1[0]);
                                                        point.Y = Convert.ToInt32(arr1[1]);
                                                        kq.status = true;
                                                        kq.function = model.function;
                                                        kq.point = point;
                                                        kq.parent = model.parent;
                                                        return kq;
                                                    }

                                                }
                                            }
                                        }
                                        catch
                                        {

                                        }

                                    }

                                }
                            }

                        }
                    }
                }

            }
            catch (Exception exx) { exx.ToString(); }

            return kq;
        }

        public DetechModel detechFunctionContent(string ldID, List<DetechModel> list_detech)
        {
            DetechModel kq = new DetechModel();
            string html = "";
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                html = readFile(ldID, filename).ToLower();

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                document.LoadHtml(html);
                foreach (DetechModel model in list_detech)
                {
                    HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(model.node.ToLower());
                    if (nodes != null)
                    {
                        foreach (HtmlNode node in nodes)
                        {
                            if (!string.IsNullOrEmpty(node.Attributes["text"].Value))
                            {
                                string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                string[] arr = bound.Split(']');
                                string[] arr1 = arr[0].Split(',');

                                point.X = Convert.ToInt32(arr1[0]);
                                point.Y = Convert.ToInt32(arr1[1]);
                                kq.point = point;
                                kq.text = node.Attributes["text"].Value;
                                kq.status = true;
                                return kq;
                            }
                        }
                    }
                }
            }
            catch (Exception exx) { exx.ToString(); }

            return kq;
        }

        public bool detechFunctionCheckable(string ldID, List<DetechModel> list_detech)
        {

            string html = "";
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                document.LoadHtml(html);
                foreach (DetechModel model in list_detech)
                {
                    HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(model.node.ToLower());
                    if (nodes != null)
                    {
                        foreach (HtmlNode node in nodes)
                        {
                            string enable = node.Attributes["enabled"].Value.ToString();
                            if (enable == "true")
                            {
                                try
                                {
                                    string check = node.Attributes["checked"].Value.ToString();
                                    string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                    string[] arr = bound.Split(']');
                                    string[] arr1 = arr[0].Split(',');
                                    var point = new Point();
                                    point.X = Convert.ToInt32(arr1[0]);
                                    point.Y = Convert.ToInt32(arr1[1]);

                                    if (check == "true")

                                        return true;

                                    else
                                        return false;
                                }
                                catch
                                {

                                }
                            }

                        }
                    }
                }

            }
            catch (Exception exx) { exx.ToString(); }

            return false;
        }

        public bool logoutloginFacebookLD(userLD u, Account acc, CancellationToken token)
        {
            try
            {
                int i = 0;

                bool has_login = false;

                DetechModel dtmodel = new DetechModel();
                dtmodel.content = "Xóa tài khoản khỏi thiết bị";
                dtmodel.text = "Xóa tài khoản khỏi thiết bị";
                dtmodel.function = 1;
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.content = "Smart Lock?";
                //dtmodel.text = "Không bao giờ";
                //dtmodel.function = 1;
                //dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.content = "Cho phép Facebook truy cập";
                //dtmodel.text = "Cho phép";
                //dtmodel.function = 1;
                //dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.content = "Meet up with friends";
                //dtmodel.text = "Gặp gỡ bạn bè";
                //dtmodel.function = 0;
                //dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.content = "Gặp gỡ bạn bè";
                //dtmodel.text = "Gặp gỡ bạn bè";
                //dtmodel.function = 0;
                //dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.content = "Mất kết nối";
                //dtmodel.text = "Mất kết nối";
                //dtmodel.function = -1;
                //dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.content = "Đăng nhập không thành công";
                //dtmodel.text = "Đăng nhập không thành công";
                //dtmodel.function = -1;
                //dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.content = "Marketplace giờ đã là Lối tắt";
                //dtmodel.text = "Marketplace giờ đã là Lối tắt";
                //dtmodel.function = 0;
                //dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.content = "Tìm hiểu thêm về lý do bạn nhìn thấy";
                //dtmodel.text = "Tìm hiểu thêm về lý do bạn nhìn thấy";
                //dtmodel.function = 0;
                //dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.content = "Facebook sẽ tuyệt vời hơn";
                //dtmodel.text = "Bắt đầu";
                //dtmodel.function = 1;
                //dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.parent = "FbStop";
                //dtmodel.content = "Mở lại ứng dụng";
                //dtmodel.text = "Mở lại ứng dụng";
                //dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                //dtmodel.function = 1;
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.parent = "closeFb";
                //dtmodel.content = "Đóng ứng dụng";
                //dtmodel.text = "Đóng ứng dụng";
                //dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                //dtmodel.function = -2;
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.parent = "";
                //dtmodel.content = "Đóng";
                //dtmodel.text = "Đóng";
                //dtmodel.node = "//node[contains(@class,'android.view.View')]";
                //dtmodel.function = 1;
                //SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "logout";
                dtmodel.content = "ĐĂNG XUẤT";
                dtmodel.text = "ĐĂNG XUẤT";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.parent = "";
                //dtmodel.content = "BẬT";
                //dtmodel.text = "BẬT";
                //dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                //dtmodel.function = 1;
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.parent = "";
                //dtmodel.content = "Ứng dụng của bạn đã cũ";
                //dtmodel.text = "NHẮC TÔI SAU";
                //dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                //dtmodel.function = 1;
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.parent = "";
                //dtmodel.content = "Sai mật khẩu";
                //dtmodel.text = "Sai mật khẩu";
                //dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                //dtmodel.function = -1;
                //SettingTool.lang.list_detech.Add(dtmodel);

                //dtmodel = new DetechModel();
                //dtmodel.parent = "";
                //dtmodel.content = "Tap to Retry";
                //dtmodel.text = "Tap to Retry";
                //dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                //dtmodel.function = -1;
                //SettingTool.lang.list_detech.Add(dtmodel);

                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();

                DetechImageModel model = new DetechImageModel();
                model.img = PointDefault.img_login_inputphone;
                model.name = "input phone";
                model.function = 2;
                list_detechimg.Add(model);

                model = new DetechImageModel();
                model.img = PointDefault.img_login_buttonaccept;
                model.name = "accept button";
                model.function = 1;
                list_detechimg.Add(model);

                model = new DetechImageModel();
                model.img = Properties.Resources._3x_nothank;
                model.name = "nothank";
                model.function = 1;
                list_detechimg.Add(model);

                int logout = 0;
                bool has_loginpoint = false;
                bool has_loginclick = false;
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                //check login
                DetechModel kqscreen = checkScreen(acc.ldid);
                if (kqscreen.parent == "checkpoint")
                {
                    acc.Thongbao = "Checkpoint";
                    return false;
                }
                else
                {
                    if (kqscreen.parent == "next")
                    {
                        DetechModel kqnext = detechFunction(acc.ldid, SettingTool.lang.list_detech);
                        if (kqnext.status)
                        {

                            ClickOnLeapdroidPosition(acc.ldid, kqnext.point);
                            goto Lb_start;
                        }
                    }
                    else
                    {
                        if (kqscreen.parent == "maintab")
                        {
                            Delay(3);
                            return true;
                        }
                        else
                        {
                            if (kqscreen.parent == "confirm")
                            {
                                acc.Thongbao = "Tk chưa xác minh";
                                return false;
                            }
                        }
                    }
                }
                if (has_loginclick == false)
                {
                    has_loginclick = true;
                    //if (has_loginpoint == false)
                    //{
                    //    //login bằng point
                    //    loginPoint(acc, token);
                    //    has_loginpoint = true;
                    //    goto Lb_start;
                    //}
                    //else
                    //{
                    loginFacebookLDImage(acc, token);
                    //}
                }

                DetechModel kq = detechFunction(acc.ldid, SettingTool.lang.list_detech);
                if (!kq.status)
                {

                    DetechModel kqImage = detechFunctionCatchImages(acc.ldid, list_detechimg);
                    if (kqImage.function == 2)
                        loginFacebookLDImage(acc, token);
                    else if (kqImage.status & kqImage.function == 1)
                    {
                        kq = kqImage;
                        kq.text = "";
                        kq.content = "";
                    }
                }
                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -2:
                            {
                                if (kq.parent == "closeFb")
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    createFolder(acc.ldid, "com.facebook.katana");
                                    runApp(acc.ldid, "com.facebook.katana");
                                }
                                break;
                            }
                        case -1:
                            {
                                acc.Thongbao = kq.text;
                                return false;
                            }

                        case 0:
                            {
                                back(acc.ldid, 1);
                                break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                Thread.Sleep(1000);
                                if (kq.parent == "logout")
                                {
                                    logout++;
                                    if (logout > 1)
                                        return false;
                                }

                                if (has_login)
                                {
                                    Thread.Sleep(7000);
                                    has_login = false;
                                }
                                else
                                {
                                    if (kq.content.Contains("LOG IN") || kq.content.Contains("ĐĂNG NHẬP") || kq.content.Contains("just tap your profile picture instead") || kq.content.Contains("nhấn vào ảnh đại diện") || kq.content.Contains("lưu thông tin đăng nhập") || kq.content.Contains("lưu đăng nhập"))
                                    {
                                        Thread.Sleep(5000);
                                    }
                                }
                                break;
                            }
                        case 2:
                            {
                                if (kq.parent == "email")
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    Thread.Sleep(1000);
                                    if (acc.id == null || acc.id == "")
                                        PressOnLeapdroid(acc.ldid, acc.email.Trim());
                                    else
                                        PressOnLeapdroid(acc.ldid, acc.id.Trim());
                                    Delay(3);
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point.X, kq.point.Y - 30);
                                    Delay(1);


                                    var kqpass = detechFunction(acc.ldid, SettingTool.lang.list_detechpass);
                                    if (kqpass.status)
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kqpass.point);
                                        Delay(1);
                                        PressOnLeapdroid_vietnamese(acc.ldid, acc.Password);
                                        has_login = true;
                                    }
                                    else
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, 130, 1100);
                                        Delay(1);
                                        string pass1 = acc.Password.Trim().Substring(0, acc.Password.Trim().Length - 1);
                                        string pass2 = acc.Password.Trim().Substring(acc.Password.Trim().Length - 1, 1);
                                        PressOnLeapdroid_vietnamese(acc.ldid, pass1);
                                        Delay(1);
                                        PressOnLeapdroid_vietnamese(acc.ldid, pass2);
                                    }
                                    Delay(1);
                                    ClickOnLeapdroidPosition(acc.ldid, 130, 1300);
                                }
                                else
                                {
                                    if (kq.parent == "twofa")
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                        CustomerController control = new CustomerController();
                                        TwoFaModel model2fa = control.getCodeTwofa(acc.email.Trim(), acc.privatekey);
                                        if (string.IsNullOrEmpty(model2fa.message) == false)
                                        {
                                            PressOnLeapdroid(acc.ldid, model2fa.message);
                                        }
                                        else
                                        {
                                            acc.TrangThai = "Authentication Error";
                                            return false;
                                        }
                                        Delay(1);

                                        if (SettingTool.configld.versionld == "3.x")
                                        {
                                            ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_login_2fa);
                                            Delay(1);
                                        }
                                        else
                                        {
                                            model = new DetechImageModel();
                                            model.img = Properties.Resources._1_continue_login;
                                            model.name = "2fa";
                                            model.function = 1;

                                            DetechModel kqImage = detechFunctionCatchImage(acc.ldid, model);

                                            if (kqImage.status)
                                            {
                                                ClickOnLeapdroidPosition(acc.ldid, kqImage.point);
                                            }
                                            else
                                            {
                                                ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_login_2fa);
                                                Delay(1);
                                            }
                                        }

                                    }

                                }

                                break;
                            }
                        case 3:
                            {
                                //update token cookie
                                if (SettingTool.configld.has_savetoken)
                                {
                                    SaveTokenCookies(acc);
                                }

                                return true;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    i++;
                    if (i <= 6)
                    {
                        goto Lb_start;

                    }

                }
            }
            catch
            { }
            return false;
        }
        public bool loginPoint(Account acc, CancellationToken token)
        {
            try
            {
                List<string> list_finish = new List<string>();
                list_finish.Add("Viết bài trên Facebook");
                list_finish.Add("Phát tất cả các tin");
                list_finish.Add("Máy ảnh");
                list_finish.Add("Camera");

                list_finish.Add("Notifications");
                list_finish.Add("Xem thêm");
                list_finish.Add("bài viết được đề xuất");
                list_finish.Add("bạn đang nghĩ gì");
                list_finish.Add("giờ đã là lối tắt");
                if (checkExitsListContent(acc.ldid, list_finish))
                {
                    return true;
                }

                //Delay(2);
                List<DetechModel> list_detech = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "password";
                data.content = "Menu";
                data.text = "Menu";
                data.node = "//node[contains(@class,'android.widget.ImageView')]";
                data.function = 1;
                list_detech.Add(data);

                DetechModel ls_point = detechFunction(acc.ldid, list_detech);
                if (ls_point.status == false)
                {
                    //click nut dang nhap o phien ban 299
                    if (SettingTool.configld.appversion == "Facebook 299")
                    {
                        ClickOnLeapdroidPosition(acc.ldid, 50, 320);
                        Thread.Sleep(1000);
                    }
                    Delay(2);
                    ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_login_email);
                    Delay(2);
                    if (string.IsNullOrEmpty(acc.id.Trim()))
                        PressOnLeapdroid_vietnamese(acc.ldid, acc.email.Trim());
                    else

                        PressOnLeapdroid_vietnamese(acc.ldid, acc.id.Trim());
                    ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_login_email.X + 100, PointDefault.p_login_email.Y);
                }
                //  MessageBox.Show("click");

                Delay(1);
                //tab xuong dang nhap
                runAdb(acc.ldid, "shell input keyevent 61");
                // ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_login_password);
                Delay(1);
                //string pass1 = acc.Password.Substring(0, acc.Password.Length - 1);
                //string pass2 = acc.Password.Substring(acc.Password.Length - 1, 1);
                //PressOnLeapdroid_vietnamese(acc.ldid, pass1);
                //Delay(1);
                PressOnLeapdroid_vietnamese(acc.ldid, acc.Password.Trim());
                Delay(3);
                //press enter
                runAdb(acc.ldid, "shell input keyevent 66");
                //  ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_login_buttonlogin);
                Delay(2);
                return true;
            }
            catch
            {

            }
            return false;
        }
        //login facebook 2021
        public bool loginFacebookTuongTac(userLD u, Account acc, CancellationToken token)
        {
            try
            {
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "TIẾP TỤC BẰNG TIẾNG ANH";
                model.text = "TIẾP TỤC BẰNG TIẾNG ANH";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;
                List<DetechModel> ls_model = new List<DetechModel>();
                ls_model.Add(model);
                int loi = 0;

            Lb_start:
                loi++;
                if (loi > 50)
                {
                    return false;
                }
                if (token.IsCancellationRequested)
                {
                    return false;
                }
                if (checkContent(acc.ldid, "Bạn có thể tìm Marketplace"))
                    back(acc.ldid, 1);
                DetechModel kqscreen = checkScreen(acc.ldid);
                //kiem tra man hinh
                if (kqscreen.status)
                {
                    if (kqscreen.parent == "login")
                    {

                        #region dang nhap tai khoan
                        u.setStatus(acc.ldid, "Kiểm tra đăng nhập");
                        //login
                        List<Bitmap> ls_image = new List<Bitmap>();
                        List<string> ls_name = new List<string>();

                        ls_image.Add(Properties.Resources._2_inputid_sodienthoai);
                        ls_name.Add("2_inputid_sodienthoai");
                        ls_image.Add(Properties.Resources._1_phoneEmail);
                        ls_name.Add("2_inputid_sodienthoai");
                        ls_image.Add(Properties.Resources._4x_phoneEmail);
                        ls_name.Add("2_inputid_sodienthoai");
                        ls_image.Add(Properties.Resources._2_inputid_sodienthoai_3x);
                        ls_name.Add("2_inputid_sodienthoai");

                        DetechModel kq = detechFunctionCatchImage(acc.ldid, ls_image, ls_name);
                        if (kq.status)
                        {
                            u.setStatus(acc.ldid, "Input UID");
                            ClickOnLeapdroidPosition(acc.ldid, kq.point);

                            if (acc.id == null || acc.id == "")
                                PressOnLeapdroid(acc.ldid, acc.email.Trim());
                            else
                                PressOnLeapdroid(acc.ldid, acc.id.Trim());
                            Delay(1);
                            if (SettingTool.configld.versionld == "3.x")
                                ClickOnLeapdroidPosition(acc.ldid, kq.point.X + 200, kq.point.Y + 10);
                            else
                                ClickOnLeapdroidPosition(acc.ldid, kq.point.X + 600, kq.point.Y);

                            //kiem tra mat khau
                            ls_image = new List<Bitmap>();
                            ls_name = new List<string>();
                            ls_image.Add(Properties.Resources._2_inputpass_matkhau);
                            ls_name.Add("2_inputpass_matkhau");
                            ls_image.Add(Properties.Resources._2_inputpass_matkhau_win7);
                            ls_name.Add("2_inputpass_matkhau");
                            ls_image.Add(Properties.Resources._2_inputpass_matkhau_3x);
                            ls_name.Add("2_inputpass_matkhau");
                            ls_image.Add(Properties.Resources._1_password);
                            ls_name.Add("2_inputpass_matkhau");
                            ls_image.Add(Properties.Resources._4x_inputpass_matkhau);
                            ls_name.Add("2_inputpass_matkhau");

                            kq = detechFunctionCatchImage(acc.ldid, ls_image, ls_name);
                            if (kq.status)
                            {
                                u.setStatus(acc.ldid, "Input Password");

                                ClickOnLeapdroidPosition(acc.ldid, kq.point.X + 10, kq.point.Y + 10);
                                Thread.Sleep(500);
                                PressOnLeapdroid_vietnamese(acc.ldid, acc.Password.Trim());

                                //Nhan nut dang nhap
                                ls_image = new List<Bitmap>();
                                ls_name = new List<string>();

                                ls_image.Add(Properties.Resources._1_dangnhap);
                                ls_name.Add("1_login_dangnhap");
                                ls_image.Add(Properties.Resources._1_login1);
                                ls_name.Add("1_login_dangnhap");
                                ls_image.Add(Properties.Resources._1_login_dangnhap);
                                ls_name.Add("1_login_dangnhap");
                                ls_image.Add(Properties.Resources._1_login_dangnhap_3x);
                                ls_name.Add("1_login_dangnhap");
                                ls_image.Add(Properties.Resources._1_login);
                                ls_name.Add("1_login_dangnhap");
                                ls_image.Add(Properties.Resources._4x_login);
                                ls_name.Add("1_login_dangnhap");
                                kq = detechFunctionCatchImage(acc.ldid, ls_image, ls_name);
                                if (kq.status)
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);

                                    for (int step = 0; step < 15; step++)
                                    {

                                        List<DetechModel> list_2fa = new List<DetechModel>();
                                        DetechModel dtmodel = new DetechModel();
                                        dtmodel.content = "Yêu cầu xác thực hai yếu tố";
                                        dtmodel.text = "OK";
                                        dtmodel.function = 1;
                                        dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                        list_2fa.Add(dtmodel);

                                        dtmodel = new DetechModel();
                                        dtmodel.content = "cần có mã đăng nhập";
                                        dtmodel.text = "OK";
                                        dtmodel.function = 1;
                                        dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                        list_2fa.Add(dtmodel);

                                        dtmodel = new DetechModel();
                                        dtmodel.content = "Two-Factor Authentication";
                                        dtmodel.text = "OK";
                                        dtmodel.function = 1;
                                        dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                        list_2fa.Add(dtmodel);

                                        Thread.Sleep(1000);
                                        DetechModel kq_2fa = detechFunction(acc.ldid, list_2fa);
                                        if (kq_2fa.status)
                                        {
                                            u.setStatus(acc.ldid, "Input 2fa");
                                            ClickOnLeapdroidPosition(acc.ldid, kq_2fa.point);
                                            Thread.Sleep(500);

                                            list_2fa = new List<DetechModel>();
                                            dtmodel = new DetechModel();
                                            dtmodel.content = "Mã đăng nhập";
                                            dtmodel.text = "Mã đăng nhập";
                                            dtmodel.function = 1;
                                            dtmodel.node = "//node[contains(@class,'android.widget.EditText')]";
                                            list_2fa.Add(dtmodel);

                                            dtmodel = new DetechModel();
                                            dtmodel.content = "Login Code";
                                            dtmodel.text = "Login Code";
                                            dtmodel.function = 1;
                                            dtmodel.node = "//node[contains(@class,'android.widget.EditText')]";
                                            list_2fa.Add(dtmodel);

                                            kq_2fa = detechFunction(acc.ldid, list_2fa);
                                            if (kq_2fa.status)
                                            {
                                                ClickOnLeapdroidPosition(acc.ldid, kq_2fa.point);
                                                CustomerController control = new CustomerController();
                                                TwoFaModel model2fa = control.getCodeTwofa(acc.email.Trim(), acc.privatekey);
                                                if (string.IsNullOrEmpty(model2fa.message) == false)
                                                {
                                                    PressOnLeapdroid(acc.ldid, model2fa.message);
                                                    Delay(1);
                                                    list_2fa = new List<DetechModel>();
                                                    dtmodel = new DetechModel();
                                                    dtmodel.content = "Tiếp tục";
                                                    dtmodel.text = "Tiếp tục";
                                                    dtmodel.function = 1;
                                                    dtmodel.node = "//node[contains(@class,'android.view.View')]";
                                                    list_2fa.Add(dtmodel);

                                                    dtmodel = new DetechModel();
                                                    dtmodel.content = "Continue";
                                                    dtmodel.text = "Continue";
                                                    dtmodel.function = 1;
                                                    dtmodel.node = "//node[contains(@class,'android.view.View')]";
                                                    list_2fa.Add(dtmodel);

                                                    kq_2fa = RunDetechFunction(acc.ldid, list_2fa);
                                                    if (kq_2fa.status)
                                                    {
                                                        ClickOnLeapdroidPosition(acc.ldid, kq_2fa.point);
                                                    }
                                                }
                                                else
                                                {
                                                    acc.TrangThai = "Authentication Error";
                                                    return false;
                                                }
                                                Delay(1);
                                                break;
                                            }
                                        }
                                    }
                                }
                            }


                        #endregion

                        }
                        else
                        {
                            //kiem tra cac dieu kien loi login
                            string data = "Tài khoản tạm thời không truy cập được|Lỗi xác thực|Sai thông tin đăng nhập|Tài khoản của bạn đã bị vô hiệu hóa|Vui lòng xác nhận danh tính|chỉ vài bước nữa|Xác nhận danh tính của bạn|Bạn đã nhập mật khẩu cũ hơn|Xác nhận tài khoản|Mất kết nối|Tìm hiểu thêm về lý do bạn nhìn thấy|Sai mật khẩu|Rất tiếc, Facebook đã dừng lại|Không thể tìm tài khoản|đăng nhập không thành công";

                            if (checkContentLD(acc.ldid, data))
                            {
                                return false;
                            }
                            else
                            {
                                //ngoai le


                            }
                        }
                    }
                    else
                    {
                        if (kqscreen.parent == "next")
                        {
                            #region button next
                            List<DetechModel> list_next = new List<DetechModel>();
                            DetechModel dtmodel = new DetechModel();
                            dtmodel.content = "Lưu thông tin đăng nhập của bạn";
                            dtmodel.text = "OK";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            dtmodel = new DetechModel();
                            dtmodel.content = "Bỏ qua";
                            dtmodel.text = "Bỏ qua";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            dtmodel = new DetechModel();
                            dtmodel.content = "skip";
                            dtmodel.text = "skip";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            dtmodel = new DetechModel();
                            dtmodel.content = "OK";
                            dtmodel.text = "OK";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            dtmodel = new DetechModel();
                            dtmodel.content = "Lúc khác";
                            dtmodel.text = "Lúc khác";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            dtmodel = new DetechModel();
                            dtmodel.content = "Facebook sẽ tuyệt vời hơn";
                            dtmodel.text = "Bắt đầu";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            dtmodel = new DetechModel();
                            dtmodel.content = "Tiếp";
                            dtmodel.text = "Tiếp";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            dtmodel = new DetechModel();
                            dtmodel.content = "Next";
                            dtmodel.text = "next";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            dtmodel = new DetechModel();
                            dtmodel.content = "TỪ CHỐI";
                            dtmodel.text = "TỪ CHỐI";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            dtmodel = new DetechModel();
                            dtmodel.content = "deny";
                            dtmodel.text = "deny";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            dtmodel = new DetechModel();
                            dtmodel.content = "CHO PHÉP";
                            dtmodel.text = "CHO PHÉP";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            dtmodel = new DetechModel();
                            dtmodel.content = "allow";
                            dtmodel.text = "allow";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            dtmodel = new DetechModel();
                            dtmodel.content = "TỪ CHỐI";
                            dtmodel.text = "TỪ CHỐI";
                            dtmodel.function = 1;
                            dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                            list_next.Add(dtmodel);

                            DetechModel kq_next = detechFunction(acc.ldid, list_next);
                            if (kq_next.status)
                            {
                                u.setStatus(acc.ldid, "Next step");
                                ClickOnLeapdroidPosition(acc.ldid, kq_next.point);
                                Thread.Sleep(200);
                            }
                            #endregion
                        }
                        else
                        {
                            if (kqscreen.parent == "maintab")
                            {
                                string data = "Tin|Chưa xem|trang cá nhân|viết bài|bài viết|Make a post|story|Viết bài trên Facebook|Phát tất cả các tin|Máy ảnh|Camera|Thông báo|Notifications|Xem thêm|bài viết được đề xuất|bạn đang nghĩ gì|giờ đã là lối tắt|trả lời";

                                if (checkContentLD(acc.ldid, data))
                                {
                                    return true;
                                }
                            }
                            else
                            {
                                if (kqscreen.parent == "loginsucess")
                                {
                                    string data = "Can't Connect";
                                    if (checkContentLD(acc.ldid, data))
                                    {
                                        acc.Thongbao = "Không thể kết nối";
                                        return false;
                                    }


                                    data = "Tin|Chưa xem|trang cá nhân|viết bài|bài viết|Make a post|story|Viết bài trên Facebook|Phát tất cả các tin|Máy ảnh|Camera|Thông báo|Notifications|Xem thêm|bài viết được đề xuất|bạn đang nghĩ gì|giờ đã là lối tắt|trả lời";

                                    if (checkContentLD(acc.ldid, data))
                                    {
                                        return true;
                                    }
                                    else
                                    {
                                        List<DetechModel> list_next = new List<DetechModel>();
                                        DetechModel dtmodel = new DetechModel();
                                        dtmodel.content = "phiên đã hết hạn";
                                        dtmodel.text = "đồng ý";
                                        dtmodel.function = 1;
                                        dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                        list_next.Add(dtmodel);

                                        dtmodel = new DetechModel();
                                        dtmodel.content = "Session Expired";
                                        dtmodel.text = "ok";
                                        dtmodel.function = 1;
                                        dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                        list_next.Add(dtmodel);

                                        DetechModel kq_next = detechFunction(acc.ldid, list_next);
                                        if (kq_next.status)
                                        {
                                            u.setStatus(acc.ldid, "Phiên hết hạn");
                                            ClickOnLeapdroidPosition(acc.ldid, kq_next.point);
                                            Thread.Sleep(200);
                                        }

                                    }
                                }
                                else
                                {
                                    //login avatar
                                    if (kqscreen.parent == "loginavatar")
                                    {
                                        #region login avatar
                                        List<DetechModel> list_loginavatar = new List<DetechModel>();
                                        DetechModel dtmodel = new DetechModel();
                                        dtmodel.content = "Menu";
                                        dtmodel.text = "Menu";
                                        dtmodel.function = 1;
                                        dtmodel.node = "//node[contains(@class,'android.widget.ImageView')]";
                                        list_loginavatar.Add(dtmodel);

                                        DetechModel kq_loginavatar = detechFunction(acc.ldid, list_loginavatar);
                                        if (kq_loginavatar.status)
                                        {
                                            u.setStatus(acc.ldid, "Login Avatar");
                                            ClickOnLeapdroidPosition(acc.ldid, kq_loginavatar.point.X - 200, kq_loginavatar.point.Y);
                                            Thread.Sleep(200);

                                            list_loginavatar = new List<DetechModel>();
                                            dtmodel = new DetechModel();
                                            dtmodel.content = "";
                                            dtmodel.text = "";
                                            dtmodel.function = 1;
                                            dtmodel.node = "//node[contains(@class,'android.widget.EditText')]";
                                            list_loginavatar.Add(dtmodel);

                                            kq_loginavatar = detechFunction(acc.ldid, list_loginavatar);
                                            if (kq_loginavatar.status)
                                            {
                                                u.setStatus(acc.ldid, "Input password");
                                                ClickOnLeapdroidPosition(acc.ldid, kq_loginavatar.point);
                                                Thread.Sleep(200);
                                                PressOnLeapdroid_vietnamese(acc.ldid, acc.Password.Trim());
                                                list_loginavatar = new List<DetechModel>();
                                                dtmodel = new DetechModel();
                                                dtmodel.content = "ĐĂNG NHẬP";
                                                dtmodel.text = "ĐĂNG NHẬP";
                                                dtmodel.function = 1;
                                                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                                list_loginavatar.Add(dtmodel);

                                                kq_loginavatar = detechFunction(acc.ldid, list_loginavatar);

                                                if (kq_loginavatar.status)
                                                {
                                                    ClickOnLeapdroidPosition(acc.ldid, kq_loginavatar.point);
                                                    Delay(2);
                                                    //login 2fa
                                                    for (int step = 0; step < 5; step++)
                                                    {

                                                        List<DetechModel> list_2fa = new List<DetechModel>();
                                                        dtmodel = new DetechModel();
                                                        dtmodel.content = "Yêu cầu xác thực hai yếu tố";
                                                        dtmodel.text = "OK";
                                                        dtmodel.function = 1;
                                                        dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                                        list_2fa.Add(dtmodel);

                                                        dtmodel = new DetechModel();
                                                        dtmodel.content = "cần có mã đăng nhập";
                                                        dtmodel.text = "OK";
                                                        dtmodel.function = 1;
                                                        dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                                        list_2fa.Add(dtmodel);

                                                        Delay(1);
                                                        DetechModel kq_2fa = detechFunction(acc.ldid, list_2fa);
                                                        if (kq_2fa.status)
                                                        {
                                                            u.setStatus(acc.ldid, "Input 2fa");
                                                            ClickOnLeapdroidPosition(acc.ldid, kq_2fa.point);
                                                            Delay(1);

                                                            list_2fa = new List<DetechModel>();
                                                            dtmodel = new DetechModel();
                                                            dtmodel.content = "Mã đăng nhập";
                                                            dtmodel.text = "Mã đăng nhập";
                                                            dtmodel.function = 1;
                                                            dtmodel.node = "//node[contains(@class,'android.widget.EditText')]";
                                                            list_2fa.Add(dtmodel);
                                                            kq_2fa = detechFunction(acc.ldid, list_2fa);
                                                            if (kq_2fa.status)
                                                            {
                                                                ClickOnLeapdroidPosition(acc.ldid, kq_2fa.point);
                                                                CustomerController control = new CustomerController();
                                                                TwoFaModel model2fa = control.getCodeTwofa(acc.email.Trim(), acc.privatekey);
                                                                if (string.IsNullOrEmpty(model2fa.message) == false)
                                                                {
                                                                    PressOnLeapdroid(acc.ldid, model2fa.message);
                                                                    Delay(2);
                                                                    list_2fa = new List<DetechModel>();
                                                                    dtmodel = new DetechModel();
                                                                    dtmodel.content = "Tiếp tục";
                                                                    dtmodel.text = "Tiếp tục";
                                                                    dtmodel.function = 1;
                                                                    dtmodel.node = "//node[contains(@class,'android.view.View')]";
                                                                    list_2fa.Add(dtmodel);
                                                                    kq_2fa = RunDetechFunction(acc.ldid, list_2fa);
                                                                    if (kq_2fa.status)
                                                                    {
                                                                        ClickOnLeapdroidPosition(acc.ldid, kq_2fa.point);
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    acc.TrangThai = "Authentication Error";
                                                                    return false;
                                                                }
                                                                Delay(1);
                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            //truong hop khac cua login avatar
                                            list_loginavatar = new List<DetechModel>();
                                            dtmodel = new DetechModel();
                                            dtmodel.content = "";
                                            dtmodel.text = "";
                                            dtmodel.function = 1;
                                            dtmodel.node = "//node[contains(@class,'android.widget.EditText')]";
                                            list_loginavatar.Add(dtmodel);

                                            kq_loginavatar = detechFunction(acc.ldid, list_loginavatar);
                                            if (kq_loginavatar.status)
                                            {
                                                u.setStatus(acc.ldid, "Input password");
                                                ClickOnLeapdroidPosition(acc.ldid, kq_loginavatar.point);
                                                Thread.Sleep(200);
                                                PressOnLeapdroid_vietnamese(acc.ldid, acc.Password.Trim());
                                                list_loginavatar = new List<DetechModel>();
                                                dtmodel = new DetechModel();
                                                dtmodel.content = "ĐĂNG NHẬP";
                                                dtmodel.text = "ĐĂNG NHẬP";
                                                dtmodel.function = 1;
                                                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                                list_loginavatar.Add(dtmodel);

                                                kq_loginavatar = detechFunction(acc.ldid, list_loginavatar);

                                                if (kq_loginavatar.status)
                                                {
                                                    ClickOnLeapdroidPosition(acc.ldid, kq_loginavatar.point);
                                                    Thread.Sleep(100);
                                                    //login 2fa
                                                    for (int step = 0; step < 5; step++)
                                                    {

                                                        List<DetechModel> list_2fa = new List<DetechModel>();
                                                        dtmodel = new DetechModel();
                                                        dtmodel.content = "Yêu cầu xác thực hai yếu tố";
                                                        dtmodel.text = "OK";
                                                        dtmodel.function = 1;
                                                        dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                                        list_2fa.Add(dtmodel);

                                                        dtmodel = new DetechModel();
                                                        dtmodel.content = "cần có mã đăng nhập";
                                                        dtmodel.text = "OK";
                                                        dtmodel.function = 1;
                                                        dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                                        list_2fa.Add(dtmodel);

                                                        Thread.Sleep(50);
                                                        DetechModel kq_2fa = detechFunction(acc.ldid, list_2fa);
                                                        if (kq_2fa.status)
                                                        {
                                                            u.setStatus(acc.ldid, "Input 2fa");
                                                            ClickOnLeapdroidPosition(acc.ldid, kq_2fa.point);
                                                            Thread.Sleep(500);

                                                            list_2fa = new List<DetechModel>();
                                                            dtmodel = new DetechModel();
                                                            dtmodel.content = "Mã đăng nhập";
                                                            dtmodel.text = "Mã đăng nhập";
                                                            dtmodel.function = 1;
                                                            dtmodel.node = "//node[contains(@class,'android.widget.EditText')]";
                                                            list_2fa.Add(dtmodel);
                                                            kq_2fa = detechFunction(acc.ldid, list_2fa);
                                                            if (kq_2fa.status)
                                                            {
                                                                ClickOnLeapdroidPosition(acc.ldid, kq_2fa.point);
                                                                CustomerController control = new CustomerController();
                                                                TwoFaModel model2fa = control.getCodeTwofa(acc.email.Trim(), acc.privatekey);
                                                                if (string.IsNullOrEmpty(model2fa.message) == false)
                                                                {
                                                                    PressOnLeapdroid(acc.ldid, model2fa.message);

                                                                    list_2fa = new List<DetechModel>();
                                                                    dtmodel = new DetechModel();
                                                                    dtmodel.content = "Tiếp tục";
                                                                    dtmodel.text = "Tiếp tục";
                                                                    dtmodel.function = 1;
                                                                    dtmodel.node = "//node[contains(@class,'android.view.View')]";
                                                                    list_2fa.Add(dtmodel);
                                                                    kq_2fa = detechFunction(acc.ldid, list_2fa);
                                                                    if (kq_2fa.status)
                                                                    {
                                                                        ClickOnLeapdroidPosition(acc.ldid, kq_2fa.point);
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    acc.TrangThai = "Authentication Error";
                                                                    return false;
                                                                }
                                                                Delay(1);
                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                string data = "Tài khoản tạm thời không truy cập được|Lỗi xác thực|Sai thông tin đăng nhập|Tài khoản của bạn đã bị vô hiệu hóa|Vui lòng xác nhận danh tính|chỉ vài bước nữa|Xác nhận danh tính của bạn|Bạn đã nhập mật khẩu cũ hơn|Xác nhận tài khoản|Mất kết nối|Tìm hiểu thêm về lý do bạn nhìn thấy|Sai mật khẩu|Rất tiếc, Facebook đã dừng lại|Không thể tìm tài khoản|đăng nhập không thành công";

                                                if (checkContentLD(acc.ldid, data))
                                                {
                                                    return false;
                                                }
                                            }
                                        }
                                        #endregion
                                    }
                                    else
                                    {
                                        if (kqscreen.parent == "checkpoint")
                                        {
                                            u.setStatus(acc.ldid, "Tài khoản checkpoint");
                                            acc.Thongbao = "Tài khoản checkpoint";
                                            return false;
                                        }
                                        else
                                        {
                                            if (kqscreen.parent == "ImmersiveActivity")
                                            {
                                                //false
                                                string data = "Bắt đầu|android.webkit.webview|Thêm số di động";
                                                if (checkContentLD(acc.ldid, data))
                                                {
                                                    return false;
                                                }
                                                DetechModel dtmodel = new DetechModel();
                                                List<DetechModel> ls_ok = new List<DetechModel>();
                                                dtmodel.content = "Session Expired";
                                                dtmodel.text = "ok";
                                                dtmodel.function = 1;
                                                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                                ls_ok.Add(dtmodel);
                                                DetechModel kq = detechFunction(acc.ldid, ls_ok);
                                                if (kq.status)
                                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);

                                            }
                                            else
                                            {
                                                if (kqscreen.parent == "loading")
                                                {
                                                    u.setStatus(acc.ldid, "Loading");
                                                    Thread.Sleep(1000);
                                                    DetechModel kq = detechFunction(acc.ldid, ls_model);
                                                    if (kq.status)
                                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                                    Thread.Sleep(2000);
                                                }
                                                else if (kqscreen.parent == "post")
                                                {
                                                    back(acc.ldid, 1);

                                                    DetechModel dtmodel = new DetechModel();
                                                    dtmodel.parent = "";
                                                    dtmodel.content = "Bỏ";
                                                    dtmodel.text = "Bỏ";
                                                    dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                                                    dtmodel.function = 1;
                                                    List<DetechModel> ls_bo = new List<DetechModel>();
                                                    ls_bo.Add(dtmodel);
                                                    DetechModel kq = RunDetechFunction(acc.ldid, ls_bo);
                                                    if (kq.status)
                                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                                }

                                            }
                                        }
                                    }
                                }
                            }

                        }
                    }
                }
                else
                {
                    DetechModel dtmodel = new DetechModel();
                    dtmodel.parent = "";
                    dtmodel.content = "Facebook đã dừng lại";
                    dtmodel.text = "ok";
                    dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                    dtmodel.function = 1;
                    List<DetechModel> ls_ok = new List<DetechModel>();
                    ls_ok.Add(dtmodel);
                    DetechModel ok = detechFunction(acc.ldid, ls_ok);
                    if (ok.status)
                    {
                        ClickOnLeapdroidPosition(acc.ldid, ok.point);
                        deleteFolderFacebook(acc.ldid, "com.facebook.katana");
                        createFolder(acc.ldid, "com.facebook.katana");
                        runApp(acc.ldid, "com.facebook.katana");
                    }
                }

                goto Lb_start;

            }
            catch
            { }
            return false;
        }
        public bool loginFacebookLD(Account acc, CancellationToken token)
        {
            try
            {

                int i = 0;

                bool has_login = false;

                DetechModel dtmodel = new DetechModel();
                dtmodel.content = "Xóa tài khoản khỏi thiết bị";
                dtmodel.text = "Xóa tài khoản khỏi thiết bị";
                dtmodel.function = 1;
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.content = "Smart Lock?";
                dtmodel.text = "Không bao giờ";
                dtmodel.function = 1;
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.content = "Cho phép Facebook truy cập";
                dtmodel.text = "Cho phép";
                dtmodel.function = 1;
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.content = "Meet up with friends";
                dtmodel.text = "Gặp gỡ bạn bè";
                dtmodel.function = 0;
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.content = "Gặp gỡ bạn bè";
                dtmodel.text = "Gặp gỡ bạn bè";
                dtmodel.function = 0;
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.content = "Mất kết nối";
                dtmodel.text = "Mất kết nối";
                dtmodel.function = -1;
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.content = "Đăng nhập không thành công";
                dtmodel.text = "Đăng nhập không thành công";
                dtmodel.function = -1;
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.content = "Marketplace giờ đã là Lối tắt";
                dtmodel.text = "Marketplace giờ đã là Lối tắt";
                dtmodel.function = 0;
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.content = "Tìm hiểu thêm về lý do bạn nhìn thấy";
                dtmodel.text = "Tìm hiểu thêm về lý do bạn nhìn thấy";
                dtmodel.function = 0;
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.content = "Facebook sẽ tuyệt vời hơn";
                dtmodel.text = "Bắt đầu";
                dtmodel.function = 1;
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "FbStop";
                dtmodel.content = "Mở lại ứng dụng";
                dtmodel.text = "Mở lại ứng dụng";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "closeFb";
                dtmodel.content = "Đóng ứng dụng";
                dtmodel.text = "Đóng ứng dụng";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = -2;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Đóng";
                dtmodel.text = "Đóng";
                dtmodel.node = "//node[contains(@class,'android.view.View')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "logout";
                dtmodel.content = "ĐĂNG XUẤT";
                dtmodel.text = "ĐĂNG XUẤT";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "BẬT";
                dtmodel.text = "BẬT";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Ứng dụng của bạn đã cũ";
                dtmodel.text = "NHẮC TÔI SAU";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);


                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Chỉ vài bước nữa là bạn có thể đăng nhập lại";
                dtmodel.text = "Chỉ vài bước nữa là bạn có thể đăng nhập lại";
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                dtmodel.function = -1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Sai mật khẩu";
                dtmodel.text = "Sai mật khẩu";
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                dtmodel.function = -1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Photo";
                dtmodel.text = "Photo";
                dtmodel.node = "//node[contains(@class,'android.view.View')]";
                dtmodel.function = 3;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Not Now";
                dtmodel.text = "Not Now";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "TIẾP TỤC BẰNG TIẾNG ANH";
                dtmodel.text = "TIẾP TỤC BẰNG TIẾNG ANH";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Không thể tìm tài khoản";
                dtmodel.text = "Không thể tìm tài khoản";
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                dtmodel.function = -1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "TIẾP TỤC BẰNG TIẾNG";
                dtmodel.text = "TIẾP TỤC BẰNG TIẾNG";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);


                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Tải danh bạ lên";
                dtmodel.text = "Tải danh bạ lên";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Lúc khác";
                dtmodel.text = "Lúc khác";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Đóng";
                dtmodel.text = "Đóng";
                dtmodel.node = "//node[contains(@class,'android.view.View')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Two-Factor Authentication";
                dtmodel.text = "ok";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "location";
                dtmodel.content = "Allow Facebook to access";
                dtmodel.text = "Allow Facebook to access";
                dtmodel.node = "//node[contains(@class,'android.view.ViewGroup')]";
                dtmodel.function = 0;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "khóa tài khoản";
                dtmodel.text = "khóa tài khoản";
                dtmodel.node = "//node[contains(@class,'android.view.View')]";
                dtmodel.function = -1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Tạo bài viết";
                dtmodel.text = "Tạo bài viết";
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                dtmodel.function = 0;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "login";
                dtmodel.content = "cần mã";
                dtmodel.text = "OK";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Phiên đã hết hạn";
                dtmodel.text = "ĐỒNG Ý";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Facebook hiện không phản hồi";
                dtmodel.text = "Đợi";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "Session";
                dtmodel.text = "OK";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "";
                dtmodel.content = "đã dừng lại";
                dtmodel.text = "Ok";
                dtmodel.node = "//node[contains(@class,'android.widget.Button')]";
                dtmodel.function = 1;
                SettingTool.lang.list_detech.Add(dtmodel);

                dtmodel = new DetechModel();
                dtmodel.parent = "closeFb";
                dtmodel.content = "Không thể kết nối";
                dtmodel.text = "Không thể kết nối";
                dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                dtmodel.function = -2;
                SettingTool.lang.list_detech.Insert(0, dtmodel);

                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();

                DetechImageModel model = new DetechImageModel();
                model.img = PointDefault.img_login_inputphone;
                model.name = "input phone";
                model.function = 2;
                list_detechimg.Add(model);

                model = new DetechImageModel();
                model.img = PointDefault.img_login_buttonaccept;
                model.name = "accept button";
                model.function = 1;
                list_detechimg.Add(model);

                model = new DetechImageModel();
                model.img = Properties.Resources._3x_nothank;
                model.name = "nothank";
                model.function = 1;
                list_detechimg.Add(model);

                int logout = 0;
                //  bool has_loginpoint = false;
                // bool has_loginclick = false;
                List<string> list_finish = new List<string>();
                list_finish.Add("Viết bài trên Facebook");
                list_finish.Add("Phát tất cả các tin");
                list_finish.Add("Máy ảnh");
                list_finish.Add("Camera");
                list_finish.Add("Notifications");
                list_finish.Add("Xem thêm");
                list_finish.Add("bài viết được đề xuất");
                list_finish.Add("bạn đang nghĩ gì");
                list_finish.Add("giờ đã là lối tắt");
                list_finish.Add("Bình luận");
                list_finish.Add("comment");
                int max_inputUID = 0;
                int max_close = 0;
                bool loginimage = false;
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                //check login
                //DetechModel kqscreen = checkScreen(acc.ldid);
                //if (kqscreen.status)
                //{
                //    if (kqscreen.parent == "checkpoint")
                //    {
                //        acc.Thongbao = "Checkpoint";
                //        return false;
                //    }
                //    else
                //    {
                //        if (kqscreen.parent == "next")
                //        {
                //            DetechModel kqnext = detechFunction(acc.ldid, SettingTool.lang.list_detech);
                //            if (kqnext.status)
                //            {
                //                ClickOnLeapdroidPosition(acc.ldid, kqnext.point);
                //                goto Lb_start;
                //            }
                //        }
                //        else
                //        {
                //            if (kqscreen.parent == "maintab")
                //            {
                //                Delay(3);
                //                return true;
                //            }
                //            else
                //            {
                //                if (kqscreen.parent == "confirm")
                //                {
                //                    acc.Thongbao = "Tk chưa xác minh";
                //                    return false;
                //                }
                //                else
                //                {
                //                    if (kqscreen.parent == "khangspam")
                //                    {
                //                        acc.Thongbao = "Kháng Spam";
                //                        List<DetechImageModel> list_imagekhang = new List<DetechImageModel>();
                //                        DetechImageModel detechimg = new DetechImageModel();
                //                        detechimg.name = "khangspam";
                //                        detechimg.function = 1;
                //                        detechimg.img = Properties.Resources._3x_share_video_khang_spam;
                //                        list_imagekhang.Add(detechimg);
                //                        DetechModel kq_image = detechFunctionCatchImages(acc.ldid, list_imagekhang);
                //                        if (kq_image.status)
                //                        {
                //                            ClickOnLeapdroidPosition(acc.ldid, kq_image.point.X + 20, kq_image.point.Y + 20);
                //                            Delay(1);
                //                        }
                //                        else
                //                        {
                //                            acc.Thongbao = "báo spam";
                //                            return false;
                //                        }

                //                    }
                //                    else
                //                    {
                //                        if (kqscreen.parent == null)
                //                        {
                //                            null_max++;
                //                            if (null_max > 10)
                //                                return false;
                //                            else
                //                                goto Lb_start;
                //                        }
                //                        else
                //                        {
                //                            if (kqscreen.parent == "ImmersiveActivity")
                //                            {
                //                                List<DetechImageModel> list_image72h = new List<DetechImageModel>();
                //                                DetechImageModel detechimg = new DetechImageModel();
                //                                detechimg.name = "khangspam";
                //                                detechimg.function = 1;
                //                                detechimg.img = Properties.Resources._3x_checkpoint_72h;
                //                                list_image72h.Add(detechimg);
                //                                DetechModel kq_image = detechFunctionCatchImages(acc.ldid, list_image72h);
                //                                if (kq_image.status)
                //                                {
                //                                    acc.Thongbao = "Account checkpoint 72h";
                //                                    return false;
                //                                }
                //                            }
                //                            else
                //                            {
                //                                if (kqscreen.parent == "story")
                //                                {
                //                                    activeNewfeed(acc.ldid, "com.facebook.katana");
                //                                }
                //                                else
                //                                {
                //                                    if (checkExitsListContent(acc.ldid, list_finish))
                //                                    {
                //                                        return true;
                //                                    }
                //                                }
                //                            }

                //                        }
                //                    }
                //                }
                //            }
                //        }
                //    }
                //}

                //if (has_loginclick == false)
                //{
                //    if (has_loginclick == false)
                //    {
                //        has_loginclick = true;
                //        if (has_loginpoint == false)
                //        {
                //            //login bằng point
                //            loginPoint(acc, token);
                //            has_loginpoint = true;
                //            goto Lb_start;
                //        }
                //        else
                //        {
                //            loginFacebookLDImage(acc);
                //        }
                //    }
                //}
                //else
                //{
                //Lb_Check:
                //    if (checkContent(acc.ldid, "Đang đăng nhập"))
                //    {
                //        Thread.Sleep(2000);
                //        goto Lb_Check;
                //    }
                //}


                if (loginimage == false)
                {
                    loginimage = true;
                    loginFacebookLDImage(acc, token);
                }
                DetechModel kq = detechFunction(acc.ldid, SettingTool.lang.list_detech);
                if (!kq.status)
                {

                    DetechModel kqImage = detechFunctionCatchImages(acc.ldid, list_detechimg);
                    if (kqImage.function == 2)
                    {
                        max_inputUID++;
                        if (max_inputUID <= 3)
                            loginFacebookLDImage(acc, token);
                        else
                            kq.status = false;
                    }

                    else if (kqImage.status & kqImage.function == 1)
                    {
                        kq = kqImage;
                        kq.text = "";
                        kq.content = "";
                    }
                }

                if (kq.status)
                {
                    // MessageBox.Show(acc.ldid + " - "+ kq.content + " " + kq.text + " " + kq.point.X + " :" + kq.point.Y);
                    i = 0;
                    switch (kq.function)
                    {
                        case -3:
                            {
                                //bao sâpm
                                List<DetechImageModel> list_imagekhang = new List<DetechImageModel>();
                                DetechImageModel detechimg = new DetechImageModel();
                                detechimg.name = "khangspam";
                                detechimg.function = 1;
                                detechimg.img = Properties.Resources._3x_share_video_khang_spam;
                                list_imagekhang.Add(detechimg);
                                DetechModel kq_image = detechFunctionCatchImages(acc.ldid, list_imagekhang);
                                if (kq_image.status)
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq_image.point.X + 20, kq_image.point.Y + 20);
                                    Delay(1);
                                }
                                else
                                {
                                    acc.Thongbao = "báo spam";
                                    return false;
                                }
                                break;
                            }
                        case -2:
                            {
                                if (kq.parent == "closeFb")
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    deleteFolderFacebook(acc.ldid, "com.facebook.katana");
                                    Delay(1);
                                    createFolder(acc.ldid, "com.facebook.katana");
                                    Delay(1);
                                    killApp(acc.ldid, "com.facebook.katana");
                                    Delay(1);
                                    runApp(acc.ldid, "com.facebook.katana");
                                    Delay(6);
                                }
                                break;
                            }
                        case -1:
                            {
                                acc.Thongbao = kq.text;
                                return false;
                            }

                        case 0:
                            {
                                back(acc.ldid, 1);
                                if (kq.content.Contains("Allow Facebook"))
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, 642, 1266);
                                }
                                break;
                            }
                        case 1:
                            {
                                if (kq.content == "Menu" & kq.text == "Menu")
                                {

                                    if (SettingTool.configld.versionld == "4.x")
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point.X - 400, kq.point.Y);
                                    }
                                    else
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point.X - 100, kq.point.Y);
                                    }

                                    DetechModel kq_passs = RunDetechFunction(acc.ldid, SettingTool.lang.list_detechpass);
                                    if (kq_passs.status)
                                    {
                                        if (kq_passs.function == 2)
                                        {
                                            ClickOnLeapdroidPosition(acc.ldid, kq_passs.point);
                                            Delay(1);
                                            PressOnLeapdroid_vietnamese(acc.ldid, acc.Password.Trim());
                                        }
                                    }
                                    goto Lb_start;
                                }
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                if (kq.parent == "close" || kq.parent == "quaylai")
                                {
                                    max_close++;
                                    if (max_close >= 2)
                                        return false;
                                }
                                Thread.Sleep(1000);
                                if (kq.parent == "logout")
                                {
                                    logout++;
                                    if (logout > 1)
                                        return false;
                                }
                                if (kq.parent == "quaylai")
                                {
                                    dtmodel = new DetechModel();
                                    dtmodel.parent = "";
                                    dtmodel.content = "Bỏ bài viết";
                                    dtmodel.text = "Bỏ bài viết";
                                    dtmodel.node = "//node[contains(@class,'android.widget.TextView')]";
                                    dtmodel.function = 1;
                                    SettingTool.lang.list_detech.Insert(0, dtmodel);
                                }

                                if (has_login)
                                {
                                    Thread.Sleep(7000);
                                    has_login = false;
                                }
                                else
                                {
                                    if (kq.content.Contains("LOG IN") || kq.content.Contains("ĐĂNG NHẬP") || kq.content.Contains("just tap your profile picture instead") || kq.content.Contains("nhấn vào ảnh đại diện") || kq.content.Contains("lưu thông tin đăng nhập") || kq.content.Contains("lưu đăng nhập"))
                                    {
                                        Thread.Sleep(5000);
                                    }
                                }
                                break;
                            }
                        case 2:
                            {

                                if (kq.parent == "email")
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    Thread.Sleep(1000);
                                    if (acc.id == null || acc.id == "")
                                        PressOnLeapdroid(acc.ldid, acc.email.Trim());
                                    else
                                        PressOnLeapdroid(acc.ldid, acc.id.Trim());
                                    Delay(3);
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point.X, kq.point.Y - 30);
                                    Delay(1);

                                    var kqpass = detechFunction(acc.ldid, SettingTool.lang.list_detechpass);
                                    if (kqpass.status)
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kqpass.point);
                                        Delay(1);
                                        PressOnLeapdroid_vietnamese(acc.ldid, acc.Password.Trim());
                                        has_login = true;
                                    }
                                    else
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, 130, 1100);
                                        Delay(1);
                                        string pass1 = acc.Password.Trim().Substring(0, acc.Password.Trim().Length - 1);
                                        string pass2 = acc.Password.Trim().Substring(acc.Password.Trim().Length - 1, 1);
                                        PressOnLeapdroid_vietnamese(acc.ldid, pass1);
                                        Delay(1);
                                        PressOnLeapdroid_vietnamese(acc.ldid, pass2);
                                    }
                                    Delay(1);
                                    ClickOnLeapdroidPosition(acc.ldid, 130, 1300);
                                }
                                else
                                {
                                    if (kq.parent == "twofa")
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                        CustomerController control = new CustomerController();
                                        TwoFaModel model2fa = control.getCodeTwofa(acc.email.Trim(), acc.privatekey);
                                        if (string.IsNullOrEmpty(model2fa.message) == false)
                                        {
                                            PressOnLeapdroid(acc.ldid, model2fa.message);
                                        }
                                        else
                                        {
                                            acc.TrangThai = "Authentication Error";
                                            return false;
                                        }
                                        Delay(1);

                                        //if (SettingTool.configld.versionld == "3.x")
                                        //{
                                        //    ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_login_2fa);
                                        //    Delay(1);
                                        //}
                                        //else
                                        //  {
                                        model = new DetechImageModel();
                                        model.img = Properties.Resources._1_continue_login;
                                        model.name = "2fa";
                                        model.function = 1;

                                        DetechModel kqImage = detechFunctionCatchImage(acc.ldid, model);

                                        if (kqImage.status)
                                        {
                                            ClickOnLeapdroidPosition(acc.ldid, kqImage.point);
                                        }
                                        else
                                        {
                                            ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_login_2fa);
                                            Delay(1);
                                            PressEnter(acc.ldid);
                                        }
                                        // }

                                    }

                                }

                                break;
                            }
                        case 3:
                            {
                                //update token cookie
                                if (SettingTool.configld.has_savetoken)
                                {
                                    SaveTokenCookies(acc);
                                }

                                return true;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    i++;
                    if (i <= 10)
                    {
                        goto Lb_start;

                    }

                }
            }
            catch
            { }
            return false;
        }
        public bool loginAvatarLD(Account acc)
        {
            //ko dung loginavatar rienng
            try
            {
                List<string> list_text = new List<string>();
                list_text.Add("Menu");
                int max = 0;
                List<DetechModel> list_detech = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "password";
                data.content = "Menu";
                data.text = "Menu";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                list_detech.Add(data);

                data = new DetechModel();
                data.parent = "password";
                data.content = "Menu";
                data.text = "Menu";
                data.node = "//node[contains(@class,'android.widget.ImageView')]";
                data.function = 1;
                list_detech.Add(data);

                DetechModel ls_point = RunDetechFunctionDelay(acc.ldid, list_detech, 1);
                if (ls_point.status)
                {
                    if (SettingTool.configld.versionld == "4.x")
                    {
                        ClickOnLeapdroidPosition(acc.ldid, ls_point.point.X - 400, ls_point.point.Y);
                    }
                    else
                    {
                        ClickOnLeapdroidPosition(acc.ldid, ls_point.point.X - 100, ls_point.point.Y);
                    }


                    DetechModel kq = RunDetechFunction(acc.ldid, SettingTool.lang.list_detechpass, 2);
                    if (kq.status)
                    {
                        if (kq.function == 2)
                        {
                            ClickOnLeapdroidPosition(acc.ldid, kq.point);
                            Delay(1);

                            PressOnLeapdroid(acc.ldid, acc.Password.Trim());
                            list_detech = new List<DetechModel>();
                            data = new DetechModel();
                            data.parent = "password";
                            data.content = "ĐĂNG NHẬP";
                            data.text = "ĐĂNG NHẬP";
                            data.node = "//node[contains(@class,'android.widget.Button')]";
                            data.function = 1;
                            list_detech.Add(data);
                            kq = RunDetechFunction(acc.ldid, list_detech);
                            if (kq.status)
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                Delay(3);
                            }
                        }
                    }

                    return true;
                }

            }
            catch
            {
            }
            return false;
        }

        public DetechModel RunDetechFunction(string ldid, List<DetechModel> list_detech, int i = 5)
        {
            DetechModel kq = new DetechModel();
            try
            {

                while (i > 0)
                {
                    i--;
                    kq = detechFunction(ldid, list_detech);
                    if (kq.status)
                    {
                        break;
                    }

                }
            }
            catch
            {

            }
            return kq;
        }

        public DetechModel RunDetechFunctionDelay(string ldid, List<DetechModel> list_detech, int i = 5, int delay = 2)
        {
            DetechModel kq = new DetechModel();
            try
            {

                while (i > 0)
                {
                    i--;
                    kq = detechFunction(ldid, list_detech);
                    if (kq.status)
                    {
                        break;
                    }
                    Delay(delay);
                }
            }
            catch
            {

            }
            return kq;
        }
        public bool logoutLD(Account acc)
        {


            DetechModel data = new DetechModel();
            data.parent = "FbStop";
            data.content = "Mở lại ứng dụng";
            data.text = "Mở lại ứng dụng";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            SettingTool.lang.list_detech.Add(data);

            data = new DetechModel();
            data.parent = "closeFb";
            data.content = "Đóng ứng dụng";
            data.text = "Đóng ứng dụng";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = -2;
            SettingTool.lang.list_detech.Add(data);

            data = new DetechModel();
            data.parent = "Đăng xuất";
            data.content = "ĐĂNG XUẤT";
            data.text = "ĐĂNG XUẤT";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            SettingTool.lang.list_detech.Add(data);

            List<DetechModel> detechLog = new List<DetechModel>();
            DetechModel model = new DetechModel();
            model.parent = "";
            model.content = "Log Out";
            model.text = "Log Out";
            model.node = "//node[contains(@class,'android.view.View')]";
            model.function = 1;
            detechLog.Add(model);

            model = new DetechModel();
            model.parent = "";
            model.content = "Đăng xuất";
            model.text = "Đăng xuất";
            model.node = "//node[contains(@class,'android.view.View')]";
            model.function = 1;
            detechLog.Add(model);

            model = new DetechModel();
            model.parent = "";
            model.content = "Đăng xuất";
            model.text = "Đăng xuất";
            model.node = "//node[contains(@class,'android.widget.Button')]";
            model.function = 1;
            detechLog.Add(model);

            model = new DetechModel();
            model.parent = "";
            model.content = "Remove account from device";
            model.text = "Remove account";
            model.node = "//node[contains(@class,'android.widget.Button')]";
            model.function = 1;
            SettingTool.lang.list_logoutavatar.Add(model);

            model = new DetechModel();
            model.parent = "";
            model.content = "Remove account from device";
            model.text = "Remove account from device";
            model.node = "//node[contains(@class,'android.widget.TextView')]";
            model.function = 1;
            SettingTool.lang.list_logoutavatar.Add(model);

            model = new DetechModel();
            model.parent = "";
            model.content = "Next time you log in";
            model.text = "Next time you log in";
            model.node = "//node[contains(@class,'android.widget.TextView')]";
            model.function = 1;
            SettingTool.lang.list_logoutavatar.Add(model);

            bool has_clickmenu = false;
            int i = 0;
            int int_scroll = 0;
        Lb_start:
            DetechModel kqscreen = checkScreen(acc.ldid);
            if (kqscreen.status)
            {
                switch (kqscreen.parent)
                {
                    case "login":
                        return true;
                    case "loginavatar":
                        DetechModel kqlogout = detechFunction(acc.ldid, SettingTool.lang.list_logoutavatar);
                        if (kqlogout.status)
                        {

                            ClickOnLeapdroidPosition(acc.ldid, kqlogout.point);
                            has_clickmenu = false;
                            goto Lb_start;
                        }
                        break;
                    case "loading":
                        goto Lb_start;
                    case "next":
                        {
                            DetechModel kqnext = detechFunction(acc.ldid, SettingTool.lang.list_detech);
                            if (kqnext.status)
                            {

                                ClickOnLeapdroidPosition(acc.ldid, kqnext.point);
                                has_clickmenu = false;
                                goto Lb_start;
                            }
                        }
                        break;
                    case "loginsucess":
                        {
                            if (has_clickmenu == false || int_scroll % 3 == 0)
                            {
                                Delay(3);
                                int_scroll++;
                                var point = intoMenu(acc.ldid);
                                if (point.Y > 0)
                                {
                                    has_clickmenu = true;
                                    ClickOnLeapdroidPosition(acc.ldid, point);
                                    goto Lb_start;
                                }
                            }
                            else
                            {
                                int_scroll++;
                                scroll_up(acc.ldid);
                                Delay(1);
                                scroll_up(acc.ldid);
                                DetechModel kqLog = detechFunction(acc.ldid, detechLog);
                                if (kqLog.status)
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kqLog.point);
                                    Thread.Sleep(3000);
                                    kqLog = detechFunction(acc.ldid, detechLog);
                                    if (kqLog.status)
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kqLog.point);
                                    }
                                    goto Lb_start;
                                }
                                else
                                {
                                    goto Lb_start;
                                }

                            }
                        }
                        break;
                    case "maintab":
                        {
                            if (has_clickmenu == false)
                            {
                                var point = intoMenu(acc.ldid);
                                if (point.Y > 0)
                                {
                                    has_clickmenu = true;
                                    ClickOnLeapdroidPosition(acc.ldid, point);
                                    goto Lb_start;
                                }
                            }
                            else
                            {

                                scroll_up(acc.ldid);
                                Delay(2);
                                scroll_up(acc.ldid);
                                DetechModel kqLog = detechFunction(acc.ldid, detechLog);
                                if (kqLog.status)
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kqLog.point);
                                    Thread.Sleep(3000);
                                    goto Lb_start;
                                }
                                else
                                {
                                    goto Lb_start;
                                }

                            }
                        }
                        break;

                }

            }
            else
            {
                Delay(3);
                i++;
                if (i <= 6)
                {
                    goto Lb_start;
                }
            }
            return false;

        }
        public bool logoutLD(userLD u, Account acc)
        {
            DetechModel data = new DetechModel();
            data.parent = "FbStop";
            data.content = "Mở lại ứng dụng";
            data.text = "Mở lại ứng dụng";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            SettingTool.lang.list_detech.Add(data);

            data = new DetechModel();
            data.parent = "closeFb";
            data.content = "Đóng ứng dụng";
            data.text = "Đóng ứng dụng";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = -2;
            SettingTool.lang.list_detech.Add(data);

            data = new DetechModel();
            data.parent = "Đăng xuất";
            data.content = "ĐĂNG XUẤT";
            data.text = "ĐĂNG XUẤT";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            SettingTool.lang.list_detech.Add(data);

            List<DetechModel> detechLog = new List<DetechModel>();
            DetechModel model = new DetechModel();
            model.parent = "";
            model.content = "Log Out";
            model.text = "Log Out";
            model.node = "//node[contains(@class,'android.view.View')]";
            model.function = 1;
            detechLog.Add(model);

            model = new DetechModel();
            model.parent = "";
            model.content = "Đăng xuất";
            model.text = "Đăng xuất";
            model.node = "//node[contains(@class,'android.view.View')]";
            model.function = 1;
            detechLog.Add(model);

            model = new DetechModel();
            model.parent = "";
            model.content = "Đăng xuất";
            model.text = "Đăng xuất";
            model.node = "//node[contains(@class,'android.widget.Button')]";
            model.function = 1;
            detechLog.Add(model);

            model = new DetechModel();
            model.parent = "";
            model.content = "Remove account from device";
            model.text = "Remove account";
            model.node = "//node[contains(@class,'android.widget.Button')]";
            model.function = 1;
            SettingTool.lang.list_logoutavatar.Add(model);

            model = new DetechModel();
            model.parent = "";
            model.content = "Remove account from device";
            model.text = "Remove account from device";
            model.node = "//node[contains(@class,'android.widget.TextView')]";
            model.function = 1;
            SettingTool.lang.list_logoutavatar.Add(model);

            model = new DetechModel();
            model.parent = "";
            model.content = "Next time you log in";
            model.text = "Next time you log in";
            model.node = "//node[contains(@class,'android.widget.TextView')]";
            model.function = 1;
            SettingTool.lang.list_logoutavatar.Add(model);

            bool has_clickmenu = false;
            int i = 0;
            int int_scroll = 0;
        Lb_start:
            DetechModel kqscreen = checkScreen(acc.ldid);
            if (kqscreen.status)
            {
                switch (kqscreen.parent)
                {
                    case "login":
                        return true;
                    case "loginavatar":
                        DetechModel kqlogout = detechFunction(acc.ldid, SettingTool.lang.list_logoutavatar);
                        if (kqlogout.status)
                        {

                            ClickOnLeapdroidPosition(acc.ldid, kqlogout.point);
                            has_clickmenu = false;
                            goto Lb_start;
                        }
                        break;
                    case "loading":
                        u.setStatus(acc.ldid, " loading...");
                        goto Lb_start;
                    case "next":
                        {
                            DetechModel kqnext = detechFunction(acc.ldid, SettingTool.lang.list_detech);
                            if (kqnext.status)
                            {

                                ClickOnLeapdroidPosition(acc.ldid, kqnext.point);
                                has_clickmenu = false;
                                goto Lb_start;
                            }
                        }
                        break;
                    case "loginsucess":
                        {
                            if (has_clickmenu == false || int_scroll % 3 == 0)
                            {
                                Delay(3);
                                int_scroll++;
                                var point = intoMenu(acc.ldid);
                                if (point.Y > 0)
                                {
                                    has_clickmenu = true;
                                    ClickOnLeapdroidPosition(acc.ldid, point);
                                    goto Lb_start;
                                }
                            }
                            else
                            {
                                int_scroll++;
                                scroll_up(acc.ldid);
                                Delay(1);
                                scroll_up(acc.ldid);
                                DetechModel kqLog = detechFunction(acc.ldid, detechLog);
                                if (kqLog.status)
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kqLog.point);
                                    Thread.Sleep(3000);
                                    kqLog = detechFunction(acc.ldid, detechLog);
                                    if (kqLog.status)
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kqLog.point);
                                    }
                                    goto Lb_start;
                                }
                                else
                                {
                                    goto Lb_start;
                                }

                            }
                        }
                        break;
                    case "maintab":
                        {
                            if (has_clickmenu == false)
                            {
                                var point = intoMenu(acc.ldid);
                                if (point.Y > 0)
                                {
                                    has_clickmenu = true;
                                    ClickOnLeapdroidPosition(acc.ldid, point);
                                    goto Lb_start;
                                }
                            }
                            else
                            {
                                scroll_up(acc.ldid);
                                Delay(2);
                                scroll_up(acc.ldid);
                                DetechModel kqLog = detechFunction(acc.ldid, detechLog);
                                if (kqLog.status)
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kqLog.point);
                                    Thread.Sleep(3000);
                                    goto Lb_start;
                                }
                                else
                                {
                                    goto Lb_start;
                                }

                            }
                        }
                        break;

                }

            }
            else
            {
                Delay(3);
                i++;
                if (i <= 6)
                {
                    goto Lb_start;
                }
            }
            return false;
            //DetechModel kq = detechFunction(acc.ldid, SettingTool.lang.list_detech);
            //if (kq.status)
            //{

            //    i = 0;
            //    switch (kq.function)
            //    {
            //        case -2:
            //            {
            //                if (kq.parent == "closeFb")
            //                {
            //                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
            //                    createFolder(acc.ldid, "com.facebook.katana");
            //                    launchex(acc.ldid, "com.facebook.katana");
            //                }
            //                break;
            //            }

            //        case 0:
            //            {
            //                back(acc.ldid, 1);
            //                break;
            //            }
            //        case 1:
            //            {
            //                ClickOnLeapdroidPosition(acc.ldid, kq.point);
            //                Delay(2);
            //                break;
            //            }
            //        case 2:
            //            {
            //                return true;
            //            }
            //        case 3:
            //            {
            //                var point = intoMenu(acc.ldid);
            //                if (point.Y > 0)
            //                {
            //                    // MessageBox.Show(acc.ldid + " menu :" + point.Y+":" + point.Y);
            //                    ClickOnLeapdroidPosition(acc.ldid, point);

            //                }
            //                else
            //                {
            //                    i++;
            //                    if (i < 3)
            //                        goto Lb_start;
            //                }
            //                return true;
            //            }
            //        default:
            //            break;
            //    }
            //    goto Lb_start;
            //}

        }
        public bool checkIsLogin(Account acc)
        {
            try
            {
                string data = "Không thể kết nối|Tài khoản của bạn đã bị vô hiệu hóa|Vui lòng xác nhận danh tính của bạn|tải xuống thông tin của bạn";

                if (checkContentLD(acc.ldid, data))
                {
                    return false;
                }
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "TIẾP TỤC BẰNG";
                model.text = "TIẾP TỤC BẰNG";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;

                List<DetechModel> ls_tieptuc = new List<DetechModel>();
                ls_tieptuc.Add(model);

            Lb_Start:
                DetechModel kq = detechFunction(acc.ldid, ls_tieptuc);
                if (kq.status)
                    ClickOnLeapdroidPosition(acc.ldid, kq.point);

                DetechModel kqscreen = checkScreen(acc.ldid);
                if (kqscreen.status)
                {
                    switch (kqscreen.parent)
                    {
                        case "loading":
                            goto Lb_Start;

                        case "loadinglang":
                            goto Lb_Start;
                        case "loginavatar":
                            {
                                return false;
                            }
                        case "checkpoint":
                            {
                                return false;
                            }
                        case "confirm":
                            {
                                return false;
                            }
                        case "login":
                            {
                                return false;
                            }
                        case "maintab": //thong add
                            {
                                return true;
                            }
                        case "loginsucess":
                            {
                                int i = 3;
                                data = "Tin|Chưa xem|trang cá nhân|viết bài|bài viết|Make a post|story|Viết bài trên Facebook|Phát tất cả các tin|Máy ảnh|Camera|Thông báo|Notifications|Xem thêm|bài viết được đề xuất|bạn đang nghĩ gì|giờ đã là lối tắt|trả lời";

                                while (i > 0)
                                {

                                    if (checkContentLD(acc.ldid, data))
                                    {
                                        activeNewfeed(acc.ldid, "com.facebook.katana");
                                        return true;
                                    }
                                    else
                                    {
                                        Delay(1);
                                        i--;
                                    }
                                }
                                return false;
                            }
                    }

                }
            }
            catch
            {
            }
            return false;
        }
        #region tuong tac
        public int addFriendUID(Account acc, string uid, CancellationToken ct)
        {
            try
            {
                OpenLink(acc.ldid, "com.facebook.katana", "fb://profile/" + uid);
                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
                DetechImageModel detechimg = new DetechImageModel();
                detechimg.name = "addfriend";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_addfriend;
                list_detechimg.Add(detechimg);

                int i = 0;
            Lb_start:
                //if (ct.IsCancellationRequested)
                //{
                //    ct.ThrowIfCancellationRequested();
                //}
                if (checkContent(acc.ldid, "Trang này chưa thể hiển thị ngay"))
                    return 0;
                DetechModel kq = detechFunction(acc.ldid, SettingTool.lang.list_detechaddfriensuggest);
                if (!kq.status)
                    kq = detechFunctionCatchImages(acc.ldid, list_detechimg);


                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                loginFacebookLD(acc, ct);
                                //phien het han
                                break;
                            }
                        case -1:
                            {
                                back(acc.ldid, 1);
                                return -1;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                //back(acc.ldid, 1);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                //back(acc.ldid, 1);
                                Delay(1);
                                return 1;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    i++;
                    scroll_up_short(acc.ldid);
                    if (i < 2)
                    {
                        Thread.Sleep(1500);
                        goto Lb_start;
                    }
                }

            }
            catch { }
            return 0;
        }


        public int likeAvatar(Account acc, string uid, CancellationToken ct)
        {
            try
            {

                List<DetechModel> list_detech = new List<DetechModel>();

                DetechModel data = new DetechModel();
                data.parent = "step1";
                data.content = "Ảnh đại diện";
                data.text = "Ảnh đại diện";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                list_detech.Add(data);

                data = new DetechModel();
                data.parent = "step1";
                data.content = "Thích";
                data.text = "Thích";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 2;
                list_detech.Add(data);

                int i = 0;
            Lb_start:
                if (ct.IsCancellationRequested)
                {
                    ct.ThrowIfCancellationRequested();
                }
                DetechModel kq = detechFunction(acc.ldid, list_detech);
                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                loginFacebookLD(acc, ct);
                                //phien het han
                                break;
                            }
                        case -1:
                            {
                                back(acc.ldid, 1);
                                return -1;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                //back(acc.ldid, 1);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                //back(acc.ldid, 1);
                                Delay(1);
                                return 1;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    i++;

                    if (i < 2)
                    {

                        goto Lb_start;
                    }
                }

            }
            catch { }
            return 0;
        }
        public bool unFriendUID(Account acc, string uid, CancellationToken ct)
        {
            try
            {
                OpenLink(acc.ldid, "com.facebook.katana", "fb://profile/" + uid);

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources.unfriend3);
                ls_name.Add("1_friended");

                ls_image.Add(Properties.Resources.unfriend);
                ls_name.Add("1_friended");

                ls_image.Add(Properties.Resources.unfriend2);
                ls_name.Add("1_friended");

                ls_image.Add(Properties.Resources.unfriend_4x);
                ls_name.Add("1_friended");

                ls_image.Add(Properties.Resources._3x_unfriend_299);
                ls_name.Add("1_friended");

                List<DetechModel> lsdetech = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "menu";
                data.content = "Khác";
                data.text = "Khác";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                lsdetech.Add(data);

                data = new DetechModel();
                data.parent = "unfriend";
                data.content = "Hủy kết bạn";
                data.text = "Hủy kết bạn";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                lsdetech.Add(data);

                data = new DetechModel();
                data.parent = "unfriend";
                data.content = "Bạn bè";
                data.text = "Bạn bè";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                lsdetech.Add(data);


                data = new DetechModel();
                data.parent = "done";
                data.content = "Xác nhận";
                data.text = "Xác nhận";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                lsdetech.Add(data);

                int i = 0;
            Lb_start:
                if (ct.IsCancellationRequested)
                {
                    ct.ThrowIfCancellationRequested();
                }
                if (checkContent(acc.ldid, "Trang này chưa thể hiển thị ngay"))
                    return false;
                DetechModel kq = detechFunction(acc.ldid, lsdetech);
                if (!kq.status)
                    kq = detechFunctionCatchImage(acc.ldid, ls_image, ls_name);

                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case 1:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                Delay(1);
                                if (kq.parent == "done")
                                    return true;
                                break;
                            }

                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    i++;
                    scroll_up_short(acc.ldid);
                    if (i < 5)
                    {
                        Thread.Sleep(2000);
                        goto Lb_start;
                    }
                }
            }
            catch { }
            return false;
        }

        public int unfriendManual(Account acc, int numRequest, CancellationToken ct)
        {
            int count = 0;
            try
            {
                int check_open = 0;
                while (check_open < 5)
                {
                    OpenLink(acc.ldid, "com.facebook.katana", "fb://friends/center");
                    Delay(3);
                    if (checkContentLD(acc.ldid, "tất cả bạn bè|thêm bạn bè|gợi ý"))
                        break;
                    else
                        check_open++;
                }
                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();
                ls_image.Add(Properties.Resources.unfriend);
                ls_name.Add("1_friended");
                List<DetechModel> lsdetech = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "listfriend";
                data.content = "Tất cả bạn bè";
                data.text = "Tất cả bạn bè";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                lsdetech.Add(data);
                data = new DetechModel();
                data.parent = "unfriend";
                data.content = "Hủy kết bạn";
                data.text = "Hủy kết bạn";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                lsdetech.Add(data);

                data = new DetechModel();
                data.parent = "friend";
                data.content = "Bạn bè";
                data.text = "Bạn bè";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                lsdetech.Add(data);

                data = new DetechModel();
                data.parent = "done";
                data.content = "Xác nhận";
                data.text = "Xác nhận";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                lsdetech.Add(data);

                int i = 0;
            Lb_start:
                if (ct.IsCancellationRequested)
                {
                    ct.ThrowIfCancellationRequested();
                }

                DetechModel kq = detechFunction(acc.ldid, lsdetech);
                if (!kq.status)
                {
                    kq = detechFunctionCatchImage(acc.ldid, ls_image, ls_name);
                    if (!kq.status)
                    {
                        List<Point> lsPoint = new List<Point>();
                        lsPoint = FindByXpathTree(acc.ldid, "//node[contains(@class,'androidx.recyclerview.widget.RecyclerView')]", "//node[contains(@class,'android.view.View')]");
                        if (lsPoint.Count > 0)
                        {

                            kq.status = true;
                            kq.function = 1;
                            kq.point = lsPoint[1];
                            kq.parent = "friend";
                        }
                    }
                }
                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case 1:
                            {
                                if (kq.parent == "friend" & kq.point.X > 0)

                                    ClickOnLeapdroidPosition(acc.ldid, kq.point.X - 10, kq.point.Y);
                                else
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);

                                if (kq.parent == "friend")
                                {
                                    Delay(1);
                                    scroll_up_short(acc.ldid);
                                }


                                Delay(2);
                                if (kq.parent == "done")
                                {
                                    count++;
                                    back(acc.ldid, 1);
                                    scroll_up_short(acc.ldid);
                                }
                                if (count >= numRequest)
                                    return count;
                                break;
                            }

                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    i++;
                    scroll_up_short(acc.ldid);
                    if (i < 5)
                    {
                        Thread.Sleep(2000);
                        goto Lb_start;
                    }
                }
            }
            catch { }
            return count;
        }
        public void scrollNewfeedGroup(userLD u, string ldID, Account acc, int min, int max, CancellationToken token)
        {
            OpenLink(ldID, acc.app, "fb://groups/gridtab");
            Delay(3);
            //List<DetechModel> lsdetech = new List<DetechModel>();
            //DetechModel data = new DetechModel();
            //data.parent = "group";
            //data.content = "Nhóm của bạn";
            //data.text = "Nhóm của bạn";
            //data.node = "//node[contains(@class,'android.view.View')]";
            //data.function = 1;
            //lsdetech.Add(data);

            //DetechModel kq = detechFunction(acc.ldid, lsdetech);
            //if (kq.status)
            //{
            //    ClickOnLeapdroidPosition(acc.ldid, kq.point);
            //}
            // scroll_up_random(ldID, token);

            //lsdetech = new List<DetechModel>();
            //data = new DetechModel();
            //data.parent = "group";
            //data.content = "Nút";
            //data.text = "Nút";
            //data.node = "//node[contains(@class,'android.view.View')]";
            //data.function = 1;
            //lsdetech.Add(data);

            //kq = detechFunction(acc.ldid, lsdetech);
            //if (kq.status)
            //{
            //    ClickOnLeapdroidPosition(acc.ldid, kq.point);
            //}
            scrollNewfeedGroups(u, ldID, acc, min, max, token);
            quaylai(ldID, 2);
            activeNewfeed(ldID, acc.app);
        }
        public void scrollNewfeed(userLD u, string device, Account acc, int min, int max, CancellationToken token)
        {
            try
            {

                scroll_down(device);
                Random rd = new Random();
                int luot = rd.Next(min, max);
                u.setStatusSum(luot);
                int int_check = 1;
                for (int i = 0; i < luot; i++)
                {
                    int_check++;
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    if (i % 10 == 0)
                    {
                        if (check_Facebook_has_stopped(u, acc.ldid, acc, token) == false)
                        {
                            break;
                        }

                    }
                    if (int_check % 10 == 0)
                    {
                        // checkScreen(device);
                        if (checkNewFeedNoMoreNews(device, acc, token))
                        {
                            return;
                        }
                    }
                    scroll_up(device);
                    Delay(rd.Next(1, 5));
                    u.setStatusResult(i);
                }
            }
            catch
            { }

        }

        public void scrollNewfeedGroups(userLD u, string device, Account acc, int min, int max, CancellationToken token)
        {
            try
            {

                scroll_down(device);
                Random rd = new Random();
                int luot = rd.Next(min, max);
                u.setStatusSum(luot);
                int int_check = 1;
                for (int i = 0; i < luot; i++)
                {
                    int_check++;
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    if (i % 10 == 0)
                    {
                        if (check_Facebook_has_stopped(u, acc.ldid, acc, token) == false)
                        {
                            break;
                        }
                        if (checkContentLD(acc.ldid, "chấp nhận|lời mời|bạn bè"))
                            OpenLink(acc.ldid, acc.app, "fb://groups/gridtab");
                    }
                    if (int_check % 10 == 0)
                    {
                        // checkScreen(device);
                        if (checkContent(acc.ldid, "Bạn đã đọc hết"))
                        {
                            OpenLink(acc.ldid, acc.app, "fb://groups/gridtab");
                            scroll_down(acc.ldid);
                        }
                    }
                    scroll_up(device);
                    Delay(rd.Next(1, 5));
                    u.setStatusResult(i);
                }
            }
            catch
            { }

        }
        public void scrollNewfeedWatch(userLD u, string device, Account acc, int min, int max, CancellationToken token, int view_min = 1, int view_max = 5)
        {
            try
            {
                OpenLink(device, acc.app, "fb://watch");
                Delay(2);
                scroll_down(device);
                Random rd = new Random();
                int luot = rd.Next(min, max);
                u.setStatusSum(luot);
                int int_check = 1;
                for (int i = 0; i < luot; i++)
                {

                    u.setStatusResult(i);
                    int_check++;
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    if (int_check % 5 == 0)
                    {
                        if (check_Facebook_has_stopped(u, acc.ldid, acc, token) == false)
                        {
                            break;
                        }

                    }
                    scroll_up(device);
                    int delay = rd.Next(view_min, view_max);
                    while (delay >= 0)
                    {
                        u.setStatus(device, "View..." + delay.ToString() + "s");
                        Delay(1);
                        delay--;
                    }
                    
                    if (checkContent(acc.ldid, "lệnh chat"))
                        back(acc.ldid, 2);
                }
            }
            catch
            { }

        }

        public bool checkNewFeedNoMoreNews(string device, Account acc, CancellationToken token)
        {
            List<DetechModel> ls_detech = new List<DetechModel>();
            DetechModel detech = new DetechModel();
            detech.parent = "";
            detech.content = "Bạn có muốn xem thêm bài viết không?";
            detech.text = "Bạn có muốn xem thêm bài viết không?";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls_detech.Add(detech);
            DetechModel kq = detechFunction(device, ls_detech);
            if (kq.status)
            {
                return true;

            }
            else
                return false;
        }
        public void activeNewfeed(string device, string app)
        {
            OpenLink(device, app, "fb://newsfeed");
        }
        public void backNewfeed(string device)
        {
            List<DetechModel> ls_detech = new List<DetechModel>();
            DetechModel detech = new DetechModel();
            detech.parent = "";
            detech.content = "Bỏ bài viết";
            detech.text = "Bỏ bài viết";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls_detech.Add(detech);

            string data = "Viết bài trên Facebook|Đi tới trang cá nhân|Bảng tin|Trang chủ|cuộc trò chuyện|Stories|Make a post";
            for (int i = 0; i < 5; i++)
            {
                if (checkContentLD(device, data))
                {
                    break;
                }
                else
                {
                    back(device, 1);
                    Delay(1);
                    DetechModel kq = detechFunction(device, ls_detech);
                    if (kq.status)
                        ClickOnLeapdroidPosition(device, kq.point);
                }
            }
        }

        public void backNewfeedGroup(string device)
        {
            for (int i = 0; i < 5; i++)
            {
                DetechModel kq = RunDetechFunction(device, SettingTool.lang.list_joingroup);
                if (kq.status & kq.point.Y > 0)
                {
                    break;
                }
                else
                {
                    back(device, 1);
                }
            }
        }

        public void backHomeMessenger(string device)
        {


            for (int i = 0; i < 1; i++)
            {

                if (checkContentLD(device, "chat|Danh bạ"))
                {
                    break;
                }
                else
                {
                    back(device, 1);
                }
            }
        }
        public string scrollLikeNewFeed(userLD u, Account acc, string device, string app, int minlike, int maxlike, SettingTuongTac tuongtac, CancellationToken token)
        {
            string message = "";
            int dem = 0;
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            try
            {

                int max = 0;
                scroll_down(device);
                Delay(1);

                while (dem < luot)
                {
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    scroll_up_random(device, token);
                    Delay(1);
                    if (likePostNewfeed(acc, device, tuongtac, token))
                    {
                        max = 0;
                        dem++;
                        u.setStatusResult(dem);
                    }
                    else
                    {
                        Delay(1);
                        max++;

                        if (max >= 6)
                        {
                            return message = "| Like newfeed complete:" + dem.ToString() + "/" + luot; ;
                        }
                        else
                        {
                            if (check_Facebook_has_stopped(u, device, acc, token) == false)
                            {
                                return message = "| Like newfeed complete:" + dem.ToString() + "/" + luot; ;
                            }
                        }

                    }

                }
            }
            catch
            { }
            return message = "| Like newfeed complete:" + dem.ToString() + "/" + luot;
        }
        public bool likePost(Account acc, string ldID, CancellationToken token)
        {
            try
            {
                DetechModel model = new DetechModel();
                model.parent = "Liked";
                model.content = "Đã nhấn nút Thích";
                model.text = "Đã nhấn nút Thích";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;

                SettingTool.lang.list_detechlike.Insert(0, model);
                int i = 0;
                while (i < 3)
                {
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();

                    DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechlike);
                    if (kq.status & kq.point.Y > 80)
                    {
                        if (kq.parent == "Liked")
                            scroll_up_mid(ldID);

                        else if (kq.parent == "restartfb")
                            resetFacebook(acc, kq.point, token);
                        else
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            return true;
                        }


                    }
                    scroll_up_mid(ldID);
                    i++;
                }


            }
            catch
            {
            }
            return false;
        }
        public bool likePostNewfeed(Account acc, string ldID, SettingTuongTac tuongtac, CancellationToken token)
        {
            try
            {
                DetechModel model = new DetechModel();
                model.parent = "Liked";
                model.content = "Đã nhấn nút Thích";
                model.text = "Đã nhấn nút Thích";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                SettingTool.lang.list_detechlike.Insert(0, model);
                //if (!SettingTool.lang.list_detechlike.Exists(e => e.parent == "Liked"))
                //    SettingTool.lang.list_detechlike.Add(model);
                int loop = 3;
                while (loop > 0)
                {
                    if (token.IsCancellationRequested)
                        return false;
                    DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechlike);
                    if (kq.status)
                    {
                        if (kq.parent == "Liked")
                            return false;

                        if (kq.parent == "restartfb")
                            resetFacebook(acc, kq.point, token);

                        if (tuongtac.chklike)
                            ClickOnLeapdroidPosition(ldID, kq.point);
                        else
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point.X, kq.point.Y);
                        }
                        return true;
                    }
                    loop--;
                    scroll_up(ldID);
                }

            }
            catch
            {
            }
            return false;
        }
        public string scrollCommentNewFeed(userLD u, Account acc, string device, string app, int mincomment, int maxcomment, string content, CancellationToken token, int numdelay = 1)
        {
            int dem = 0;
            int max = 0;
            Random rd = new Random();
            int luot = rd.Next(mincomment, maxcomment);
            u.setStatusSum(luot);
            try
            {

                scroll_down(device);
                Delay(1);


                while (dem < luot)
                {
                    // activeNewfeed(device, app);
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    scroll_up_random(device, token);

                    string message = content.Replace("$me", acc.name);
                    if (commentPost(u, acc, device, FunctionHelper.method_Spin(message), token))
                    {
                        max = 0;
                        dem++;
                        Delay(numdelay);
                        back(device, 2);
                        u.setStatusResult(dem);
                    }
                    else
                    {
                        max++;
                        //if (max == 2)
                        backNewfeed(device);
                        if (check_Facebook_has_stopped(u, device, acc, token) == false)
                        {
                            return "| Comment newfeed  complete:" + dem.ToString() + "/" + luot;
                        }
                    }

                    if (max > 5)
                        return "| Comment newfeed  complete:" + dem.ToString() + "/" + luot;
                }
            }
            catch
            { }
            return "| Comment newfeed  complete:" + dem.ToString() + "/" + luot;
        }
        public bool commentPost(userLD u, Account acc, string ldID, string mess, CancellationToken token)
        {
            try
            {
                int i = 0;
                int max = 0;
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechcomment);
                if (kq.status & kq.point.Y > 10)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                if (check_Facebook_has_stopped(u, ldID, acc, token) == false)
                                {
                                    return false;
                                }
                                return false;
                            }
                        case 1:
                            {
                                if (kq.parent == "comment")
                                {
                                    if (max >= 3)
                                    {

                                        // backNewfeed(ldID);
                                        return false;
                                    }

                                    max++;
                                }
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                string noidung = FunctionHelper.method_Spin(mess);
                                if (noidung.Length > 150)
                                {
                                    string[] content_split = SplitByLength(noidung, 150);
                                    if (content_split.Count() > 0)
                                    {
                                        for (int v = 0; v < content_split.Count(); v++)
                                        {
                                            PressOnLeapdroid_vietnamese(ldID, content_split[v]);
                                            Delay(1);
                                        }
                                    }

                                }
                                else
                                {
                                    PressOnLeapdroid_vietnamese(ldID, noidung);
                                }


                                // PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(mess));
                                PressOnLeapdroid(ldID, " ");
                                Delay(1);
                                i = 0;

                            Lb_Send:
                                DetechModel kqsend = RunDetechFunction(ldID, SettingTool.lang.list_detechsend);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    Delay(1);

                                    //  scroll_down(ldID); ko hieu cho nay
                                }
                                else
                                {
                                    i++;
                                    if (i <= 5)
                                        goto Lb_Send;
                                }
                                return true;

                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    scroll_up_mid(ldID);
                    i++;
                    if (i < 3)
                    {
                        goto Lb_start;
                    }

                }
            }
            catch
            { }
            return false;
        }

        public bool commentPostGroup(userLD u, Account acc, string ldID, string mess, CancellationToken token)
        {
            try
            {
                int i = 0;
                int max = 0;
                List<DetechModel> ls_join = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "share";
                model.content = "Nút chia sẻ";
                model.text = "Nút chia sẻ";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                ls_join.Add(model);

                model = new DetechModel();
                model.parent = "duyet";
                model.content = "Quản trị viên kiểm soát đối tượng";
                model.text = "Quản trị viên kiểm soát đối tượng";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                ls_join.Add(model);

                model = new DetechModel();
                model.parent = "joined";
                model.content = "Người đã bày tỏ cảm xúc";
                model.text = "Người đã bày tỏ cảm xúc";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                ls_join.Add(model);

                model = new DetechModel();
                model.parent = "joined";
                model.content = "Đã gửi yêu cầu tham gia";
                model.text = "Đã gửi yêu cầu tham gia";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                ls_join.Add(model);

            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechcomment);
                if (kq.status & kq.point.Y > 10)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                if (check_Facebook_has_stopped(u, ldID, acc, token) == false)
                                {
                                    return false;
                                }
                                return false;
                            }
                        case 1:
                            {
                                if (kq.parent == "comment")
                                {
                                    if (max >= 3)
                                    {

                                        // backNewfeed(ldID);
                                        return false;
                                    }

                                    max++;
                                }
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                string noidung = FunctionHelper.method_Spin(mess);
                                if (noidung.Length > 150)
                                {
                                    string[] content_split = SplitByLength(noidung, 150);
                                    if (content_split.Count() > 0)
                                    {
                                        for (int v = 0; v < content_split.Count(); v++)
                                        {
                                            PressOnLeapdroid_vietnamese(ldID, content_split[v]);
                                            Delay(1);
                                        }
                                    }

                                }
                                else
                                {
                                    PressOnLeapdroid_vietnamese(ldID, noidung);
                                }


                                // PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(mess));
                                PressOnLeapdroid(ldID, " ");
                                Delay(1);
                                i = 0;

                            Lb_Send:
                                DetechModel kqsend = RunDetechFunction(ldID, SettingTool.lang.list_detechsend);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    Delay(1);

                                    //  scroll_down(ldID); ko hieu cho nay
                                }
                                else
                                {
                                    i++;
                                    if (i <= 5)
                                        goto Lb_Send;
                                }
                                return true;

                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    kq = detechFunction(ldID, ls_join);
                    if (kq.status)
                    {
                        if (kq.parent == "joined")
                        {
                            back(ldID, 1);
                            return false;
                        }
                        if (kq.parent == "share" & kq.point.Y > 50)
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point.X, kq.point.Y - 15);
                            Delay(2);
                            kq = detechFunction(ldID, ls_join);
                            if (kq.status)
                            {
                                if (kq.parent == "joined")
                                {
                                    back(ldID, 1);
                                    return false;
                                }
                                ClickOnLeapdroidPosition(ldID, kq.point2.X - 15, kq.point2.Y - 15);
                                Delay(2);
                                inputandsend(ldID, "{ok|dong y}");
                                back(ldID, 1);
                            }

                        }


                    }
                    scroll_up_mid(ldID);
                    i++;
                    if (i < 3)
                    {
                        goto Lb_start;
                    }

                }
            }
            catch
            { }
            return false;
        }


        public bool commentVideo(string ldID, string mess, CancellationToken token)
        {
            try
            {
                int i = 0;
                int max = 0;
                DetechModel model = new DetechModel();
                model.parent = "closepopup";
                model.content = "How to Watch Without Comments";
                model.text = "Close";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                SettingTool.lang.list_detechcomment.Add(model);

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources._1_commentvideo);
                ls_name.Add("1_commentvideo");
                ls_image.Add(Properties.Resources._1_commentvideo_3x);
                ls_name.Add("1_commentvideo");

            Lb_start:
                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechcomment);
                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImage(ldID, ls_image, ls_name);
                    if (kq_image.status)
                        kq = kq_image;
                }

                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                return false;
                            }
                        case 1:
                            {
                                if (kq.parent == "comment")
                                {
                                    if (kq.point.Y < 100)
                                        scroll_up_mid(ldID);

                                    if (max > 5)
                                        return false;
                                    max++;
                                }
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(2);
                                Random rd = new Random();
                                string[] content_split = SplitByLength(FunctionHelper.method_Spin(mess), 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int n = 0; n < content_split.Count(); n++)
                                    {
                                        PressOnLeapdroid_vietnamese(ldID, content_split[n]);
                                        Delay(1);
                                    }
                                }
                                PressOnLeapdroid(ldID, " ");
                                Delay(1);
                                i = 0;
                            Lb_Send:
                                DetechModel kqsend = RunDetechFunction(ldID, SettingTool.lang.list_detechsend);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    return true;
                                }
                                else
                                {
                                    i++;
                                    if (i <= 5)
                                        goto Lb_Send;
                                }
                                return true;

                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    i++;
                    if (i < 3)
                        scroll_up_short(ldID);

                    if (i < 6)
                    {
                        goto Lb_start;
                    }

                }
            }
            catch
            { }
            return false;
        }
        public bool commentPostShare(string ldID, string mess)
        {
            try
            {
                int i = 0;
                bool binhluan = false;
            Lb_start:
                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechcomment);
                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case 1:
                            {
                                if (binhluan)
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    string[] content_split = SplitByLength(FunctionHelper.method_Spin(mess), 150);
                                    if (content_split.Count() > 0)
                                    {
                                        for (int n = 0; n < content_split.Count(); n++)
                                        {
                                            PressOnLeapdroid_vietnamese(ldID, content_split[n]);
                                            Delay(1);
                                        }
                                    }
                                    // PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(mess));
                                    Delay(1);
                                    i = 0;
                                Lb_Send:
                                    DetechModel kqsend = detechFunction(ldID, SettingTool.lang.list_detechsend);
                                    if (kqsend.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kqsend.point);
                                        Thread.Sleep(2000);
                                        back(ldID, 1);
                                    }
                                    else
                                    {
                                        i++;
                                        if (i <= 5)
                                            goto Lb_Send;
                                    }
                                    return true;
                                }
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                binhluan = true;
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                string[] content_split = SplitByLength(FunctionHelper.method_Spin(mess), 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int n = 0; n < content_split.Count(); n++)
                                    {
                                        PressOnLeapdroid_vietnamese(ldID, content_split[n]);
                                        Delay(1);
                                    }
                                }
                                // PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(mess));
                                Delay(1);
                                i = 0;
                            Lb_Send:
                                DetechModel kqsend = detechFunction(ldID, SettingTool.lang.list_detechsend);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    Thread.Sleep(2000);
                                }
                                else
                                {
                                    i++;
                                    if (i <= 5)
                                        goto Lb_Send;
                                }
                                return true;

                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    i++;
                    if (i <= 5)
                    {
                        scroll_up_short(ldID);
                        goto Lb_start;

                    }
                }
            }
            catch
            { }
            return false;
        }
        public bool LoginPhienHetHan(userLD u, Account acc, CancellationToken token)
        {

            return loginFacebookTuongTac(u, acc, token);
        }
        public string viewAddFriend(userLD u, Account acc, string ldID, string app, int min, int max, int delay, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(min, max);
            u.setStatusSum(luot);
            try
            {
                int dem = 0;

                //DetechModel model = new DetechModel();
                //model.parent = "";
                //model.content = "Gợi ý";
                //model.text = "Gợi ý";
                //model.node = "//node[contains(@class,'android.view.View')]";
                //model.function = 1;
                //SettingTool.lang.list_detechaddfriensuggest.Add(model);

                //model = new DetechModel();
                //model.parent = "";
                //model.content = "Suggestions";
                //model.text = "Suggestions";
                //model.node = "//node[contains(@class,'android.view.View')]";
                //model.function = 1;
                //SettingTool.lang.list_detechaddfriensuggest.Add(model);

                //model = new DetechModel();
                //model.parent = "";
                //model.content = "làm bạn bè";
                //model.text = "làm bạn bè";
                //model.node = "//node[contains(@class,'android.view.View')]";
                //model.function = 2;
                //SettingTool.lang.list_detechaddfriensuggest.Add(model);

                //model = new DetechModel();
                //model.parent = "";
                //model.content = "as a friend";
                //model.text = "as a friend";
                //model.node = "//node[contains(@class,'android.view.View')]";
                //model.function = 2;
                //SettingTool.lang.list_detechaddfriensuggest.Add(model);

                //model = new DetechModel();
                //model.parent = "";
                //model.content = "Không gửi được lời mời";
                //model.text = "OK";
                //model.node = "//node[contains(@class,'android.widget.Button')]";
                //model.function = 1;
                //SettingTool.lang.list_detechaddfriensuggest.Add(model);
                int check_open = 0;
                while (check_open < 5)
                {
                    OpenLink(ldID, "com.facebook.katana", "fb://friends/center");
                    Delay(3);
                    if (checkContentLD(ldID, "tất cả bạn bè|thêm bạn bè|gợi ý"))
                        break;
                    else
                        check_open++;
                }
                #region bat dau addfriend
                try
                {
                    int i = 0;
                    int click_friendsuggest = 0;
                    if (checkContentLD(ldID, "không có lời mời|tải danh bạ"))
                        goto Finish;
                Lb_start:
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();
                    DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechaddfriensuggest);
                    if (kq.status)
                    {
                        i = 0;
                        switch (kq.function)
                        {
                            case -10:
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    if (LoginPhienHetHan(u, acc, token) == false)
                                    {
                                        return "| Phiên hết hạn";
                                    }
                                    break;
                                }
                            case -1:
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    if (SettingTool.configld.language == "English")
                                        return "| Add Friend don't complete";
                                    else
                                        return "| Add Friend Không hoàn thành";
                                }
                            case 1:
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    if (kq.parent == "friendsuggest")
                                        click_friendsuggest++;
                                    if (click_friendsuggest > 3)
                                        return "| Add Friend complete: " + dem.ToString() + "/" + luot.ToString();
                                    break;
                                }
                            case 2:
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    dem++;
                                    u.setStatusResult(dem);
                                    if (dem >= luot)
                                    {
                                        goto Finish;
                                    }
                                    else
                                    {
                                        Delay(2);
                                    }
                                    break;
                                }
                            default:
                                break;
                        }
                        goto Lb_start;
                    }
                    else
                    {
                        Delay(2);
                        i++;
                        if (i <= 5)
                        {
                            goto Lb_start;
                        }
                    }
                }
                catch
                { }
                #endregion

            Finish:
                activeNewfeed(ldID, app);

                if (SettingTool.configld.language == "English")
                    return "| Add Friend complete: " + dem.ToString() + "/" + luot.ToString();
                else
                    return "| Add Friend hoàn thành: " + dem.ToString() + "/" + luot.ToString();
            }
            catch
            {
                if (SettingTool.configld.language == "English")
                    return "| Add Friend complete:" + "0/" + luot.ToString();
                else
                    return "| Add Friend hoàn thành:" + "0/" + luot.ToString();
            }
        }
        public string scrollAceeptFriend(userLD u, Account acc, string ldID, string app, int min, int max, int delay, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(min, max);
            u.setStatusSum(luot);
            try
            {
                int dem = 0;
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "Xác nhận";
                model.text = "Xác nhận";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                SettingTool.lang.list_detechacceptfriend.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Confirm";
                model.text = "Confirm";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                SettingTool.lang.list_detechacceptfriend.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Không gửi được lời mời";
                model.text = "OK";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;
                SettingTool.lang.list_detechacceptfriend.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Lời mời kết bạn";
                model.text = "Lời mời kết bạn";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                SettingTool.lang.list_detechacceptfriend.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "mới dùng Facebook";
                model.text = "mới dùng Facebook";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = -1;
                SettingTool.lang.list_detechacceptfriend.Add(model);
                int check_open = 0;
                while (check_open < 5)
                {
                    OpenLink(ldID, "com.facebook.katana", "fb://friends/requests_tab");
                    Delay(3);
                    if (checkContentLD(ldID, "tất cả bạn bè|thêm bạn bè|gợi ý"))
                        break;
                    else
                        check_open++;
                }

                Delay(2);
                #region bat dau acceptfriend
                try
                {
                    int i = 0;
                Lb_start:
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();
                    DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechacceptfriend);
                    if (kq.status & kq.point.Y > 0)
                    {
                        if (kq.function == -1)
                        {
                            back(ldID, 1);
                            goto Lb_start;
                        }
                        i = 0;
                        ClickOnLeapdroidPosition(ldID, kq.point);
                        if (kq.text != "OK")
                            dem++;
                        u.setStatusResult(dem);
                        if (dem >= luot)
                        {
                            goto Finish;
                        }
                        else
                        {
                            Delay(1);
                        }
                        goto Lb_start;
                    }
                    else
                    {
                        i++;


                        if (i <= 5)
                        {
                            goto Lb_start;
                        }
                        else
                        {
                            if (check_Facebook_has_stopped(u, ldID, acc, token) == false)
                            {
                                goto Finish;
                            }
                        }
                    }
                }
                catch
                { }
                #endregion
            //}
            // }
            Finish:
                activeNewfeed(ldID, app);
                if (SettingTool.configld.language == "English")
                    return "| Accept Friend complete:" + dem.ToString() + "/" + luot.ToString();
                else
                    return "| Accept Friend hoàn thành:" + dem.ToString() + "/" + luot.ToString();
            }
            catch
            {
            }
            if (SettingTool.configld.language == "English")
                return "| Accept Friend complete:" + "0/" + luot.ToString();
            else
                return "| Accept Friend hoàn thành:" + "0/" + luot.ToString();
        }

        public string scrollCancelRequestFriend(userLD u, Account acc, string ldID, string app, int minlike, int maxlike, int delay, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            try
            {
                int dem = 0;
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "Xóa lời mời";
                model.text = "Xóa lời mời";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                SettingTool.lang.list_detechacceptfriend.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Không gửi được lời mời";
                model.text = "OK";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;
                SettingTool.lang.list_detechacceptfriend.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Lời mời kết bạn";
                model.text = "Lời mời kết bạn";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                SettingTool.lang.list_detechacceptfriend.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "mới dùng Facebook";
                model.text = "mới dùng Facebook";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = -1;
                SettingTool.lang.list_detechacceptfriend.Add(model);
                int check_open = 0;
                while (check_open < 5)
                {
                    OpenLink(ldID, "com.facebook.katana", "fb://friends/requests_tab");
                    Delay(3);
                    if (checkContentLD(ldID, "tất cả bạn bè|thêm bạn bè|gợi ý"))
                        break;
                    else
                        check_open++;
                }

                Delay(2);
                #region bat dau acceptfriend
                try
                {
                    int i = 0;
                Lb_start:
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();
                    DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechacceptfriend);
                    if (kq.status & kq.point.Y > 0)
                    {
                        if (kq.function == -1)
                        {
                            back(ldID, 1);
                            goto Lb_start;
                        }
                        i = 0;
                        ClickOnLeapdroidPosition(ldID, kq.point);
                        if (kq.text != "OK")
                        {
                            dem++;
                            u.setStatusResult(dem);
                        }

                        if (dem >= luot)
                        {
                            goto Finish;
                        }
                        else
                        {
                            Delay(1);
                        }
                        goto Lb_start;
                    }
                    else
                    {
                        i++;
                        if (i <= 5)
                        {
                            if (check_Facebook_has_stopped(u, ldID, acc, token) == false)
                            {
                                goto Finish;
                            }
                            goto Lb_start;
                        }
                    }
                }
                catch
                { }
                #endregion
            //}
            // }
            Finish:
                activeNewfeed(ldID, app);
                if (SettingTool.configld.language == "English")
                    return "| Cancel addfriend request complete:" + dem.ToString() + "/" + luot.ToString();
                else
                    return "| Hủy lời mời kết bạn hoàn thành:" + dem.ToString() + "/" + luot.ToString();
            }
            catch
            {
            }
            if (SettingTool.configld.language == "English")
                return "| Cancel addfriend request complete:" + "0/" + luot.ToString();
            else
                return "| Hủy lời mời kết bạn hoàn thành:" + "0/" + luot.ToString();
        }

        private string joinGroupbySearch(userLD u, Account acc, string ldid, string app, int numLike, string keyword, int delay, bool autoAnswer, string answer, CancellationToken token)
        {
            int dem = 0;
            int max = 0;
            int loop = 0;
            try
            {
                Random rd = new Random();
                activeNewfeed(ldid, "com.facebook.katana");
                //OpenLink(ldid, app, "fb://groups/gridtab");
                Delay(3);
                List<DetechModel> detechsearch = new List<DetechModel>();
                List<DetechModel> detechjoin = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Tìm kiếm Facebook";
                model.text = "Tìm kiếm Facebook";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;
                detechsearch.Add(model);
                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Search Groups";
                model.text = "Search Groups";
                model.node = "//node[contains(@class,'android.widget.EditText')]";
                model.function = 1;
                detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Tìm kiếm nhóm";
                model.text = "Tìm kiếm nhóm";
                model.node = "//node[contains(@class,'android.widget.EditText')]";
                model.function = 1;
                detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Tìm kiếm nhóm";
                model.text = "Tìm kiếm nhóm";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;
                detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Search Groups";
                model.text = "Search Groups";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;
                detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "NHÓM";
                model.text = "NHÓM";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Group";
                model.text = "Group";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                detechsearch.Add(model);

                //model = new DetechModel();
                //model.parent = "";
                //model.content = "Đã tham gia";
                //model.text = "Đã tham gia";
                //model.node = "//node[contains(@class,'android.view.View')]";
                //model.function = 0;
                //detechjoin.Add(model);


                List<DetechModel> lsjoin = new List<DetechModel>();
                model = new DetechModel();
                model.parent = "";
                model.content = "Tham gia";
                model.text = "Tham gia";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                lsjoin.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "BUTTON";
                model.text = "BUTTON";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                detechjoin.Add(model);

                model = new DetechModel();
                model.parent = "cancelrequest";
                model.content = "Hủy yêu cầu";
                model.text = "Hủy yêu cầu";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 0;
                detechjoin.Add(model);

                model = new DetechModel();
                model.parent = "inputsearch";
                model.content = "Tìm kiếm";
                model.text = "Tìm kiếm";
                model.node = "//node[contains(@class,'android.widget.EditText')]";
                model.function = 1;
                detechjoin.Add(model);

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources._1_joingroup);
                ls_name.Add("1_joingroup");

                ls_image.Add(Properties.Resources._1_joingroup_3x);
                ls_name.Add("1_joingroup");

                ls_image.Add(Properties.Resources._1_joingroup_low);
                ls_name.Add("1_joingroup_low");


            lb_loop:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(ldid, detechsearch);
                if (kq.status)
                {
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();
                    ClickOnLeapdroidPosition(ldid, kq.point);
                    Delay(1);
                    PressOnLeapdroid_vietnamese(ldid, FunctionHelper.method_Spin(keyword));
                    Delay(1);
                    PressEnter(ldid);
                    kq = RunDetechFunction(ldid, detechsearch);
                    ClickOnLeapdroidPosition(ldid, kq.point);

                lb_start:
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();

                    scroll_up(ldid);

                    DetechModel kq_image = new DetechModel();
                    kq_image = detechFunctionCatchImage(ldid, ls_image, ls_name);
                    if (!kq_image.status)
                    {
                        kq_image = detechFunction(ldid, detechjoin);

                        if (!kq_image.status)
                            kq_image = detechFunctionExact(ldid, lsjoin);
                    }

                    if (kq_image.point.X > 0)
                    {
                        if (kq_image.parent == "cancelrequest")
                            back(ldid, 1);

                        if (kq_image.function == 0)
                        {
                            goto lb_start;
                        }
                        max = 0;
                        if (kq_image.parent == "inputsearch")
                        {
                            ClickOnLeapdroidPosition(ldid, kq_image.point);
                            Delay(1);
                            PressOnLeapdroid_vietnamese(ldid, FunctionHelper.method_Spin(keyword));
                            Delay(1);
                            PressEnter(ldid);
                            kq = RunDetechFunction(ldid, detechsearch);
                            ClickOnLeapdroidPosition(ldid, kq.point);
                            goto lb_start;
                        }
                        ClickOnLeapdroidPosition(ldid, kq_image.point.X - 20, kq_image.point.Y + 3);
                        Delay(2);
                        if (joinGroupLD(u, acc, ldid, autoAnswer, answer, token))
                        {
                            dem++;
                            u.setStatusResult(dem);
                            if (dem >= numLike)
                                return "| Join Group complete:" + dem.ToString() + "/" + numLike.ToString();
                        }
                        else
                        {
                            max++;
                            if (max >= 9)
                            {
                                activeNewfeed(ldid, app);
                                return "| Join Group complete:" + dem.ToString() + "/" + numLike.ToString();
                            }
                            else
                            {
                                if (check_Facebook_has_stopped(u, ldid, acc, token) == false)
                                {
                                    return "| Join Group complete:" + dem.ToString() + "/" + numLike.ToString();
                                }
                            }
                            goto lb_start;
                        }
                        goto lb_start;
                    }
                    else
                    {
                        max++;
                        if (max > 9)
                        {
                            activeNewfeed(ldid, app);
                            return "| Join Group complete:" + dem.ToString() + "/" + numLike.ToString();
                        }
                        goto lb_start;
                    }

                }
                else
                {
                    loop++;
                    if (loop <= 6)
                    {
                        goto lb_loop;
                    }
                }
                activeNewfeed(ldid, app);
            }
            catch
            { }
            return "| Join Group complete:" + dem.ToString() + "/" + numLike.ToString();
        }
        public void scroll_up_short(string ldID)
        {
            if (SettingTool.configld.versionld == "3.x")
            {
                string cmd = "shell input swipe 150 250 150 100";
                runAdb(ldID, cmd);
            }
            else
            {
                string cmd = "shell input swipe 100 1700 100 1600";
                runAdb(ldID, cmd);
            }

        }

        public void scroll_up_2short(string ldID)
        {
            if (SettingTool.configld.versionld == "3.x")
            {
                string cmd = "shell input swipe 150 250 150 200";
                runAdb(ldID, cmd);
            }
            else
            {
                string cmd = "shell input swipe 100 1700 100 1700";
                runAdb(ldID, cmd);
            }
        }
        public void scroll_up_short(string ldID, Point pt)
        {
            string cmd = string.Format("shell input swipe {0} {1} {0} {2}", pt.X, pt.Y, pt.Y - 150);
            runAdb(ldID, cmd);

        }
        public string viewCancelAddFriend(string ldID, string app, int num, int delay, DeviceData device, CancellationToken ct)
        {
            try
            {

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources.canceladdfriend);
                ls_name.Add("1_CancelAddFriend");

                int dem = 0;
                int step = 0;
                string result = OpenLink(ldID, app, "fb://faceweb/f?href=%2Ffriends%2Fcenter%2Frequests%2Foutgoing%2F");
                Delay(10);

                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "Hủy";
                model.text = "Hủy";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;

                SettingTool.lang.list_canceladdfriend.Add(model);
            Lb_continued:
                if (ct.IsCancellationRequested)
                {
                    ct.ThrowIfCancellationRequested();

                }

                DetechModel kq = detechFunctionCatchImage(ldID, ls_image, ls_name);
                if (!kq.status)
                    kq = detechFunctionPlus(ldID, SettingTool.lang.list_canceladdfriend);
                if (kq.status)
                {
                    switch (kq.function)
                    {
                        case 0:
                            {
                                back(ldID, 1);
                                break;
                            }
                        case 1:
                            {
                                step = 0;
                                if (kq.parent == "CancelAddFriend")
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point.X, kq.point.Y);
                                    dem++;
                                }
                                else if (kq.parent == "CancelRequest")
                                    back(ldID, 1);

                                Delay(delay);
                                scroll_up_short(ldID);

                                if (dem >= num)
                                {
                                    activeNewfeed(ldID, app);
                                    if (SettingTool.configld.language == "English")
                                        return "| Cancel request sent complete: " + dem.ToString() + "/" + num.ToString();
                                    else
                                        return "| Hủy lời mời kết bạn hoàn thành: " + dem.ToString() + "/" + num.ToString();
                                }
                                goto Lb_continued;
                            }
                    }
                }
                else
                {
                    step++;
                    if (step <= 3)
                    {
                        goto Lb_continued;
                    }
                    else
                    {
                        step = 0;
                    lb_captureImage:
                        if (ct.IsCancellationRequested)
                        {
                            ct.ThrowIfCancellationRequested();
                            if (SettingTool.configld.language == "English")
                                return "Stop cancel request sent ";
                            else
                                return "Dừng hủy lời mời đã gửi ";
                        }
                        var screen = ScreenShoot(ldID);
                        var like = Properties.Resources.cancelrequest_3x;

                        var point = ImageScanOpenCV.FindOutPoint(screen, like);
                        //ld 4.x
                        var like1 = Properties.Resources.cancelrequest_vn;
                        var point1 = new Point(0, 0);
                        if (screen.Size.Width != 320)
                            point1 = ImageScanOpenCV.FindOutPoint(screen, like1);

                        if (point.X > 0 || point1.X > 0)
                        {
                            if (point.X > 0)
                                ClickOnLeapdroidPosition(ldID, point);
                            else
                                ClickOnLeapdroidPosition(ldID, point1);
                            dem++;
                            if (dem >= num)
                            {
                                activeNewfeed(ldID, app);
                                Delay(3);
                                if (SettingTool.configld.language == "English")
                                    return "| Cancel request addfriend sent complete: " + dem.ToString() + "/" + num.ToString();
                                else
                                    return "| hủy lời mời kết bạn hoàn thành: " + dem.ToString() + "/" + num.ToString();
                            }
                            Delay(0.5);
                            scroll_up_short(ldID);
                            goto lb_captureImage;
                        }
                        else
                        {
                            step++;
                            if (step <= 7)
                            {
                                scroll_up(ldID);
                                goto lb_captureImage;
                            }
                            else
                            {
                                activeNewfeed(ldID, app);
                                if (SettingTool.configld.language == "English")
                                    return "| Cancel request addfriend sent complete: " + dem.ToString() + "/" + num.ToString();
                                else
                                    return "| hủy lời mời kết bạn hoàn thành: " + dem.ToString() + "/" + num.ToString();
                            }
                        }
                    }
                }
            }
            catch
            {
            }
            if (SettingTool.configld.language == "English")
                return "| Cancel request addfriend sent complete: " + "0/" + num.ToString();
            else
                return "| hủy lời mời kết bạn hoàn thành: " + "0/" + num.ToString();
        }

        public string viewAddFriendbyLinkpost(string linkid, string ldID, string app, int num, int delay, CancellationToken token)
        {
            try
            {
                int dem = 0;
                int checkShare = 0;

                int step = 0;
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "Reaction";
                model.text = "Reaction";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                SettingTool.lang.list_addfriendnewfeed.Add(model);

                model = new DetechModel();
                model.parent = "addfriendnewfeed";
                model.content = "...";
                model.text = "";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                model.status = false;
                model.point = new Point(0, 0);
                model.point2 = new Point(0, 0);
                SettingTool.lang.list_addfriendnewfeed.Remove(model);

                List<DetechModel> list_addfriendnewfeed = new List<DetechModel>();
                foreach (DetechModel md in SettingTool.lang.list_addfriendnewfeed)
                {
                    list_addfriendnewfeed.Add(md);
                }
                list_addfriendnewfeed.RemoveAt(6);

                model = new DetechModel();
                model.parent = "";
                model.content = "cảm xúc";
                model.text = "cảm xúc";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                list_addfriendnewfeed.Insert(0, model);
                OpenLink(ldID, app, linkid);
            Lb_start:
                DetechModel kq = detechFunction(ldID, list_addfriendnewfeed);
                if (kq.status)
                {
                    switch (kq.function)
                    {
                        case -2:
                            {
                                goto Lb_start;
                            }
                        case -1:
                            {
                                Thread.Sleep(5000);
                                break;
                            }
                        case 0:
                            {
                                back(ldID, 1);
                                break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                break;
                            }
                        case 2:
                            {
                                step = 0;
                            Lb_Send:
                                if (token.IsCancellationRequested)
                                {
                                    token.ThrowIfCancellationRequested();
                                }
                                DetechModel kqsend = detechFunction(ldID, SettingTool.lang.list_buttonadd);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    dem++;

                                    if (dem >= num)
                                    {
                                        return "| Add Friend by post complete:" + dem.ToString() + "/" + num.ToString();
                                    }
                                    Delay(1);
                                    goto Lb_Send;
                                }
                                else
                                {
                                    scroll_up_mid(ldID);
                                    step++;
                                    if (step <= 3)
                                        goto Lb_Send;
                                    else
                                    {
                                        scroll_up_mid(ldID);
                                        step++;
                                        if (step <= 3)
                                            goto Lb_Send;
                                        else
                                        {
                                            goto Lb_start;
                                        }
                                    }

                                }

                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    step++;
                    scroll_up_short(ldID);
                    if (step <= 10)
                    {
                        goto Lb_start;
                    }


                }
            }
            catch
            {
            }
            return "| Add Friend by newfeed complete:" + "0/" + num.ToString();

        }
        public void quaylai(string ldID, int time = 10)
        {
            List<DetechModel> list_quaylai = new List<DetechModel>();
            DetechModel model = new DetechModel();
            model.parent = "";
            model.content = "Quay lại";
            model.text = "Quay lại";
            model.node = "//node[contains(@class,'android.widget.ImageView')]";
            model.function = 1;
            list_quaylai.Add(model);
            for (int i = 0; i < time; i++)
            {
                DetechModel kq = detechFunction(ldID, list_quaylai);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(ldID, kq.point);
                    Delay(1);
                }
                else
                {
                    break;
                }
            }
        }
        public string viewAddFriendbyNewFeed(userLD u, string ldID, Account acc, int minlike, int maxlike, int delay, CancellationToken token)
        {
            string app = acc.app;
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            try
            {
                int dem = 0;
                int checkShare = 0;
                int int_scroll = 0;
                int step = 0;
                scroll_down(ldID);

                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "Reaction";
                model.text = "Reaction";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                SettingTool.lang.list_addfriendnewfeed.Add(model);
            Lb_continued:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                activeNewfeed(ldID, app);
                scroll_up_random(ldID, token);
                DetechModel kqnewfeed = RunDetechFunction(ldID, SettingTool.lang.list_newfeed);
                if (kqnewfeed.status)
                {
                Lb_start:
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();
                    if (check_Facebook_has_stopped(u, acc.ldid, acc, token) == false)
                    {
                        return "Lỗi đăng nhập tài khoản Facebook";
                    }

                    DetechModel kq = detechFunction(ldID, SettingTool.lang.list_addfriendnewfeed);
                    if (kq.status)
                    {
                        switch (kq.function)
                        {
                            case -2:
                                {
                                    goto Lb_continued;
                                }
                            case -1:
                                {
                                    Thread.Sleep(5000);
                                    break;
                                }
                            case 0:
                                {
                                    back(ldID, 1);
                                    break;
                                }
                            case 1:
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    Delay(1);

                                    if (kq.content.ToLower().Contains("bình luận") || kq.content.ToLower().Contains("comment"))
                                    {
                                        checkShare++;

                                        if (checkShare >= 3)
                                        {
                                            backNewfeed(ldID);
                                            checkShare = 0;
                                            scroll_up_random(ldID, token);
                                            goto Lb_start;
                                        }

                                    }
                                    else
                                        checkShare = 0;

                                    if (kq.data.Contains("hãy là người đầu tiên") || kq.content.ToLower().Contains("first") || kq.content.ToLower().Contains("video trực tiếp") || kq.content.ToLower().Contains("Tham gia nhóm"))
                                    {
                                        backNewfeed(ldID);
                                        scroll_up_random(ldID, token);
                                    }

                                    break;
                                }
                            case 2:
                                {
                                    step = 0;
                                Lb_Send:
                                    if (token.IsCancellationRequested)
                                    {
                                        token.ThrowIfCancellationRequested();
                                    }
                                    DetechModel kqsend = detechFunction(ldID, SettingTool.lang.list_buttonadd);
                                    if (kqsend.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kqsend.point);
                                        dem++;
                                        u.setStatusResult(dem);
                                        if (dem >= luot)
                                        {
                                            activeNewfeed(ldID, app);
                                            return "| Add Friend by newfeed complete:" + dem.ToString() + "/" + luot.ToString();
                                        }
                                        Thread.Sleep(delay);
                                        goto Lb_Send;
                                    }
                                    else
                                    {
                                        scroll_up_mid(ldID);
                                        step++;
                                        if (step <= 3)
                                            goto Lb_Send;
                                        else
                                        {
                                            scroll_up_mid(ldID);
                                            step++;
                                            if (step <= 3)
                                                goto Lb_Send;
                                            else
                                            {
                                                quaylai(ldID);
                                                back(ldID, 1);
                                                goto Lb_continued;
                                            }
                                        }

                                    }

                                }
                            default:
                                break;
                        }
                        goto Lb_start;
                    }
                    else
                    {
                        scroll_up_random(ldID, token);
                        step++;
                        if (step <= 5)
                        {
                            goto Lb_start;

                        }
                        else
                        {

                            //if (step <= 3)
                            int_scroll++;

                            if (int_scroll <= 3)
                            {
                                goto Lb_continued;
                            }
                            else
                            {
                                int_scroll++;
                                if (int_scroll <= 2)
                                {
                                    goto Lb_continued;
                                }
                                else
                                {
                                    return "| Add Friend by newfeed complete:" + dem.ToString() + "/" + luot.ToString(); ;
                                }

                            }
                        }
                    }
                    //else
                    //{
                    //    back(ldID, 1);
                    //    goto Lb_continued;

                    //}
                }
                return "| Add Friend by newfeed complete:" + dem.ToString() + "/" + luot.ToString();
            }
            catch
            {
            }
            return "| Add Friend by newfeed complete:" + "0/" + luot.ToString();

        }
        #endregion
        #region dang bai
        public bool setProxyAuthentica_proxydroid(string ldid, string proxy, CancellationToken token)
        {
            try
            {
                if (SettingTool.configld.versionld == "4.x")
                {
                    return changeSock5Proxy(ldid, proxy);
                }

                string path = "";
                if (checkApp(ldid, "org.proxydroid") == false)
                {
                    path = Application.StartupPath + "\\app\\proxydroid.apk";
                    if (File.Exists(path))
                    {
                        installApp(ldid, path);
                        int int_proxy = 100;
                        while (int_proxy > 0)
                        {
                            int_proxy--;
                            if (checkApp(ldid, "org.proxydroid"))
                            {
                                break;
                            }
                            else
                            {
                                Thread.Sleep(1000);
                            }
                        }
                        Thread.Sleep(3000);
                    }
                    runApp(ldid, "org.proxydroid");
                    onoffproxydroid(ldid);
                    killApp(ldid, "org.proxydroid");
                }
                else
                {
                    runApp(ldid, "org.proxydroid");
                    killApp(ldid, "org.proxydroid");
                }
                string cmdfd = String.Format("shell mkdir data/data/{0}", "org.proxydroid/shared_prefs");
                string html = runAdb(ldid, cmdfd);
                string cmd = "";// String.Format("shell su -c 'mv /data/data/org.proxydroid/shared_prefs/org.proxydroid_preferences.xml storage/emulated/legacy/pictures'");
                runAdb(ldid, cmd);
                string[] arr = proxy.Split(':');

                if (!File.Exists(Application.StartupPath + "\\Config\\org.proxydroid_preferences.xml"))
                {
                    string config = createconfig();
                    File.WriteAllText(Application.StartupPath + "\\Config\\org.proxydroid_preferences.xml", config);
                }

                if (!File.Exists(Application.StartupPath + "\\Config\\org.proxydroid_preferences_noUser.xml"))
                {
                    string config = createconfigNouser();
                    File.WriteAllText(Application.StartupPath + "\\Config\\org.proxydroid_preferences_noUser.xml", config);
                }

                XmlDocument doc = new XmlDocument();
                path = "c:\\test\\" + ldid + "\\pictures\\org.proxydroid_preferences.xml";
                if (arr.Length == 2)
                    File.Copy(Application.StartupPath + "\\Config\\org.proxydroid_preferences_noUser.xml", path, true);
                else
                    File.Copy(Application.StartupPath + "\\Config\\org.proxydroid_preferences.xml", path, true);

                doc.Load(path);
                if (arr.Length >= 2)
                {
                    foreach (XmlNode node in doc.SelectNodes("/map/string"))
                    {
                        if (node.OuterXml.Contains("host"))
                        {
                            node.InnerText = arr[0];
                            node.InnerXml = arr[0];

                        }
                        else if (node.OuterXml.Contains("port"))
                        {
                            node.InnerText = arr[1];
                            node.InnerXml = arr[1];
                        }
                        else if (node.OuterXml.Contains("user"))
                        {
                            if (arr.Length > 2)
                            {
                                node.InnerText = arr[2];
                                node.InnerXml = arr[2];
                            }
                            else
                            {
                                node.InnerText = "";
                                node.InnerXml = "";
                            }
                        }
                        else if (node.OuterXml.Contains("password"))
                        {
                            if (arr.Length > 2)
                            {
                                node.InnerText = arr[3];
                                node.InnerXml = arr[3];
                            }
                            else
                            {
                                node.InnerText = "";
                                node.InnerXml = "";
                            }
                        }
                        else if (node.OuterXml.Contains("proxyType"))
                        {
                            node.InnerText = SettingTool.configld.proxytype;
                            node.InnerXml = SettingTool.configld.proxytype;
                        }

                    }

                    doc.Save(path);
                    if (SettingTool.configld.versionld == "3.x")
                        cmd = String.Format("shell mv  storage/emulated/legacy/pictures/org.proxydroid_preferences.xml /data/data/org.proxydroid/shared_prefs");
                    else
                        cmd = String.Format("shell mv  storage/emulated/0/pictures/org.proxydroid_preferences.xml /data/data/org.proxydroid/shared_prefs");

                    runAdb(ldid, cmd);

                    if (SettingTool.configld.versionld == "3.x")
                        onoffproxydroid(ldid);

                }
            }
            catch
            { }
            return false;
        }
        public string PostImages(userLD u, Account acc, string ldID, string app, string content, List<string> list_file, int numPhoto, CancellationToken token, bool removepic = true, bool allFile = false)
        {

            List<string> list_photo = new List<string>();
            List<string> list_photoCopy = new List<string>();
            bool postVideo = false;
            string cmd = "";
            app = "com.facebook.katana";
            try
            {
                if (allFile)
                    numPhoto = list_file.Count;
                if (list_file.Count > 0)
                {
                    //xoa temp 
                    string path = string.Format("c:\\test\\{0}\\pictures\\temp\\", ldID);
                    List<string> list_pic = System.IO.Directory.GetFiles(path, "*.*").ToList();
                    foreach (string str in list_pic)
                    {
                        try
                        {
                            File.Delete(str);
                        }
                        catch
                        { }
                    }

                    if (SettingTool.configld.versionld == "3.x")
                    {
                        deleteFolder2(ldID, "/storage/emulated/legacy/dcim");
                        deleteFolder2(ldID, "/storage/emulated/legacy/pictures/temp");
                        createFolder2(ldID, "/storage/emulated/legacy/pictures/temp");
                        deleteFolder2(ldID, "/storage/emulated/legacy/pictures/Screenshots");
                        runAdb(ldID, "shell  rm -r storage/emulated/legacy/launcher/ad");//delete
                    }
                    else
                    {
                        deleteFolder2(ldID, "/storage/emulated/0/pictures/Screenshots");
                        deleteFolder2(ldID, "/storage/emulated/0/dcim");
                        createFolder2(ldID, "/storage/emulated/0/dcim");
                    }
                    for (int i = 0; i < numPhoto; i++)
                    {
                        if (list_file.Count > 0)
                        {
                            if (token.IsCancellationRequested)
                                token.ThrowIfCancellationRequested();
                            Random rd = new Random();

                            string filePath = list_file[rd.Next(0, list_file.Count)];
                            list_photo.Add(filePath);
                            list_file.Remove(filePath);
                            string fileName = Path.GetFileName(filePath);

                            string filePathCopy = path + fileName;
                            System.IO.File.Copy(filePath, filePathCopy);


                            if (SettingTool.configld.versionld == "3.x")
                            {
                                //  cmd = string.Format(" shell mv -i storage/emulated/legacy/pictures/temp/{0} sdcard/dcim/", fileNameCopy);
                                //runAdb(ldID, "shell  rm -r storage/emulated/legacy/launcher/ad");//delete
                            }
                            else
                            {
                                cmd = string.Format(" shell mv -i storage/emulated/0/pictures/temp/{0} sdcard/dcim/", fileName);
                            }

                            //  string output = runAdb(ldID, cmd);

                            //   runAdb(ldID, String.Format("shell am broadcast -a android.intent.action.MEDIA_SCANNER_SCAN_FILE -d file:////storage/emulated/0/dcim/{0}", fileNameCopy));
                            //list_photo.Add(filePath);
                        }
                        else
                            break;

                    }
                    cmd = "shell am broadcast -a android.intent.action.MEDIA_MOUNTED -d file:///storage/emulated/0/dcim";
                    runAdb(ldID, cmd);
                    //xoa file o folder test
                    //foreach (string file in list_photoCopy)
                    //{
                    //    System.IO.File.Delete(file);
                    //}
                }
                //cmd = String.Format("shell  rm -r sdcard/pictures/temp"); //delete temp
                //runAdb(ldID, cmd);
                //Thread.Sleep(10);
                //cmd = String.Format("shell mkdir sdcard/pictures/temp");//create temp
                //runAdb(ldID, cmd);
                int step = 0;

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources._1_postimage);
                ls_name.Add("1_postimage");
                ls_image.Add(Properties.Resources.post1);
                ls_name.Add("1_finish");

                ls_image.Add(Properties.Resources._1_continue_postimage);
                ls_name.Add("1_continue_postimage");
                ls_image.Add(Properties.Resources._1_alow_access);
                ls_name.Add("1_alow_access");

                DetechModel data = new DetechModel();
                //data.parent = "";
                //data.content = "Nói gì đó";
                //data.text = "Nói gì đó";
                //data.node = "//node[contains(@class,'android.widget.EditText')]";
                //data.function = 3;
                //SettingTool.lang.list_detechpost.Add(data);

                data = new DetechModel();
                data.parent = "banbe";
                data.content = "Chọn quyền riêng tư Bạn bè";
                data.text = "Chọn quyền riêng tư Bạn bè";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_detechpost.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Đối tượng mặc định của bạn đang là";
                data.text = "Đối tượng mặc định của bạn đang là";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 0;
                SettingTool.lang.list_detechpost.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Tìm hiểu thêm về lý do";
                data.text = "Tìm hiểu thêm về lý do";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 0;
                SettingTool.lang.list_detechpost.Add(data);

                data = new DetechModel();
                data.parent = "banbe";
                data.content = "Chỉ mình tôi";
                data.text = "Chỉ mình tôi";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_detechpost.Insert(0, data);

            Lb_start:

                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechpost);
                if (!kq.status)
                {

                    DetechModel kq_image = detechFunctionCatchImage(ldID, ls_image, ls_name);
                    if (kq_image.status)
                        kq = kq_image;
                    else
                    {
                        List<DetechModel> ls = new List<DetechModel>();
                        data = new DetechModel();
                        data.parent = "";
                        data.content = "Ảnh";
                        data.text = "Ảnh";
                        data.node = "//node[contains(@class,'android.view.View')]";
                        data.function = 1;
                        ls.Add(data);
                        data = new DetechModel();
                        data.parent = "";
                        data.content = "Photo";
                        data.text = "Photo";
                        data.node = "//node[contains(@class,'android.view.View')]";
                        data.function = 1;
                        ls.Add(data);
                        kq = detechFunction(ldID, ls);
                    }
                }
                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {

                        case -1:
                            {
                                Thread.Sleep(5000);
                                break;
                            }
                        case 0:
                            {
                                back(ldID, 1);
                                break;
                            }
                        case 1:
                            {
                                if (kq.data == "không có ảnh nào trên thiết bị này")
                                    return "Đăng bài không thành công";
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                if (kq.parent == "banbe")
                                {
                                    Delay(1);
                                    List<DetechModel> lsmodecongkhai = new List<DetechModel>();
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Công khai";
                                    data.text = "Công khai";
                                    data.node = "//node[contains(@class,'android.widget.TextView')]";
                                    data.function = 1;
                                    lsmodecongkhai.Add(data);

                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Công khai";
                                    data.text = "Công khai";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 1;
                                    lsmodecongkhai.Add(data);

                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Bạn của bạn bè";
                                    data.text = "Bạn của bạn bè";
                                    data.node = "//node[contains(@class,'android.widget.TextView')]";
                                    data.function = 1;
                                    lsmodecongkhai.Add(data);

                                    DetechModel modecongkhai = detechFunction(ldID, lsmodecongkhai);
                                    if (modecongkhai.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, modecongkhai.point);
                                    }
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Xong";
                                    data.text = "Xong";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 1;

                                    lsmodecongkhai = new List<DetechModel>();
                                    lsmodecongkhai.Add(data);

                                    modecongkhai = RunDetechFunction(ldID, lsmodecongkhai);
                                    if (modecongkhai.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, modecongkhai.point);
                                    }
                                    else
                                    {
                                        DetechImageModel image = new DetechImageModel();
                                        image.img = Properties.Resources.xong_post;
                                        kq = detechFunctionCatchImage(ldID, image);
                                        if (kq.status)
                                            ClickOnLeapdroidPosition(ldID, kq.point);
                                        else
                                            back(ldID, 1);
                                    }


                                }

                                if (kq.parent == "finish")
                                {
                                    List<string> ls_desc = new List<string>();
                                    ls_desc.Add("ProgressBar");
                                    if (checkListContent(ldID, ls_desc) != null)
                                    {
                                        Delay(6);
                                    }
                                    if (SettingTool.configld.language == "English")
                                        return "Post successful!";
                                    else
                                        return "Đăng bài thành công";
                                }
                                Delay(1);
                                break;
                            }
                        case 2:
                            {
                                List<Point> ls_point = new List<Point>();
                                List<Point> ls_point_button = new List<Point>();
                                List<string> ls_desc = new List<string>();
                                ls_desc.Add("ảnh");
                                ls_desc.Add("Video");
                                ls_desc.Add("Photo");
                                ls_point = FindByXpathDescList(ldID, "//node[contains(@class,'android.view.View')]", ls_desc);
                                if (ls_point.Count() == 0)
                                    ls_point_button = FindByXpathDescList(ldID, "//node[contains(@class,'android.widget.FrameLayout')]", ls_desc);

                                if (ls_point.Count > 0)
                                {
                                    ls_point = ls_point.GroupBy(item => new { item.X, item.Y }).Select(group => group.First()).ToList();
                                    for (int i = 0; i < ls_point.Count; i++)
                                    {
                                        ClickOnLeapdroidPosition(ldID, ls_point[i]);
                                        Delay(0.3);
                                    }
                                }
                                else if (ls_point_button.Count > 0)
                                {
                                    for (int i = 0; i < ls_point_button.Count; i++)
                                    {
                                        ClickOnLeapdroidPosition(ldID, ls_point_button[i]);
                                    }
                                }

                                //// point video
                                //List<Point> ls_point_video = new List<Point>();

                                //ls_point_video = FindByXpathTree(ldID, "//node[contains(@class,'androidx.recyclerview.widget.RecyclerView')]", "//node[contains(@class,'android.widget.FrameLayout')]");
                                //if (ls_point_video.Count > 0)
                                //{
                                //    postVideo = true;
                                //    for (int i = 0; i < ls_point_video.Count; i++)
                                //    {
                                //        ClickOnLeapdroidPosition(ldID, ls_point_video[i]);
                                //    }
                                //}
                                break;
                            }
                        case 3:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                if (content.Length > 150)
                                {
                                    string[] content_split = SplitByLength(content, 150);
                                    if (content_split.Count() > 0)
                                    {
                                        for (int i = 0; i < content_split.Count(); i++)
                                        {
                                            PressOnLeapdroid_vietnamese(ldID, content_split[i]);
                                            Delay(1);
                                        }
                                    }
                                }
                                else
                                {
                                    PressOnLeapdroid_vietnamese(ldID, content);
                                    Delay(1);
                                }
                                PressEnter(ldID);

                                Delay(1);
                                step = 0;
                            Lb_Send:
                                DetechModel kqsend = detechFunction(ldID, SettingTool.lang.list_buttonpost);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    Thread.Sleep(10000);
                                    if (removepic)
                                    {
                                        foreach (string pathPhoto in list_photo)
                                        {
                                            File.Delete(pathPhoto);
                                        }
                                    }
                                    List<string> ls_desc = new List<string>();

                                    ls_desc.Add("đang được tải lên");

                                    while (checkListContent(ldID, ls_desc) != null)
                                    {
                                        Delay(10);
                                    }

                                    if (postVideo)
                                        Delay(15);
                                    if (SettingTool.configld.language == "English")
                                        return "Post successful!";
                                    else
                                        return "Đăng bài thành công";
                                }
                                else
                                {
                                    step++;
                                    if (step <= 5)
                                        goto Lb_Send;
                                }

                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    step++;
                    if (step <= 5)
                    {
                        if (check_Facebook_has_stopped(u, ldID, acc, token) == false)
                        {
                            return "Post not successful!";
                        }
                        goto Lb_start;
                    }

                }
            }
            catch
            { }
            if (SettingTool.configld.language == "English")
                return "Post not successful!";
            else
                return "Đăng bài không thành công";

        }
        private string[] SplitByLength(string s, int d)
        {
            List<string> stringList = new List<string>();
            if (s.Length <= d) stringList.Add(s);
            else
            {
                int x = 0;
                for (; (x + d) < s.Length; x += d)
                {
                    stringList.Add(s.Substring(x, d));
                }
                stringList.Add(s.Substring(x));
            }
            return stringList.ToArray();
        }
        public string PostContent(userLD u, Account acc, string ldID, string app, string content, bool delete, CancellationToken token)
        {
            try
            {
                //activeNewfeed(ldID, app);
                List<DetechModel> list_post = new List<DetechModel>();
                DetechModel data = new DetechModel();

                //List<Bitmap> ls_image = new List<Bitmap>();
                //List<string> ls_name = new List<string>();

                //ls_image.Add(Properties.Resources._2_post_content);
                //ls_name.Add("1_post_content");

                //ls_image.Add(Properties.Resources._1_postGroup);
                //ls_name.Add("1_postGroup");

                //data = new DetechModel();
                //data.parent = "";
                //data.content = "Viết bài trên Facebook";
                //data.text = "Viết bài trên Facebook";
                //data.node = "//node[contains(@class,'android.view.View')]";
                //data.function = 1;

                //SettingTool.lang.list_postcontent.Add(data);

                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
                DetechImageModel detechimg = new DetechImageModel();
                detechimg.name = "poststatus";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_group_poststatus;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "postthaoluan";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_group_thaoluan;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "postthaoluan";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_post_profile_ban_dang_nghi_gi;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_post_ban_viet_gi_di;
                list_detechimg.Add(detechimg);

                data = new DetechModel();
                data.parent = "banbe";
                data.content = "Chọn quyền riêng tư Bạn bè";
                data.text = "Chọn quyền riêng tư Bạn bè";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_postcontent.Insert(0, data);

                int step = 0;
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_postcontent);
                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImages(ldID, list_detechimg);
                    if (kq_image.status)
                        kq = kq_image;
                }

                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                if (kq.parent == "banbe")
                                {
                                    Delay(1);
                                    List<DetechModel> lsmodecongkhai = new List<DetechModel>();
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Công khai";
                                    data.text = "Công khai";
                                    data.node = "//node[contains(@class,'android.widget.TextView')]";
                                    data.function = 1;
                                    lsmodecongkhai.Add(data);

                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Công khai";
                                    data.text = "Công khai";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 1;
                                    lsmodecongkhai.Add(data);

                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Bạn của bạn bè";
                                    data.text = "Bạn của bạn bè";
                                    data.node = "//node[contains(@class,'android.widget.TextView')]";
                                    data.function = 1;
                                    lsmodecongkhai.Add(data);

                                    DetechModel modecongkhai = detechFunction(ldID, lsmodecongkhai);
                                    if (modecongkhai.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, modecongkhai.point);
                                    }
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Xong";
                                    data.text = "Xong";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 1;

                                    lsmodecongkhai = new List<DetechModel>();
                                    lsmodecongkhai.Add(data);

                                    modecongkhai = RunDetechFunction(ldID, lsmodecongkhai);
                                    if (modecongkhai.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, modecongkhai.point);
                                    }
                                    else
                                    {
                                        DetechImageModel image = new DetechImageModel();
                                        image.img = Properties.Resources.xong_post;
                                        kq = detechFunctionCatchImage(ldID, image);
                                        if (kq.status)
                                            ClickOnLeapdroidPosition(ldID, kq.point);
                                        else
                                            back(ldID, 1);
                                    }

                                }
                                break;
                            }
                        case 3:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(2);
                                if (content.Length > 150)
                                {
                                    string[] content_split = SplitByLength(content, 150);
                                    if (content_split.Count() > 0)
                                    {
                                        for (int i = 0; i < content_split.Count(); i++)
                                        {
                                            PressOnLeapdroid_vietnamese(ldID, content_split[i]);
                                            Delay(1);
                                        }
                                    }
                                }
                                else
                                {
                                    PressOnLeapdroid_vietnamese(ldID, content);
                                }
                                PressEnter(ldID);
                                List<DetechModel> ls_hinhnen = new List<DetechModel>();
                                DetechModel model = new DetechModel();
                                model.parent = "";
                                model.content = "hình nền";
                                model.text = "hình nền";
                                model.node = "//node[contains(@class,'android.view.View')]";
                                model.function = 1;
                                ls_hinhnen.Add(model);

                                List<DetechModel> list_kq = detechFunctionListPoint(ldID, ls_hinhnen);

                                if (list_kq.Count > 0)
                                {
                                    Random rd = new Random();
                                    DetechModel kqnen = list_kq[rd.Next(0, list_kq.Count)];
                                    ClickOnLeapdroidPosition(ldID, kqnen.point);
                                }

                                Delay(1);
                                if (delete)
                                {
                                    List<DetechModel> ls_delete = new List<DetechModel>();
                                    model = new DetechModel();
                                    model.parent = "";
                                    model.content = "";
                                    model.text = "";
                                    model.node = "//node[contains(@class,'android.widget.EditText')]";
                                    model.function = 1;
                                    ls_delete.Add(model);

                                    DetechModel kqdelete = detechFunctionContent(ldID, ls_delete);

                                    if (kqdelete.status)
                                    {
                                        for (int i = 0; i < kqdelete.text.Length + 5; i++)
                                        {
                                            runAdb(ldID, "shell input keyevent 67");
                                        }
                                    }
                                }

                                DetechModel kqsend = RunDetechFunction(ldID, SettingTool.lang.list_buttonpost);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    Thread.Sleep(10000);
                                    List<string> ls_desc = new List<string>();
                                    ls_desc.Add("ProgressBar");
                                    if (checkListContent(ldID, ls_desc) != null)
                                    {
                                        Delay(10);
                                    }
                                }
                                if (SettingTool.configld.language == "English")
                                    return "Post successful!";
                                else
                                    return "Đăng bài thành công";
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    scroll_down(ldID);
                    step++;
                    if (step <= 5)
                    {
                        if (check_Facebook_has_stopped(u, ldID, acc, token) == false)
                        {
                            return "Đăng bài không hoàn thành";
                        }
                        goto Lb_start;

                    }
                }
            }
            catch
            { }
            if (SettingTool.configld.language == "English")
                return "Post not successful!";
            else
                return "Đăng bài không hoàn thành";
        }

        public string PostContentGroup(string ldID, string app, string content)
        {

            activeNewfeed(ldID, app);
            List<DetechModel> list_post = new List<DetechModel>();
            DetechModel data = new DetechModel();

            List<Bitmap> ls_image = new List<Bitmap>();
            List<string> ls_name = new List<string>();

            ls_image.Add(Properties.Resources._2_post_content);
            ls_name.Add("1_post_content");

            //data = new DetechModel();
            //data.parent = "";
            //data.content = "Viết bài trên Facebook";
            //data.text = "Viết bài trên Facebook";
            //data.node = "//node[contains(@class,'android.view.View')]";
            //data.function = 1;

            //SettingTool.lang.list_postcontent.Add(data);

            int step = 0;
        Lb_start:
            DetechModel kq = detechFunction(ldID, SettingTool.lang.list_postcontent);

            if (!kq.status)
            {
                DetechModel kq_image = detechFunctionCatchImage(ldID, ls_image, ls_name);
                if (kq_image.status)
                    kq = kq_image;
            }

            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            Delay(1);
                            break;
                        }
                    case 3:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            Delay(2);

                            string[] content_split = SplitByLength(content, 150);
                            if (content_split.Count() > 0)
                            {
                                for (int i = 0; i < content_split.Count(); i++)
                                {
                                    PressOnLeapdroid_vietnamese(ldID, content_split[i]);
                                    Delay(1);
                                }
                            }
                            PressEnter(ldID);
                            Delay(1);
                            DetechModel kqsend = RunDetechFunction(ldID, SettingTool.lang.list_buttonpost);
                            if (kqsend.status)
                            {
                                ClickOnLeapdroidPosition(ldID, kqsend.point);
                                Thread.Sleep(10000);
                                List<string> ls_desc = new List<string>();
                                ls_desc.Add("ProgressBar");
                                if (checkListContent(ldID, ls_desc) != null)
                                {
                                    Delay(10);
                                }
                            }
                            if (SettingTool.configld.language == "English")
                                return "Post successful!";
                            else
                                return "Đăng bài hoàn thành";
                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                scroll_down(ldID);
                step++;
                if (step <= 5)
                {
                    goto Lb_start;

                }
            }
            if (SettingTool.configld.language == "English")
                return "Post not successful!";
            else
                return "Đăng bài không hoàn thành";
        }

        public bool ChangeAvatar(string ldID, string app, List<string> list_file, CancellationToken token, bool removepic = true)
        {
            bool status = false;
            try
            {
                List<string> list_photo = new List<string>();
                string cmd = "";
                if (list_file.Count > 0)
                {
                    deleteFolder2(ldID, "/storage/emulated/0/dcim");
                    createFolder2(ldID, "/storage/emulated/0/dcim");
                    if (list_file.Count > 0)
                    {

                        string path = string.Format("c:\\test\\{0}\\pictures\\temp\\", ldID);

                        List<string> list_pic = System.IO.Directory.GetFiles(path, "*.jpg").ToList();
                        foreach (string str in list_pic)
                        {
                            try
                            {
                                File.Delete(str);
                            }
                            catch
                            { }
                        }
                        Random rd = new Random();
                        string filePath = list_file[rd.Next(0, list_file.Count)];
                        list_file.Remove(filePath);

                        string fileName = Path.GetFileName(filePath);
                        string fileNameCopy = "0" + rd.Next(10000, 99999).ToString() + ".jpg";
                        string filePathCopy = path + fileNameCopy;
                        System.IO.File.Copy(filePath, filePathCopy);

                        list_photo.Add(filePath);

                        if (SettingTool.configld.versionld == "3.x")
                        {
                            //cmd = string.Format(" shell mv -i storage/emulated/legacy/pictures/temp/{0} sdcard/dcim/", fileNameCopy);
                            runAdb(ldID, "shell  rm -r storage/emulated/legacy/launcher/ad");//delete
                        }
                        else
                            cmd = string.Format(" shell mv -i storage/emulated/0/pictures/temp/{0} sdcard/dcim/", fileNameCopy);
                        //string output = runAdb(ldID, cmd);
                        //  runAdb(ldID, String.Format("shell am broadcast -a android.intent.action.MEDIA_SCANNER_SCAN_FILE -d file:///sdcard/dcim/{0}", fileNameCopy));
                        //list_photo.Add(filePath);
                    }

                    cmd = "shell am broadcast -a android.intent.action.MEDIA_MOUNTED -d file:///sdcard/dcim";
                    runAdb(ldID, cmd);
                    //foreach (string file in list_photoCopy)
                    //{
                    //    System.IO.File.Delete(file);
                    //}

                }
                //cmd = String.Format("shell  rm -r sdcard/pictures/temp"); //delete temp
                //runAdb(ldID, cmd);
                //Thread.Sleep(10);
                //cmd = String.Format("shell mkdir sdcard/pictures/temp");//create temp
                //runAdb(ldID, cmd);
                OpenLink(ldID, app, "fb://profile");
                DetechModel Model = new DetechModel();
                Model.parent = "changeavatar";
                Model.content = "Add a photo of yourself so friends can find you";
                Model.text = "Add a photo of yourself so friends can find you";
                Model.node = "";
                Model.function = 0;
                SettingTool.lang.list_changeavatar.Add(Model);

                Model = new DetechModel();
                Model.parent = "changeavatar";
                Model.content = "Cho phép Facebook truy cập";
                Model.text = "Cho phép";
                Model.node = "//node[contains(@class,'android.widget.Button')]";
                Model.function = 1;
                SettingTool.lang.list_changeavatar.Add(Model);

                Model = new DetechModel();
                Model.parent = "changeavatar";
                Model.content = "sáng tạo với bộ lọc";
                Model.text = "sáng tạo với bộ lọc";
                Model.node = "";
                Model.function = 0;
                SettingTool.lang.list_changeavatar.Add(Model);

                Model = new DetechModel();
                Model.parent = "changeavatar";
                Model.content = "nhấn để chỉnh sửa trang";
                Model.text = "nhấn để chỉnh sửa trang";
                Model.node = "";
                Model.function = 0;
                SettingTool.lang.list_changeavatar.Add(Model);

                Model = new DetechModel();
                Model.parent = "clickchange";
                Model.content = "Ảnh đại diện";
                Model.text = "Ảnh đại diện";
                Model.node = "//node[contains(@class,'android.widget.ImageView')]";
                Model.function = 1;
                SettingTool.lang.list_changeavatar.Add(Model);

                bool has_click = false;
                int step = 0;
            Lb_start:
                if (has_click)
                {
                    if (checkScreen(ldID, "com.facebook.photos.pandora.ui.PandoraTabPagerActivity"))
                    {
                        Delay(3);
                        ClickOnLeapdroidPosition(ldID, PointDefault.p_avatar_hd);
                        Delay(1);
                        ClickOnLeapdroidPosition(ldID, PointDefault.p_avatar_img);
                        has_click = false;

                        List<DetechModel> list_next = new List<DetechModel>();
                        DetechModel data = new DetechModel();
                        data.parent = "post";
                        data.content = "Xong";
                        data.text = "Xong";
                        data.node = "//node[contains(@class,'android.widget.Button')]";
                        data.function = 1;
                        list_next.Add(data);

                        data = new DetechModel();
                        data.parent = "post";
                        data.content = "Lưu";
                        data.text = "Lưu";
                        data.node = "//node[contains(@class,'android.widget.Button')]";
                        data.function = 1;
                        list_next.Add(data);
                    Lb_Send:
                        DetechModel kqsend = detechFunction(ldID, list_next);
                        if (kqsend.status)
                        {
                            ClickOnLeapdroidPosition(ldID, kqsend.point);

                            if (removepic)
                            {
                                foreach (string pathPhoto in list_photo)
                                {
                                    File.Delete(pathPhoto);
                                }
                            }
                            Thread.Sleep(7000);

                            return true;
                        }
                        else
                        {
                            step++;
                            if (step <= 3)
                                goto Lb_Send;
                        }

                    }
                }
                // checkScreen(ldID);
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_changeavatar);


                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case -1:
                            {
                                Thread.Sleep(5000);
                                break;
                            }
                        case 0:
                            {
                                back(ldID, 1);
                                break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                if (kq.content == "Chọn ảnh đại diện" || kq.parent == "clickchange")
                                {
                                    has_click = true;
                                }
                                break;
                            }
                        case 2:
                            {
                                Delay(2);
                                List<Point> ls_point = new List<Point>();
                                List<string> ls_desc = new List<string>();
                                ls_desc.Add("ảnh");
                                ls_point = FindByXpathDescList(ldID, "//node[contains(@class,'android.view.View')]", ls_desc);
                                if (ls_point.Count <= 0)
                                {
                                    ls_point = FindByXpathDescList(ldID, "//node[contains(@class,'android.widget.FrameLayout')]", ls_desc);
                                }
                                List<Point> ls_point_button = FindByXpathDescList(ldID, "//node[contains(@class,'android.widget.Button')]", ls_desc);
                                if (ls_point.Count >= 2)
                                {
                                    ClickOnLeapdroidPosition(ldID, ls_point[1]);
                                }
                                if (ls_point_button.Count >= 2)
                                {
                                    ClickOnLeapdroidPosition(ldID, ls_point_button[1]);
                                }
                                List<DetechModel> list_next = new List<DetechModel>();
                                DetechModel data = new DetechModel();
                                data.parent = "post";
                                data.content = "Save";
                                data.text = "Save";
                                data.node = "//node[contains(@class,'android.widget.Button')]";
                                data.function = 1;
                                list_next.Add(data);

                                data = new DetechModel();
                                data.parent = "post";
                                data.content = "Lưu";
                                data.text = "Lưu";
                                data.node = "//node[contains(@class,'android.widget.Button')]";
                                data.function = 1;
                                list_next.Add(data);

                            Lb_Send:
                                DetechModel kqsend = detechFunction(ldID, list_next);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);

                                    if (removepic)
                                    {
                                        foreach (string pathPhoto in list_photo)
                                        {
                                            File.Delete(pathPhoto);
                                        }
                                    }
                                    Thread.Sleep(7000);
                                    return true;
                                }
                                else
                                {
                                    step++;
                                    if (step <= 3)
                                        goto Lb_Send;
                                }
                                break;

                            }
                        case 3:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                changeInfo(ldID);
                                break;
                            }
                        case 4:
                            {
                                List<Point> ls_point = FindByXpathList(ldID, "//node[contains(@class,'android.widget.ImageView')]");
                                if (ls_point.Count > 2)
                                {
                                    ClickOnLeapdroidPosition(ldID, ls_point[4]);
                                }
                                List<DetechModel> list_next = new List<DetechModel>();
                                DetechModel data = new DetechModel();
                                data.parent = "post";
                                data.content = "Save";
                                data.text = "Save";
                                data.node = "//node[contains(@class,'android.widget.Button')]";
                                data.function = 1;
                                list_next.Add(data);

                                data = new DetechModel();
                                data.parent = "post";
                                data.content = "Lưu";
                                data.text = "Lưu";
                                data.node = "//node[contains(@class,'android.widget.Button')]";
                                data.function = 1;
                                list_next.Add(data);

                            Lb_Send:
                                DetechModel kqsend = detechFunction(ldID, list_next);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    Thread.Sleep(7000);
                                    return true;

                                }
                                else
                                {
                                    step++;
                                    if (step <= 3)
                                        goto Lb_Send;
                                }

                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    step++;
                    if (step == 3)
                        OpenLink(ldID, app, "fb://profile");
                    if (step <= 6)
                    {
                        goto Lb_start;
                    }
                }
            }
            catch
            { }
            return status;
        }

        public bool ChangePass(string ldID, Account acc, string passnew, bool has_logout, CancellationToken token)
        {
            bool status = false;
            List<DetechModel> list_detech = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data.parent = "";
            data.content = "Lưu thay đổi";
            data.text = "Lưu thay đổi";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Kiểm tra thiết bị khác";
            data.text = "Kiểm tra thiết bị khác";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;

            list_detech.Add(data);
            data = new DetechModel();
            data.parent = "";
            data.content = "Tiếp tục";
            data.text = "Tiếp tục";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Đổi mật khẩu";
            data.text = "Đổi mật khẩu";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Đổi mật khẩu";
            data.text = "Đổi mật khẩu";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Bảo mật và đăng nhập";
            data.text = "Bảo mật và đăng nhập";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 3;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Bảo mật và đăng nhập";
            data.text = "Bảo mật và đăng nhập";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Security and login";
            data.text = "Security and login";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Đăng xuất khỏi tất cả";
            data.text = "Đăng xuất khỏi tất cả";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "finish";
            data.content = "Đăng xuất";
            data.text = "Đăng xuất";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_detech.Add(data);

            List<Bitmap> ls_image = new List<Bitmap>();
            List<string> ls_name = new List<string>();

            List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
            DetechImageModel detechimg = new DetechImageModel();
            detechimg.name = "sai pass";
            detechimg.function = -1;
            detechimg.img = PointDefault.img_profile_saipass;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "sai pass";
            detechimg.function = -1;
            detechimg.img = PointDefault.img_profile_saipass2;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "passwordcurent";
            detechimg.function = 2;
            detechimg.img = PointDefault.img_profile_password_curent;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "passwordcurent";
            detechimg.function = 2;
            detechimg.img = PointDefault.img_profile_password_curent_en;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "passwordnew";
            detechimg.function = 2;
            detechimg.img = PointDefault.img_profile_password_new;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "passwordnew";
            detechimg.function = 2;
            detechimg.img = PointDefault.img_profile_password_new_en;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "passwordretype";
            detechimg.function = 2;
            detechimg.img = PointDefault.img_profile_password_retype;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "passwordretype";
            detechimg.function = 2;
            detechimg.img = PointDefault.img_profile_password_retype_en;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "finish";
            detechimg.function = 1;
            detechimg.img = PointDefault.img_profile_duytri;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "finish";
            detechimg.function = 1;
            detechimg.img = PointDefault.img_profile_duytri_en;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "changepass";
            detechimg.function = 1;
            detechimg.img = PointDefault.img_profile_change_pass;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "changepass";
            detechimg.function = 1;
            detechimg.img = PointDefault.img_profile_change_pass_en;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "savepass";
            detechimg.function = 1;
            detechimg.img = PointDefault.img_profile_password_save;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "savepass";
            detechimg.function = 1;
            detechimg.img = PointDefault.img_profile_password_save_en;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "savepass";
            detechimg.function = 1;
            detechimg.img = Properties.Resources.save_change;
            list_detechimg.Add(detechimg);

            int step = 0;
            Delay(3);
            OpenLink(ldID, "com.facebook.katana", "fb://account_settings");
            Delay(5);
        Lb_start:
            if (token.IsCancellationRequested)
                token.ThrowIfCancellationRequested();
            DetechModel kq_image = detechFunctionCatchImages(ldID, list_detechimg);
            DetechModel kq = new DetechModel();

            if (kq_image.status)
                kq = kq_image;
            else
            {
                kq = detechFunction(ldID, list_detech);
            }

            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case -1:
                        {
                            acc.Thongbao = "Sai pass";
                            return false;
                        }
                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            Delay(6);
                            if (kq.content.Contains("Kiểm tra thiết bị khác"))
                                list_detech.Remove(kq);

                            if (kq.parent == "savepass")
                            {
                                Data dt = new Data();
                                RequestParams para = new RequestParams();
                                para["Password"] = passnew;
                                RequestParams where = new RequestParams();
                                where["Id_account"] = acc.Id_account;
                                dt.update(para, "Account", where);

                                string path = Application.StartupPath + "\\logpass.txt";

                                StringBuilder builder = new StringBuilder();
                                builder.AppendLine(acc.id.Trim() + "|" + passnew + "|" + acc.Password);
                                File.AppendAllText(path, builder.ToString());
                            }

                            if (kq.content.Contains("Tiếp tục") || kq.content.Contains("continue"))
                            {
                                scroll_up(ldID);
                            }
                            if (kq.parent == "finish")
                            {
                                //ko dang xuat
                                if (has_logout)
                                {
                                    ClickOnLeapdroidPosition(ldID, PointDefault.p_profile_changepass_logout);
                                    Delay(1);
                                    ClickOnLeapdroidPosition(ldID, PointDefault.p_profile_changepass_finish);
                                    Delay(1);
                                    scroll_up(ldID);
                                    scroll_up(ldID);
                                    scroll_up(ldID);
                                    detechimg = new DetechImageModel();
                                    detechimg.name = "logout";
                                    detechimg.function = 1;
                                    detechimg.img = PointDefault.img_profile_logout_all;
                                    List<DetechImageModel> list_detechlogout = new List<DetechImageModel>();
                                    list_detechlogout.Add(detechimg);
                                    kq_image = detechFunctionCatchImages(ldID, list_detechlogout);
                                    if (kq_image.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq_image.point);
                                        Delay(1);
                                        detechimg = new DetechImageModel();
                                        detechimg.name = "logout";
                                        detechimg.function = 1;
                                        detechimg.img = PointDefault.img_profile_logout_all2;
                                        list_detechlogout = new List<DetechImageModel>();
                                        list_detechlogout.Add(detechimg);
                                        kq_image = detechFunctionCatchImages(ldID, list_detechlogout);
                                        if (kq_image.status)
                                        {
                                            ClickOnLeapdroidPosition(ldID, kq_image.point);
                                            Delay(1);
                                        }
                                    }
                                }
                                else
                                {
                                    ClickOnLeapdroidPosition(ldID, PointDefault.p_profile_changepass_finish);
                                }
                                Data dt = new Data();
                                RequestParams para = new RequestParams();
                                para["Password"] = passnew;
                                RequestParams where = new RequestParams();
                                where["Id_account"] = acc.Id_account;
                                dt.update(para, "Account", where);

                                string path = Application.StartupPath + "\\logpass.txt";

                                StringBuilder builder = new StringBuilder();
                                builder.AppendLine(acc.id.Trim() + "|" + passnew + "|" + acc.Password);
                                File.AppendAllText(path, builder.ToString());

                                return true;
                            }

                            break;
                        }

                    case 2:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point.X, kq.point.Y);
                            Delay(1);
                            if (kq.parent == "passwordcurent")
                            {
                                PressOnLeapdroid_vietnamese(ldID, acc.Password.Trim());
                                Delay(1);
                            }

                            if (kq.parent == "passwordnew" || kq.parent == "passwordretype")
                            {
                                PressOnLeapdroid(ldID, passnew);
                                Delay(1);
                            }
                            break;
                        }
                    case 3:
                        {
                            ClickOnLeapdroidPosition(ldID, PointDefault.p_profile_change_pass);
                            break;
                        }

                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                Delay(3);
                step++;
                if (step <= 5)
                {
                    goto Lb_start;
                }
            }

            return status;
        }
        public bool ChangeProfile(string ldID, Account acc, List<string> list_ho, List<string> list_ten, CancellationToken token)
        {
            bool status = false;
            List<DetechModel> list_detech = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data.parent = "";
            data.content = "Thông tin cá nhân";
            data.text = "Thông tin cá nhân";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Cài đặt chung";
            data.text = "Cài đặt chung";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "Ho";
            data.content = "Họ";
            data.text = "Họ";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 2;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "Ten";
            data.content = "Tên";
            data.text = "Tên";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 2;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "Ten";
            data.content = "Tên";
            data.text = "Tên";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 2;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Lưu thay đổi";
            data.text = "Lưu thay đổi";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_detech.Add(data);

            string ho = "";
            string ten = "";

            List<Bitmap> ls_image = new List<Bitmap>();
            List<string> ls_name = new List<string>();

            List<DetechImageModel> list_detechimg = new List<DetechImageModel>();

            DetechImageModel model = new DetechImageModel();
            model.img = PointDefault.img_profile_ten;
            model.name = "name";
            model.function = 2;
            list_detechimg.Add(model);

            model = new DetechImageModel();
            model.img = Properties.Resources._3x_ho;
            model.name = "ho";
            model.function = 2;
            list_detechimg.Add(model);

            model = new DetechImageModel();
            model.img = Properties.Resources._3x_inputpasstosave;
            model.name = "inputpass";
            model.function = 2;
            list_detechimg.Add(model);

            bool has_name = false;
            int step = 0;

            OpenLink(ldID, "com.facebook.katana", "fb://account_settings");
            Delay(6);
        Lb_start:
            if (token.IsCancellationRequested)
                token.ThrowIfCancellationRequested();
            DetechModel kq = detechFunction(ldID, list_detech);
            if (kq.status == false)
            {
                DetechModel kqImage = detechFunctionCatchImages(acc.ldid, list_detechimg);
                if (kqImage.status)
                {
                    kq = kqImage;
                }
            }
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case 1:
                        {
                            if (kq.content == "Lưu thay đổi")
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point.X + 20, kq.point.Y - 30);
                                PressOnLeapdroid_vietnamese(ldID, acc.Password.Trim());
                                ClickOnLeapdroidPosition(ldID, kq.point);

                                Data dt = new Data();
                                RequestParams para = new RequestParams();
                                para["Name"] = ho + " " + ten;
                                RequestParams where = new RequestParams();
                                where["Id_account"] = acc.Id_account;
                                dt.update(para, "Account", where);
                                return true;
                            }
                            else
                                ClickOnLeapdroidPosition(ldID, kq.point);
                            break;
                        }

                    case 2:
                        {
                            Random rd = new Random();
                            if (SettingTool.configld.versionld == "3.x")
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                if (has_name == false)
                                {
                                    Delay(6);
                                    DetechModel kqImage = detechFunctionCatchImages(acc.ldid, list_detechimg);
                                    if (kqImage.parent == "ho")
                                    {
                                        ClickOnLeapdroidPosition(ldID, kqImage.point.X + 100, kqImage.point.Y + 19);
                                        Delay(1);
                                        ClickOnLeapdroidPosition(ldID, kqImage.point.X + 100, kqImage.point.Y + 20);
                                        ClickOnLeapdroidPosition(ldID, kqImage.point.X + 100, kqImage.point.Y + 21);
                                        Delay(1);
                                        runAdb(ldID, "shell input keyevent KEYCODE_MOVE_END");
                                        for (int i = 0; i < 40; i++)
                                        {
                                            runAdb(ldID, "shell input keyevent 67");
                                        }

                                        PressOnLeapdroid_vietnamese(ldID, list_ho[rd.Next(0, list_ho.Count)]);
                                        Delay(2);
                                        List<DetechImageModel> list_detechimg_ten = new List<DetechImageModel>();

                                        model = new DetechImageModel();
                                        model.img = Properties.Resources._3x_ten;
                                        model.name = "ten";
                                        model.function = 2;
                                        list_detechimg_ten.Add(model);
                                        kqImage = detechFunctionCatchImages(acc.ldid, list_detechimg_ten);

                                        if (kqImage.parent == "ten")
                                        {
                                            ClickOnLeapdroidPosition(ldID, kqImage.point.X + 100, kqImage.point.Y + 20);
                                            Delay(1);
                                            runAdb(ldID, "shell input keyevent KEYCODE_MOVE_END");
                                            for (int i = 0; i < 40; i++)
                                            {
                                                runAdb(ldID, "shell input keyevent 67");
                                            }
                                            PressOnLeapdroid_vietnamese(ldID, list_ten[rd.Next(0, list_ten.Count)]);

                                            list_detechimg_ten = new List<DetechImageModel>();
                                            model = new DetechImageModel();
                                            model.img = Properties.Resources._3x_viewchange;
                                            model.name = "";
                                            model.function = 2;
                                            list_detechimg_ten.Add(model);

                                            kqImage = detechFunctionCatchImages(acc.ldid, list_detechimg_ten);
                                            if (kqImage.status)
                                            {
                                                ClickOnLeapdroidPosition(ldID, kqImage.point);
                                                Delay(3);

                                                list_detechimg_ten = new List<DetechImageModel>();
                                                model = new DetechImageModel();
                                                model.img = Properties.Resources._3x_inputpasstosave;
                                                model.name = "inputpass";
                                                model.function = 2;
                                                list_detechimg_ten.Add(model);
                                                kqImage = detechFunctionCatchImages(acc.ldid, list_detechimg_ten);

                                                if (kqImage.status)
                                                {
                                                    ClickOnLeapdroidPosition(ldID, kqImage.point.X, kqImage.point.Y + 18);
                                                    Delay(1);
                                                    PressOnLeapdroid_vietnamese(ldID, acc.Password);
                                                    list_detechimg_ten = new List<DetechImageModel>();
                                                    model = new DetechImageModel();
                                                    model.img = Properties.Resources._3x_savechange;
                                                    model.name = "save";
                                                    model.function = 2;
                                                    list_detechimg_ten.Add(model);
                                                    Delay(2);
                                                    kqImage = detechFunctionCatchImages(acc.ldid, list_detechimg_ten);

                                                    if (kqImage.status)
                                                    {
                                                        ClickOnLeapdroidPosition(ldID, kqImage.point);
                                                        return true;
                                                    }
                                                }

                                            }

                                        }


                                    }

                                }
                                List<DetechImageModel> list_detechimg_pass = new List<DetechImageModel>();
                                model = new DetechImageModel();
                                model.img = Properties.Resources._3x_inputpasstosave;
                                model.name = "inputpass";
                                model.function = 2;
                                list_detechimg_pass.Add(model);
                                runAdb(ldID, "shell input keyevent KEYCODE_MOVE_END");
                                DetechModel kqImageOk = detechFunctionCatchImages(acc.ldid, list_detechimg_pass);
                                if (kqImageOk.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqImageOk.point.X, kqImageOk.point.Y + 18);
                                    Delay(1);
                                    PressOnLeapdroid_vietnamese(ldID, acc.Password);

                                    list_detechimg_pass = new List<DetechImageModel>();
                                    model = new DetechImageModel();
                                    model.img = Properties.Resources._3x_savechange;
                                    model.name = "save";
                                    model.function = 2;
                                    list_detechimg_pass.Add(model);

                                    kqImageOk = detechFunctionCatchImages(acc.ldid, list_detechimg_pass);
                                    if (kqImageOk.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kqImageOk.point);
                                        return true;
                                    }
                                }
                            }
                            else
                            {
                                if (kq.parent == "Ho")
                                {
                                    List<DetechModel> ls_edittext = new List<DetechModel>();
                                    DetechModel modelho = new DetechModel();
                                    modelho.parent = "";
                                    modelho.content = "";
                                    modelho.text = "";
                                    modelho.node = "//node[contains(@class,'android.widget.EditText')]";
                                    modelho.function = 1;
                                    ls_edittext.Add(modelho);

                                    DetechModel result = new DetechModel();
                                    int loop = 3;
                                    while (loop > 0)
                                    {
                                        result = detechFunctionContent(ldID, ls_edittext);
                                        if (result.status)
                                        {
                                            // ClickOnLeapdroidPosition(ldID, result.point);
                                            ClickOnLeapdroidPosition(ldID, result.point.X + 500, result.point.Y);
                                            runAdb(ldID, "shell input keyevent KEYCODE_MOVE_END");
                                            for (int i = 0; i < result.text.Length + 5; i++)
                                            {
                                                runAdb(ldID, "shell input keyevent 67");
                                            }
                                        }
                                        loop--;
                                    }
                                    ho = list_ho[rd.Next(0, list_ho.Count)];
                                    ClickOnLeapdroidPosition(ldID, kq.point.X, kq.point.Y + 50);
                                    PressOnLeapdroid_vietnamese(ldID, ho);

                                    result = detechFunctionCatchImage(ldID, ls_image, ls_name);
                                    if (result.status)
                                    {
                                        ten = list_ten[rd.Next(0, list_ten.Count)];
                                        ClickOnLeapdroidPosition(ldID, result.point.X, result.point.Y + 190);
                                        PressOnLeapdroid_vietnamese(ldID, ten);

                                        List<DetechModel> list_viewchange = new List<DetechModel>();
                                        data = new DetechModel();
                                        data.parent = "";
                                        data.content = "Xem lại thay đổi";
                                        data.text = "Xem lại thay đổi";
                                        data.node = "//node[contains(@class,'android.widget.Button')]";
                                        data.function = 1;
                                        list_viewchange.Add(data);

                                        result = RunDetechFunction(ldID, list_viewchange, 3);
                                        if (result.status)
                                        {
                                            ClickOnLeapdroidPosition(ldID, result.point);
                                            list_detech.Remove(kq);
                                        }

                                    }
                                }

                                if (kq.parent == "Ten")
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point.X, kq.point.Y);
                                    list_detech.Remove(kq);
                                }

                            }
                            break;
                        }


                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                Delay(3);
                if (step <= 5)
                {
                    goto Lb_start;
                }
            }

            return status;
        }

        public bool ChangeCover(string ldID, string app, List<string> list_file, CancellationToken token, bool removepic = true)
        {
            bool status = false;
            try
            {
                List<string> list_photo = new List<string>();
                string cmd = "";
                if (list_file.Count > 0)
                {
                    deleteFolder2(ldID, "sdcard/dcim");
                    createFolder2(ldID, "sdcard/dcim");
                    if (list_file.Count > 0)
                    {

                        //string filename = rd.Next(100000) + ".png";
                        string path = string.Format("c:\\test\\{0}\\pictures\\temp\\", ldID);

                        Random rd = new Random();
                        string filePath = list_file[rd.Next(0, list_file.Count)];
                        list_file.Remove(filePath);
                        string fileName = Path.GetFileName(filePath);
                        string fileNameCopy = "0" + rd.Next(10000, 99999).ToString() + ".jpg";
                        string filePathCopy = path + fileNameCopy;
                        System.IO.File.Copy(filePath, filePathCopy);

                        list_photo.Add(filePath);

                        if (SettingTool.configld.versionld == "3.x")
                        {
                            //cmd = string.Format(" shell mv -i storage/emulated/legacy/pictures/temp/{0} sdcard/dcim/", fileNameCopy);
                            runAdb(ldID, "shell  rm -r storage/emulated/legacy/launcher/ad");//delete
                        }
                        else
                            cmd = string.Format(" shell mv -i storage/emulated/0/pictures/temp/{0} sdcard/dcim/", fileNameCopy);
                        // runAdb(ldID, cmd);

                        runAdb(ldID, String.Format("shell am broadcast -a android.intent.action.MEDIA_SCANNER_SCAN_FILE -d file:///sdcard/dcim/{0}", fileNameCopy));

                    }

                    cmd = "shell am broadcast -a android.intent.action.MEDIA_MOUNTED -d file:///sdcard/dcim";
                    runAdb(ldID, cmd);
                    //foreach (string file in list_photoCopy)
                    //{
                    //    System.IO.File.Delete(file);
                    //}
                }
                //cmd = String.Format("shell  rm -r sdcard/pictures/temp"); //delete temp
                //runAdb(ldID, cmd);
                //Thread.Sleep(10);
                //cmd = String.Format("shell mkdir sdcard/pictures/temp");//create temp
                //runAdb(ldID, cmd);

                OpenLink(ldID, app, "fb://profile");

                DetechModel data = new DetechModel();
                data.parent = "changeavatar";
                data.content = "Cho phép Facebook";
                data.text = "Cho phép";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                SettingTool.lang.list_changecover.Add(data);

                data = new DetechModel();
                data.parent = "changeavatar";
                data.content = "sáng tạo với bộ lọc";
                data.text = "sáng tạo với bộ lọc";
                data.node = "";
                data.function = 0;
                SettingTool.lang.list_changecover.Add(data);

                data = new DetechModel();
                data.parent = "changeavatar";
                data.content = "nhấn để chỉnh sửa trang";
                data.text = "nhấn để chỉnh sửa trang";
                data.node = "";
                data.function = 0;
                SettingTool.lang.list_changecover.Add(data);

                data = new DetechModel();
                data.parent = "changeavatar";
                data.content = "THAY ĐỔI ẢNH BÌA";
                data.text = "THAY ĐỔI ẢNH BÌA";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_changecover.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Thêm tỉnh/thành phố";
                data.text = "Thêm tỉnh/thành phố";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 3;
                SettingTool.lang.list_changecover.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "BỎ QUA";
                data.text = "BỎ QUA";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                SettingTool.lang.list_changecover.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Tiếp tục thiết lập trang cá nhân";
                data.text = "BẮT ĐẦU";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 3;
                SettingTool.lang.list_changecover.Add(data);

                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
                DetechImageModel detechimg = new DetechImageModel();
                detechimg.img = Properties.Resources._1_cover;
                detechimg.name = "cover";
                detechimg.function = 1;
                list_detechimg.Add(detechimg);

                bool has_click = false;
                int step = 0;
            Lb_start:
                if (has_click)
                {
                    if (checkScreen(ldID, "com.facebook.photos.simplepicker.launcher.SimplePickerLauncherActivity"))
                    {
                        Delay(2);

                        ClickOnLeapdroidPosition(ldID, PointDefault.p_cover_hd);
                        Delay(0.5);
                        ClickOnLeapdroidPosition(ldID, PointDefault.p_cover_img);
                        has_click = false;

                        List<DetechModel> list_next = new List<DetechModel>();
                        data = new DetechModel();
                        data.parent = "post";
                        data.content = "Xong";
                        data.text = "Xong";
                        data.node = "//node[contains(@class,'android.widget.Button')]";
                        data.function = 1;
                        list_next.Add(data);

                        data = new DetechModel();
                        data.parent = "post";
                        data.content = "Lưu";
                        data.text = "Lưu";
                        data.node = "//node[contains(@class,'android.widget.Button')]";
                        data.function = 1;
                        list_next.Add(data);
                    Lb_Send:
                        DetechModel kqsend = detechFunction(ldID, list_next);
                        if (kqsend.status)
                        {
                            ClickOnLeapdroidPosition(ldID, kqsend.point);

                            if (removepic)
                            {
                                foreach (string pathPhoto in list_photo)
                                {
                                    File.Delete(pathPhoto);
                                }
                            }
                            Thread.Sleep(12000);

                            return true;
                        }
                        else
                        {
                            step++;
                            if (step <= 3)
                                goto Lb_Send;
                        }

                    }
                }
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_changecover);

                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImages(ldID, list_detechimg);
                    if (kq_image.status)
                        kq = kq_image;
                    else
                    {
                        ClickOnLeapdroidPosition(ldID, PointDefault.p_cover_button);
                    }
                }
                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case -1:
                            {
                                Thread.Sleep(5000);
                                break;
                            }
                        case 0:
                            {
                                back(ldID, 1);
                                break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                if (kq.text == "Tải ảnh lên")
                                {
                                    has_click = true;
                                }
                                break;
                            }
                        case 2:
                            {
                                Delay(2);
                                List<Point> ls_point = new List<Point>();
                                List<string> ls_desc = new List<string>();
                                ls_desc.Add("ảnh");
                                ls_point = FindByXpathDescList(ldID, "//node[contains(@class,'android.view.View')]", ls_desc);
                                if (ls_point.Count <= 0)
                                {
                                    ls_point = FindByXpathDescList(ldID, "//node[contains(@class,'android.widget.FrameLayout')]", ls_desc);
                                }
                                List<Point> ls_point_button = FindByXpathDescList(ldID, "//node[contains(@class,'android.widget.Button')]", ls_desc);
                                if (ls_point.Count >= 1)
                                {
                                    ClickOnLeapdroidPosition(ldID, ls_point[0]);
                                }
                                if (ls_point_button.Count >= 1)
                                {
                                    ClickOnLeapdroidPosition(ldID, ls_point_button[0]);
                                }
                                List<DetechModel> list_next = new List<DetechModel>();
                                data = new DetechModel();
                                data.parent = "post";
                                data.content = "Save";
                                data.text = "Save";
                                data.node = "//node[contains(@class,'android.widget.Button')]";
                                data.function = 1;
                                list_next.Add(data);

                                data = new DetechModel();
                                data.parent = "post";
                                data.content = "Lưu";
                                data.text = "Lưu";
                                data.node = "//node[contains(@class,'android.widget.Button')]";
                                data.function = 1;
                                list_next.Add(data);

                            Lb_Send:
                                DetechModel kqsend = detechFunction(ldID, list_next);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);

                                    if (removepic)
                                    {
                                        foreach (string pathPhoto in list_photo)
                                        {
                                            File.Delete(pathPhoto);
                                        }
                                    }
                                    Thread.Sleep(12000);

                                    return true;
                                }
                                else
                                {
                                    step++;
                                    if (step <= 3)
                                        goto Lb_Send;
                                }
                                return false;

                            }
                        case 3:
                            {
                                changeInfo(ldID);
                                break;
                            }
                        case 4:
                            {
                                List<Point> ls_point = FindByXpathList(ldID, "//node[contains(@class,'android.widget.ImageView')]");
                                if (ls_point.Count > 2)
                                {
                                    ClickOnLeapdroidPosition(ldID, ls_point[4]);
                                }
                                List<DetechModel> list_next = new List<DetechModel>();
                                data = new DetechModel();
                                data.parent = "post";
                                data.content = "Save";
                                data.text = "Save";
                                data.node = "//node[contains(@class,'android.widget.Button')]";
                                data.function = 1;
                                list_next.Add(data);

                                data = new DetechModel();
                                data.parent = "post";
                                data.content = "Lưu";
                                data.text = "Lưu";
                                data.node = "//node[contains(@class,'android.widget.Button')]";
                                data.function = 1;
                                list_next.Add(data);

                            Lb_Send:
                                DetechModel kqsend = detechFunction(ldID, list_next);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    Thread.Sleep(13000);
                                    return true;

                                }
                                else
                                {
                                    step++;
                                    if (step <= 3)
                                        goto Lb_Send;
                                }

                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    step++;
                    if (step <= 5)
                    {
                        goto Lb_start;

                    }

                }
            }
            catch { }
            return status;
        }

        public bool changeInfo(string ldID)
        {
            bool status = false;
            int step = 0;
            Random rd = new Random();
        Lb_start:
            DetechModel kq = detechFunction(ldID, SettingTool.lang.list_changeinfo);
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case -1:
                        {
                            Thread.Sleep(5000);
                            break;
                        }
                    case 0:
                        {
                            back(ldID, 1);
                            break;
                        }
                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            Delay(1);
                            break;
                        }
                    case 2:
                        {
                            List<Point> list_goiy = FindByXpathTree(ldID, "//node[contains(@class,'android.widget.HorizontalScrollView')]", "//node[contains(@class,'android.widget.Button')]");
                            if (list_goiy.Count > 0)
                            {
                                ClickOnLeapdroidPosition(ldID, list_goiy[rd.Next(0,list_goiy.Count -1)]);

                                List<DetechModel> list_OK = new List<DetechModel>();
                                DetechModel data = new DetechModel();
                                data.parent = "Avatar";
                                data.content = "LƯU";
                                data.text = "LƯU";
                                data.node = "//node[contains(@class,'android.widget.TextView')]";
                                data.function = 1;
                                list_OK.Add(data);

                                data = new DetechModel();
                                data.parent = "Avatar";
                                data.content = "SAVE";
                                data.text = "SAVE";
                                data.node = "//node[contains(@class,'android.widget.TextView')]";
                                data.function = 1;
                                list_OK.Add(data);

                                data = new DetechModel();
                                data.parent = "Avatar";
                                data.content = "OK";
                                data.text = "OK";
                                data.node = "//node[contains(@class,'android.widget.TextView')]";
                                data.function = 1;
                                list_OK.Add(data);

                                DetechModel kqok = RunDetechFunction(ldID, list_OK, 3);
                                if (kqok.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqok.point);
                                    Delay(3);
                                }
                            }
                            else
                            {
                                List<DetechModel> list_OK = new List<DetechModel>();
                                DetechModel data = new DetechModel();
                                data = new DetechModel();
                                data.parent = "Avatar";
                                data.content = "Bỏ qua";
                                data.text = "Bỏ qua";
                                data.node = "//node[contains(@class,'android.widget.Button')]";
                                data.function = 1;
                                list_OK.Add(data);

                                data = new DetechModel();
                                data.parent = "Avatar";
                                data.content = "Skip";
                                data.text = "Skip";
                                data.node = "//node[contains(@class,'android.widget.Button')]";
                                data.function = 1;
                                list_OK.Add(data);

                                DetechModel kqok = RunDetechFunction(ldID, list_OK, 3);
                                if (kqok.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqok.point);
                                    Delay(3);
                                }
                            }
                            break;
                        }
                    case 3:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            Delay(1);
                            break;
                        }
                    case 4:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            Delay(1);
                            status = true;
                            return status;

                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step <= 5)
                {
                    goto Lb_start;

                }

            }
            return status;
        }
        public int ShareLiveStreamGroup(userLD u, Account acc, DataGridViewRow dr, string link, string content, int numgroup, int i_delay, CancellationToken token)
        {
            int message = 0;

            if (!checkscreenLivestream(acc))
            {
                Delay(7);
            }
            u.setStatusSum(numgroup);
            try
            {

                DetechModel data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên nhóm";
                data.text = "Chia sẻ lên nhóm";
                data.node = "//node[contains(@class,'android.widget.ImageButton')]";
                data.function = 1;
                SettingTool.lang.list_sharelive.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên một nhóm";
                data.text = "Chia sẻ lên một nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharelive.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Write a message";
                data.text = "Write a message";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                SettingTool.lang.list_sharelive.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Phiên đã hết hạn";
                data.text = "ĐỒNG Ý";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = -3;
                SettingTool.lang.list_shareprofile.Add(data);

                List<DetechImageModel> list_images = new List<DetechImageModel>();
                DetechImageModel image = new DetechImageModel();
                image.function = 1;
                image.name = "sharelive";
                image.img = Properties.Resources._1_sharelive;
                list_images.Add(image);

                image = new DetechImageModel();
                image.function = 1;
                image.name = "sharelive";
                image.img = Properties.Resources._1_sharelive_3x;
                list_images.Add(image);

                image = new DetechImageModel();
                image.function = 1;
                image.name = "sharelive";
                image.img = Properties.Resources._1_sharelive_3xEn;
                list_images.Add(image);


                int step = 0;
                bool has_share = false;
                int numshare = 0;

                Point pointA = new Point();
                Point pointB = new Point();
                bool set_point = true;
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(acc.ldid, SettingTool.lang.list_sharelive);
                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImages(acc.ldid, list_images);
                    if (kq_image.status)
                        kq = kq_image;
                }
                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                dr.Cells["Message"].Value = kq.content;
                                acc.Thongbao = kq.content;
                                goto Lb_finish;
                            }
                        case -3:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                if (LoginPhienHetHan(u, acc, token) == false)
                                {
                                    dr.Cells["Message"].Value = "Lỗi login Facebook";
                                    acc.Thongbao = kq.content;
                                    goto Lb_finish;
                                }
                                break;
                            }
                        case -2:
                            {
                                dr.Cells["Message"].Value = kq.content;
                                acc.Thongbao = kq.content;
                                goto Lb_finish;
                            }
                        case -1:
                            {
                                Thread.Sleep(5000);
                                break;
                            }
                        case 0:
                            {
                                back(acc.ldid, 1);
                                break;
                            }
                        case 1:
                            {
                                if (has_share)
                                {
                                    List<string> list_text = new List<string>();
                                    list_text.Add("chia sẻ");
                                    list_text.Add("share");
                                    List<Point> list_point = FindByXpathDescList(acc.ldid, "//node[contains(@class,'android.widget.Button')]", list_text);
                                    if (list_point.Count > 0)
                                    {
                                        if (set_point)
                                        {
                                            if (list_point.Count == 3)
                                            {
                                                pointA = list_point[0];
                                                pointB = list_point[2];
                                                set_point = false;
                                            }
                                            if (list_point.Count == 2)
                                            {
                                                pointA = list_point[0];
                                                pointB = list_point[1];
                                                set_point = false;
                                            }
                                        }

                                        Random rd = new Random();
                                        Point p = list_point[rd.Next(0, list_point.Count)];
                                        ClickOnLeapdroidPosition(acc.ldid, p);
                                        numshare++;
                                        u.setStatusResult(numshare);

                                        //  dr.Cells["clSuccess"].Value = numshare;

                                        if (list_point.Count == 1)
                                        {
                                            scroll_up_point(acc.ldid, pointB, pointA);
                                        }

                                        Delay(i_delay);
                                        if (numshare >= numgroup)
                                        {
                                            message = numshare;
                                            goto Lb_finish;
                                        }
                                    }
                                    else
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);

                                    //scroll_up_short(acc.ldid, kq.point);
                                }
                                else
                                {
                                    //if (kq.parent == "fullscreen")
                                    //    ClickOnLeapdroidPosition(acc.ldid, kq.point.X - 10, kq.point.Y + 50);
                                    //else
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                }
                                Delay(1);

                                break;
                            }
                        case 2:
                            {
                                if (string.IsNullOrEmpty(content) == false)
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    Delay(1);
                                    PressOnLeapdroid_vietnamese(acc.ldid, FunctionHelper.method_Spin(content));
                                }
                                else
                                {
                                    List<string> list_text = new List<string>();
                                    list_text.Add("chia sẻ");
                                    list_text.Add("share");
                                    List<Point> list_point = FindByXpathDescList(acc.ldid, "//node[contains(@class,'android.widget.Button')]", list_text);
                                    if (list_point.Count > 0)
                                    {
                                        if (set_point)
                                        {
                                            if (list_point.Count == 3)
                                            {
                                                pointA = list_point[0];
                                                pointB = list_point[2];
                                                set_point = false;
                                            }
                                            if (list_point.Count == 2)
                                            {
                                                pointA = list_point[0];
                                                pointB = list_point[1];
                                                set_point = false;
                                            }
                                        }

                                        Random rd = new Random();
                                        Point p = list_point[rd.Next(0, list_point.Count)];
                                        ClickOnLeapdroidPosition(acc.ldid, p);

                                        numshare++;
                                        dr.Cells["clSuccess"].Value = numshare + "/" + numgroup.ToString(); ;
                                        u.setStatusResult(numshare);

                                        if (list_point.Count == 1)
                                        {
                                            if (pointA.X == 0 || pointB.Y == 0)
                                                scroll_up_livestream(acc.ldid);
                                            else
                                                scroll_up_point(acc.ldid, pointB, pointA);
                                        }

                                        Delay(i_delay);
                                        if (numshare >= numgroup)
                                        {
                                            message = numshare;
                                            goto Lb_finish;
                                        }
                                    }
                                    else
                                    {
                                        if (pointA.X == 0 || pointB.Y == 0)
                                            scroll_up_livestream(acc.ldid);
                                        else
                                            scroll_up_point(acc.ldid, pointB, pointA);

                                        list_point = FindByXpathDescList(acc.ldid, "//node[contains(@class,'android.widget.Button')]", list_text);
                                        if (list_point.Count <= 0)
                                        {
                                            message = numshare;
                                            return message;
                                        }
                                    }
                                }
                                has_share = true;
                                // scroll_up_randomShare(acc.ldid);
                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    //link profile can scroll de click nut play 
                    scroll_up_livestream(acc.ldid);
                    step++;

                    if (step <= 10)
                    {
                        goto Lb_start;
                    }

                    message = numshare;
                }
            Lb_finish:
                numshare = 0;

            }
            catch
            { }
            return message;
        }


        public int ShareLiveStreamGroup_NoApproval(userLD u, Account acc, DataGridViewRow dr, string link, string content, int numgroup, int i_delay, List<GroupFB> list_group, ref StringBuilder history, CancellationToken token)
        {
            int message = 0;
            try
            {
                List<DetechModel> list_write = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "post";
                data.content = "Write a message";
                data.text = "Write a message…";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_write.Add(data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "Viết tin nhắn";
                data.text = "Viết tin nhắn…";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_write.Add(data);

                List<DetechModel> list_search = new List<DetechModel>();
                data = new DetechModel();
                data.parent = "search";
                data.content = "Tìm kiếm";
                data.text = "Tìm kiếm";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_search.Add(data);

                data = new DetechModel();
                data.parent = "search";
                data.content = "Search";
                data.text = "Search";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_search.Add(data);

                data = new DetechModel();
                data.parent = "fullscreen";
                data.content = "Toàn màn hình";
                data.text = "Toàn màn hình";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharelivenoapprove.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Phiên đã hết hạn";
                data.text = "ĐỒNG Ý";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = -3;
                SettingTool.lang.list_sharelivenoapprove.Add(data);

                List<DetechImageModel> list_images = new List<DetechImageModel>();
                DetechImageModel image = new DetechImageModel();
                image.function = 1;
                image.name = "sharelive";
                image.img = Properties.Resources._1_sharelive;
                list_images.Add(image);

                list_images = new List<DetechImageModel>();
                image = new DetechImageModel();
                image.function = 1;
                image.name = "sharelive";
                image.img = Properties.Resources._1_sharelive_3x;
                list_images.Add(image);

                list_images = new List<DetechImageModel>();
                image = new DetechImageModel();
                image.function = 1;
                image.name = "sharelive";
                image.img = Properties.Resources._1_sharelive_3xEn;
                list_images.Add(image);

                list_images = new List<DetechImageModel>();
                image = new DetechImageModel();
                image.function = 1;
                image.name = "sharelive";
                image.img = Properties.Resources._3x_share_video_watch;
                list_images.Add(image);

                list_images = new List<DetechImageModel>();
                image = new DetechImageModel();
                image.function = 1;
                image.name = "sharelive";
                image.img = Properties.Resources._3x_share_video_watch_trang;
                list_images.Add(image);
                int i = 0;
                List<DetechModel> list_checklive = new List<DetechModel>();
                data = new DetechModel();
                data.parent = "livestream";
                data.content = "TRỰC TIẾP";
                data.text = "TRỰC TIẾP";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                list_checklive.Add(data);

                DetechModel kqcheck = detechFunction(acc.ldid, list_checklive);
                if (kqcheck.status == false)
                {
                    if (link.Contains("http"))
                        OpenLink(acc.ldid, "com.facebook.katana", link);
                    else
                        searchlivestream(acc, dr, link, token);
                    Delay(3);
                }
                int step = 0;
                bool has_share = false;
                int numshare = 0;
                u.setStatusSum(numgroup);
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                DetechModel kq = detechFunction(acc.ldid, SettingTool.lang.list_sharelivenoapprove);
                //  ScreenShoot(acc.ldid);
                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImages(acc.ldid, list_images);
                    if (kq_image.status)
                        kq = kq_image;
                }

                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                if (LoginPhienHetHan(u, acc, token) == false)
                                {
                                    dr.Cells["Message"].Value = "Lỗi login Facebook";
                                    acc.Thongbao = kq.content;
                                    goto Lb_finish;
                                }
                                break;

                            }
                        case -3:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                if (LoginPhienHetHan(u, acc, token) == false)
                                {
                                    dr.Cells["Message"].Value = "Lỗi login Facebook";
                                    acc.Thongbao = kq.content;
                                    goto Lb_finish;
                                }
                                //login lai 
                                break;
                            }
                        case -2:
                            {
                                dr.Cells["Message"].Value = kq.content;
                                acc.Thongbao = kq.content;
                                goto Lb_finish;
                            }
                        case -1:
                            {
                                Thread.Sleep(5000);
                                break;
                            }
                        case 0:
                            {
                                back(acc.ldid, 2);
                                has_share = false;
                                break;
                            }
                        case 1:
                            {
                                if (has_share)
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    numshare++;
                                    dr.Cells["clSuccess"].Value = numshare;
                                    List<DetechModel> list_deleteseach = new List<DetechModel>();
                                    data = new DetechModel();
                                    data.parent = "post";
                                    data.content = "Xóa nội dung";
                                    data.text = "Xóa nội dung";
                                    data.node = "//node[contains(@class,'android.widget.ImageView')]";
                                    data.function = 2;
                                    list_deleteseach.Add(data);

                                    DetechModel kq_seach = RunDetechFunction(acc.ldid, list_deleteseach);
                                    if (kq_seach.status)
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kq_seach.point);
                                        Thread.Sleep(i_delay * 1000);
                                        //tiep tuc seach và share

                                    }
                                    else
                                    {
                                        back(acc.ldid, 1);
                                    }
                                    u.setStatusResult(numshare);
                                    // back(acc.ldid, 1);
                                    has_share = false;
                                    if (numshare >= numgroup)
                                    {
                                        message = numshare;
                                        goto Lb_finish;
                                    }
                                }
                                else
                                {
                                    if (kq.parent == "fullscreen")
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point.X - 10, kq.point.Y + 50);
                                    else
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                }

                                Delay(1);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                Delay(1);

                                if (string.IsNullOrEmpty(content) == false)
                                {
                                    DetechModel kqwrite = detechFunction(acc.ldid, list_write);

                                    if (kqwrite.status)
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kqwrite.point);
                                        Thread.Sleep(1000);
                                        if (string.IsNullOrEmpty(content))
                                        {
                                            PressOnLeapdroid_vietnamese(acc.ldid, " ");
                                        }
                                        else
                                        {
                                            PressOnLeapdroid_vietnamese(acc.ldid, FunctionHelper.method_Spin(content));
                                        }


                                    }
                                }

                                list_checklive = new List<DetechModel>();
                                data = new DetechModel();
                                data.parent = "livestream";
                                data.content = "Tìm kiếm";
                                data.text = "Tìm kiếm";
                                data.node = "//node[contains(@class,'android.widget.EditText')]";
                                data.function = 1;
                                list_checklive.Add(data);
                                DetechModel kqseach = detechFunction(acc.ldid, list_checklive);
                                if (kqseach.status)
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kqseach.point);
                                }
                            Lb_Next:
                                if (list_group.Count > 0)
                                {
                                    Random rd = new Random();

                                    GroupFB gr = list_group[rd.Next(0, list_group.Count)];
                                    if (history.ToString().Contains(gr.id) == false)
                                    {
                                        PressOnLeapdroid_vietnamese(acc.ldid, gr.name);
                                        list_group.Remove(gr);
                                        history.AppendLine(gr.id);
                                        Delay(1);

                                        List<DetechModel> list_share = new List<DetechModel>();
                                        data = new DetechModel();
                                        data.parent = "post";
                                        data.content = "Chia sẻ";
                                        data.text = "Chia sẻ";
                                        data.node = "//node[contains(@class,'android.widget.Button')]";
                                        data.function = 1;
                                        list_share.Add(data);
                                        DetechModel kqshare = detechFunction(acc.ldid, list_share);
                                        if (kqshare.status)
                                        {
                                            ClickOnLeapdroidPosition(acc.ldid, kqshare.point);
                                            Delay(1);
                                            numshare++;
                                            u.setStatusResult(numshare);
                                            dr.Cells["clSuccess"].Value = numshare;
                                            List<DetechModel> list_deleteseach = new List<DetechModel>();
                                            data = new DetechModel();
                                            data.parent = "post";
                                            data.content = "Xóa nội dung";
                                            data.text = "Xóa nội dung";
                                            data.node = "//node[contains(@class,'android.widget.ImageView')]";
                                            data.function = 2;
                                            list_deleteseach.Add(data);

                                            DetechModel kq_seach = RunDetechFunction(acc.ldid, list_deleteseach);
                                            if (kq_seach.status)
                                            {
                                                ClickOnLeapdroidPosition(acc.ldid, kq_seach.point);
                                                Thread.Sleep(i_delay * 1000);
                                                //tiep tuc seach và share
                                            }
                                            else
                                            {
                                                back(acc.ldid, 1);
                                            }
                                            if (numshare >= numgroup)
                                            {
                                                message = numshare;
                                                goto Lb_finish;
                                            }
                                        }
                                        else
                                        {
                                            ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_share_video_watch_seach);
                                            Delay(1);
                                        }
                                    }
                                    else
                                    {
                                        list_group.Remove(gr);
                                        goto Lb_Next;
                                    }
                                }
                                else
                                {
                                    message = numshare;
                                    return message;
                                }


                                has_share = true;
                                break;
                            }
                        default:
                            break;

                    }
                    goto Lb_start;
                }
                else
                {
                    scroll_up_short(acc.ldid);

                    if (step == 4)
                    {
                        if (!has_share & link.Contains("http"))
                            OpenLink(acc.ldid, "com.facebook.katana", FunctionHelper.method_Spin(link));
                        Delay(3);
                    }

                    step++;
                    if (step < 6)
                    {
                        scroll_up_mid(acc.ldid);
                        Delay(1);
                        goto Lb_start;

                    }
                    message = numshare;
                }
            Lb_finish:
                numshare = 0;
                i++;

            }
            catch
            { }
            return message;
        }

        public void SharePost(Account acc, DataGridViewRow dr, List<string> list_link, string content, int numgroup, int i_delay)
        {
            if (list_link.Count > 0)
            {
                List<DetechModel> list_write = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "post";
                data.content = "LIVE";
                data.text = "Write a message…";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_write.Add(data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "TRỰC TIẾP";
                data.text = "Viết tin nhắn…";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_write.Add(data);

                foreach (string link in list_link)
                {
                    OpenLink(acc.ldid, "com.facebook.katana", link);
                    Delay(3);
                    //ClickOnLeapdroidPosition(acc.ldid, 300, 300);
                    //ClickOnLeapdroidPosition(acc.ldid, 300, 300);
                    int step = 0;
                    bool has_share = false;
                    int numshare = 0;
                Lb_start:
                    DetechModel kq = detechFunction(acc.ldid, SettingTool.lang.list_sharelive);
                    if (kq.status)
                    {
                        step = 0;
                        switch (kq.function)
                        {
                            case -2:
                                {
                                    dr.Cells["Message"].Value = kq.content;
                                    acc.Thongbao = kq.content;
                                    goto Lb_finish;
                                }
                            case -1:
                                {
                                    Thread.Sleep(5000);
                                    break;
                                }
                            case 0:
                                {
                                    back(acc.ldid, 1);
                                    break;
                                }
                            case 1:
                                {
                                    if (has_share)
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                        numshare++;
                                        dr.Cells["clSuccess"].Value = numshare;
                                        Delay(i_delay);
                                        if (numshare >= numgroup)
                                            goto Lb_finish;
                                        scroll_up_short(acc.ldid, kq.point);
                                    }
                                    else
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    }

                                    Delay(1);
                                    break;
                                }
                            case 2:
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    Delay(2);

                                    DetechModel kqwrite = RunDetechFunction(acc.ldid, list_write);

                                    if (kqwrite.status)
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kqwrite.point);
                                        Thread.Sleep(1000);
                                        string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                        if (content_split.Count() > 0)
                                        {
                                            for (int i = 0; i < content_split.Count(); i++)
                                            {
                                                PressOnLeapdroid_vietnamese(acc.ldid, content_split[i]);
                                                Delay(1);
                                            }
                                        }
                                        // PressOnLeapdroid_vietnamese(acc.ldid, FunctionHelper.method_Spin(content));
                                    }
                                    has_share = true;
                                    break;
                                }
                            default:
                                break;
                        }
                        goto Lb_start;
                    }
                    else
                    {
                        if (!checkScreen(acc.ldid, "com.facebook.video"))
                            OpenLink(acc.ldid, "com.facebook.katana", FunctionHelper.method_Spin(link));

                        step++;
                        if (step <= 5)
                        {
                            goto Lb_start;
                        }
                    }
                Lb_finish:
                    numgroup = 0;
                }
                activeNewfeed(acc.ldid, "com.facebook.katana");
            }
        }

        public int SharePostGroup(userLD u, Account acc, DataGridViewRow dr, string link, string content, int numgroup, int i_delay, CancellationToken token)
        {
            int message = 0;

            try
            {
                List<DetechModel> ls_detechShare = new List<DetechModel>();
                DetechModel detech = new DetechModel();

                detech = new DetechModel();
                detech.parent = "sharephoto";
                detech.content = "trong nhóm";
                detech.text = "trong nhóm";
                detech.node = "//node[contains(@class,'android.widget.TextView')]";
                detech.function = 1;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "sharephoto";
                detech.content = "Chia sẻ lên Facebook";
                detech.text = "Chia sẻ lên Facebook";
                detech.node = "//node[contains(@class,'android.widget.Button')]";
                detech.function = 1;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "";
                detech.content = "Viết tin nhắn";
                detech.text = "Viết tin nhắn";
                detech.node = "//node[contains(@class,'android.widget.EditText')]";
                detech.function = 3;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "sharephoto";
                detech.content = "chọn nhóm";
                detech.text = "chọn nhóm";
                detech.node = "//node[contains(@class,'android.widget.TextView')]";
                detech.function = 2;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "sharephoto";
                detech.content = "choose group";
                detech.text = "choose group";
                detech.node = "//node[contains(@class,'android.widget.TextView')]";
                detech.function = 2;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "";
                detech.content = "Chia sẻ lên một nhóm";
                detech.text = "Chia sẻ lên một nhóm";
                detech.node = "//node[contains(@class,'android.view.View')]";
                detech.function = 1;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "";
                detech.content = "Chia sẻ lên nhóm";
                detech.text = "Chia sẻ lên nhóm";
                detech.node = "//node[contains(@class,'android.view.View')]";
                detech.function = 1;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "";
                detech.content = "Share to a Group";
                detech.text = "Share to a Group";
                detech.node = "//node[contains(@class,'android.view.View')]";
                detech.function = 1;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "share";
                detech.content = "CHIA SẺ";
                detech.text = "CHIA SẺ";
                detech.node = "//node[contains(@class,'android.widget.Button')]";
                detech.function = 1;
                SettingTool.lang.list_sharepost.Add(detech);

                detech = new DetechModel();
                detech.parent = "";
                detech.content = "Phiên đã hết hạn";
                detech.text = "ĐỒNG Ý";
                detech.node = "//node[contains(@class,'android.widget.Button')]";
                detech.function = -3;
                SettingTool.lang.list_sharepost.Add(detech);

                string result = functionOpenLink(acc.ldid, "com.facebook.katana", FunctionHelper.method_Spin(link));
                Delay(3);
                if (result.Contains("Error") || result == "")
                {
                    // message += " | link không mở được link";
                    goto Lb_finish;
                }

                int step = 0;
                int numshare = 0;

            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                //if (list_link[i].Contains("photo"))// xu ly them voi link la photo
                //{
                if (checkContentLD(acc.ldid, "Không có nhóm| No groups"))
                {
                    dr.Cells["Message"].Value = " | link Không có nhóm (No groups)";
                    goto Lb_finish;
                }
                DetechModel kq_plus = detechFunction(acc.ldid, ls_detechShare);
                if (kq_plus.status)
                {
                    switch (kq_plus.function)
                    {
                        case -3:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq_plus.point);
                                LoginPhienHetHan(u, acc, token);
                                break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq_plus.point);
                                Delay(1);
                                if (kq_plus.parent == "sharegroupnow")
                                {
                                    if (choosegroupandcommnet(acc.ldid, content))
                                    {
                                        numshare++;
                                        dr.Cells["clSuccess"].Value = numshare;
                                        if (numshare >= numgroup)
                                        {
                                            message = numshare;
                                            goto Lb_finish;
                                        }

                                        Delay(i_delay);
                                        goto Lb_start;
                                    }
                                }

                                goto Lb_start;

                            }
                        case 2:
                            {
                                if (choosegroupandcommnet(acc.ldid, content))
                                {
                                    numshare++;
                                    dr.Cells["clSuccess"].Value = numshare;
                                    if (numshare >= numgroup)
                                    {
                                        message = numshare;
                                        goto Lb_finish;
                                    }

                                    Delay(i_delay);
                                    goto Lb_start;
                                }
                                break;
                            }
                        case 3:
                            {
                                Random rd = new Random();
                                string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int i = 0; i < content_split.Count(); i++)
                                    {
                                        PressOnLeapdroid_vietnamese(acc.ldid, content_split[i]);
                                        Delay(1);
                                    }
                                }
                                // PressOnLeapdroid_vietnamese(acc.ldid, FunctionHelper.method_Spin(content));
                                break;
                            }
                    }
                }
                //}
                DetechModel kq = detechFunction(acc.ldid, SettingTool.lang.list_sharepost);
                if (kq.status & kq.point.Y > 20)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                dr.Cells["Message"].Value = kq.content;
                                return message;
                            }
                        case -2:
                            {
                                dr.Cells["Message"].Value = kq.content;
                                //return;
                                message = 0;
                                goto Lb_finish;
                            }

                        case -1:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                Thread.Sleep(5000);
                                break;
                            }

                        case 1:
                            {
                                if (kq.text.ToLower() == "đăng" || kq.text.ToLower() == "post" || kq.parent == "share")
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    numshare++;
                                    dr.Cells["clSuccess"].Value = numshare;
                                    if (numshare >= numgroup)
                                    {
                                        message = numshare;
                                        goto Lb_finish;
                                    }

                                    Delay(1);
                                }
                                else
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    Delay(1);
                                }
                                break;
                            }
                        case 2:
                            {
                                if (kq.parent == "sharephoto")
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    Delay(1);
                                    if (choosegroupandcommnet(acc.ldid, content))
                                    {
                                        numshare++;
                                        dr.Cells["clSuccess"].Value = numshare;
                                        if (numshare >= numgroup)
                                        {
                                            message = numshare;
                                            goto Lb_finish;
                                        }
                                        Delay(i_delay);
                                        goto Lb_start;
                                    }
                                }
                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    step++;
                    if (step < 30)
                    {
                        scroll_up_mid(acc.ldid);
                        goto Lb_start;
                    }
                    else
                    {
                        message = numshare;
                    }

                }
            Lb_finish:
                numshare = 0;

            }
            catch
            { }
            activeNewfeed(acc.ldid, "com.facebook.katana");

            return message;
        }
        public int SharePostGroup_NoApproval(userLD u, Account acc, DataGridViewRow dr, string link, string content, int numgroup, int i_delay, List<GroupFB> ls_group, ref StringBuilder history, CancellationToken token)
        {
            int message = 0;
            try
            {
                List<DetechModel> ls_detechShare = new List<DetechModel>();
                DetechModel detech = new DetechModel();

                detech = new DetechModel();
                detech.parent = "sharephoto";
                detech.content = "Phiên đã hết hạn";
                detech.text = "Đồng ý";
                detech.node = "//node[contains(@class,'android.widget.Button')]";
                detech.function = -10;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "sharephoto";
                detech.content = "Session Expired";
                detech.text = "Ok";
                detech.node = "//node[contains(@class,'android.widget.Button')]";
                detech.function = -10;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "sharephoto";
                detech.content = "trong nhóm";
                detech.text = "trong nhóm";
                detech.node = "//node[contains(@class,'android.widget.TextView')]";
                detech.function = 1;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "sharephoto";
                detech.content = "Chia sẻ lên Facebook";
                detech.text = "Chia sẻ lên Facebook";
                detech.node = "//node[contains(@class,'android.widget.Button')]";
                detech.function = 1;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "";
                detech.content = "Viết tin nhắn";
                detech.text = "Viết tin nhắn";
                detech.node = "//node[contains(@class,'android.widget.EditText')]";
                detech.function = 2;
                ls_detechShare.Add(detech);

                //detech = new DetechModel();
                //detech.parent = "";
                //detech.content = "Write";
                //detech.text = "Write";
                //detech.node = "//node[contains(@class,'android.widget.EditText')]";
                //detech.function = 2;
                //ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "sharephoto";
                detech.content = "Tìm kiếm";
                detech.text = "Tìm kiếm";
                detech.node = "//node[contains(@class,'android.widget.EditText')]";
                detech.function = 2;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "sharephoto";
                detech.content = "search";
                detech.text = "search";
                detech.node = "//node[contains(@class,'android.widget.EditText')]";
                detech.function = 2;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "";
                detech.content = "Chia sẻ lên một nhóm";
                detech.text = "Chia sẻ lên một nhóm";
                detech.node = "//node[contains(@class,'android.view.View')]";
                detech.function = 1;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "";
                detech.content = "share to a group";
                detech.text = "share to a group";
                detech.node = "//node[contains(@class,'android.view.View')]";
                detech.function = 1;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "";
                detech.content = "Không có nhóm";
                detech.text = "Không có nhóm";
                detech.node = "//node[contains(@class,'android.widget.TextView')]";
                detech.function = -1;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "";
                detech.content = "no group";
                detech.text = "no group";
                detech.node = "//node[contains(@class,'android.widget.TextView')]";
                detech.function = -1;
                ls_detechShare.Add(detech);

                detech = new DetechModel();
                detech.parent = "";
                detech.content = "Phiên đã hết hạn";
                detech.text = "ĐỒNG Ý";
                detech.node = "//node[contains(@class,'android.widget.Button')]";
                detech.function = -3;
                ls_detechShare.Add(detech);

                int step = 0;
                int numshare = 0;

            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                //if (list_link[i].Contains("photo"))// xu ly them voi link la photo
                //{
                DetechModel kq_plus = detechFunction(acc.ldid, ls_detechShare);
                if (kq_plus.status)
                {
                    step = 0;
                    switch (kq_plus.function)
                    {
                        case -10:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq_plus.point);
                                return numshare;
                                // break;
                            }
                        case -3:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq_plus.point);
                                LoginPhienHetHan(u, acc, token);
                                break;
                            }
                        case -1:
                            {
                                back(acc.ldid, 2);
                                goto Lb_start;
                                // break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq_plus.point.X, kq_plus.point.Y + 10);
                                Delay(1);
                                if (kq_plus.parent == "sharegroupnow")
                                {
                                    string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                    if (content_split.Count() > 0)
                                    {
                                        for (int i = 0; i < content_split.Count(); i++)
                                        {
                                            PressOnLeapdroid_vietnamese(acc.ldid, content_split[i]);
                                            Delay(1);
                                        }
                                    }
                                    // PressOnLeapdroid_vietnamese(acc.ldid, FunctionHelper.method_Spin(content));
                                }
                                goto Lb_start;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq_plus.point.X, kq_plus.point.Y + 10);
                                Delay(1);
                                Random rd = new Random();
                                if (ls_group.Count == 0)
                                    goto Lb_finish;
                                int index = rd.Next(0, ls_group.Count);
                                PressOnLeapdroid_vietnamese(acc.ldid, ls_group[index].name);
                                ls_group.RemoveAt(index);
                                Delay(1);
                                if (choosegroupandcommnet(acc.ldid, FunctionHelper.method_Spin(content)))
                                {
                                    numshare++;
                                    if (!string.IsNullOrEmpty(link))
                                        dr.Cells["clSuccess"].Value = numshare;
                                    if (numshare >= numgroup)
                                    {
                                        message = numshare;
                                        Delay(i_delay);

                                        goto Lb_finish;
                                    }
                                }
                                Delay(1);
                                break;

                            }
                    }
                }
                //}
                DetechModel kq = detechFunction(acc.ldid, SettingTool.lang.list_sharepost);

                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                dr.Cells["Message"].Value = kq.content;
                                //return;
                                message += numshare;
                                goto Lb_finish;
                            }

                        case -1:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point.X, kq.point.Y + 10);
                                Thread.Sleep(5000);
                                break;
                            }

                        case 1:
                            {
                                if (kq.text.ToLower() == "đăng" || kq.text.ToLower() == "post" || kq.parent == "share")
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point.X, kq.point.Y + 10);
                                    numshare++;
                                    dr.Cells["clSuccess"].Value = numshare;
                                    if (numshare >= numgroup)
                                    {
                                        message = numshare;
                                        goto Lb_finish;
                                    }
                                    Delay(i_delay);
                                    dr.Cells["clSuccess"].Value = numshare;
                                }
                                else
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point.X, kq.point.Y + 10);
                                    Delay(1);
                                }
                                break;
                            }
                        case 2:
                            {
                                if (kq.parent == "sharepost")
                                {

                                    ClickOnLeapdroidPosition(acc.ldid, kq.point.X, kq.point.Y + 10);
                                    Delay(1);
                                    if (ls_group.Count == 0)
                                        goto Lb_finish;
                                    Random rd = new Random();
                                    int index = rd.Next(0, ls_group.Count);
                                    PressOnLeapdroid_vietnamese(acc.ldid, ls_group[index].name);
                                    ls_group.RemoveAt(index);

                                    if (choosegroupandcommnet(acc.ldid, FunctionHelper.method_Spin(content)))
                                    {
                                        numshare++;
                                        if (numshare >= numgroup)
                                        {
                                            message += numshare;
                                            goto Lb_finish;
                                        }
                                    }
                                }
                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    step++;
                    if (step < 7)
                    {
                        scroll_up_mid(acc.ldid);
                        goto Lb_start;
                    }
                    else
                        message += numshare;
                }
            Lb_finish:
                numshare = 0;
                activeNewfeed(acc.ldid, "com.facebook.katana");
            }
            catch
            { }
            return message;
        }


        public bool seedingLikeLivesteam(string ldID, CancellationToken token)
        {
            bool kq = false;

            List<DetechModel> ls_detech = new List<DetechModel>();
            DetechModel detech = new DetechModel();
            detech.parent = "Like";
            detech.content = "Thích";
            detech.text = "Thích";
            detech.node = "//node[contains(@class,'android.view.View')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "Like";
            detech.content = "Like";
            detech.text = "Like";
            detech.node = "//node[contains(@class,'android.view.View')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Cách xem không có bình luận";
            detech.text = "Đóng";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Close";
            detech.text = "Close";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Bỏ qua";
            detech.text = "Bỏ qua";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Đóng";
            detech.text = "Đóng";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls_detech.Add(detech);

            int i = 5;
            while (i > 0)
            {
                if (token.IsCancellationRequested)
                    return false;
                DetechModel result = detechFunction(ldID, ls_detech);

                if (result.status)
                {
                    ClickOnLeapdroidPosition(ldID, result.point);
                    if (result.parent == "Like")
                    {
                        return true;
                    }
                }

                i--;
            }
            return kq;
        }

        public bool seedingCommentLivesteam(string ldID, string comment, string link, CancellationToken token)
        {
            bool kq = false;

            List<DetechModel> ls_detech = new List<DetechModel>();
            DetechModel detech = new DetechModel();
            detech.parent = "comment";
            detech.content = "Viết bình luận";
            detech.text = "Viết bình luận";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "comment";
            detech.content = "Viết bình luận";
            detech.text = "Viết bình luận";
            detech.node = "//node[contains(@class,'android.widget.EditText')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "comment";
            detech.content = "write a comment";
            detech.text = "write a comment";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Gửi";
            detech.text = "Gửi";
            detech.node = "//node[contains(@class,'android.widget.ImageView')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Gửi";
            detech.text = "Gửi";
            detech.node = "//node[contains(@class,'android.view.View')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Gửi";
            detech.text = "Gửi";
            detech.node = "//node[contains(@class,'android.widget.ImageButton')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "send";
            detech.text = "send";
            detech.node = "//node[contains(@class,'android.widget.ImageView')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Cách xem không có bình luận";
            detech.text = "Đóng";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Bỏ qua";
            detech.text = "Bỏ qua";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls_detech.Add(detech);

            int step = 0;
        lb_start:
            if (token.IsCancellationRequested)
                return false;
            DetechModel result = detechFunction(ldID, ls_detech);

            if (result.status)
            {
                ClickOnLeapdroidPosition(ldID, result.point);
                if (result.parent == "comment")
                {
                    Delay(1);
                    string[] content_split = SplitByLength(FunctionHelper.method_Spin(comment), 150);
                    if (content_split.Count() > 0)
                    {
                        for (int i = 0; i < content_split.Count(); i++)
                        {
                            PressOnLeapdroid_vietnamese(ldID, content_split[i]);
                            Delay(1);
                        }
                    }
                    //  PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(comment));
                }

                else
                    return true;
                goto lb_start;
            }
            else
            {
                //link profile can scroll de click nut play 
                scroll_up_short(ldID);
                step++;
                if (step <= 10)
                {
                    if (step == 3)
                    {
                        OpenLink(ldID, "com.facebook.katana", FunctionHelper.method_Spin(link));

                    }
                    goto lb_start;
                }
            }

            return kq;
        }


        public bool sharepost2profile(string ldid, string app, string content, CancellationToken token)
        {
            int step = 0;
            //List<DetechModel> detechPlus = new List<DetechModel>();
            //DetechModel detech = new DetechModel();
            //detech.content = "Hãy nói gì đó";
            //detech.text = "Hãy nói gì đó";
            //detech.function = 2;
            //detech.node = "//node[contains(@class,'android.widget.EditText')]";
            //detech.parent = "write";
            //detechPlus.Add(detech);

            //detech = new DetechModel();
            //detech.content = "Bạn viết gì đi";
            //detech.text = "Bạn viết gì đi";
            //detech.function = 2;
            //detech.node = "//node[contains(@class,'android.widget.EditText')]";
            //detech.parent = "write";
            //detechPlus.Add(detech);

            //detech = new DetechModel();
            //detech.parent = "sharepost";
            //detech.content = "chia sẻ";
            //detech.text = "chia sẻ";
            //detech.node = "//node[contains(@class,'android.widget.TextView')]";
            //detech.function = 1;
            //SettingTool.lang.list_shareposttonewfeed.Add(detech);

            DetechModel data = new DetechModel();
            data.parent = "";
            data.content = "Phiên đã hết hạn";
            data.text = "ĐỒNG Ý";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = -3;
            SettingTool.lang.list_seeding_share.Add(data);

        Lb_start:
            if (token.IsCancellationRequested)
                return false;
            //DetechModel kqPlus = detechFunction(ldid, detechPlus);
            //if (kqPlus.status)
            //{
            //    ClickOnLeapdroidPosition(ldid, kqPlus.point);
            //    Thread.Sleep(1000);
            //    PressOnLeapdroid_vietnamese(ldid, FunctionHelper.method_Spin(content));
            //    Thread.Sleep(1000);
            //}

            DetechModel kq = detechFunction(ldid, SettingTool.lang.list_seeding_share);
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case -3:
                        {
                            ClickOnLeapdroidPosition(ldid, kq.point);

                            break;
                        }
                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldid, kq.point);
                            if (kq.parent == "finish" || kq.data == "chia sẻ ngay")
                            {
                                // activeNewfeed(ldid, app);
                                return true;
                            }
                            break;
                        }
                    case 2:
                        {
                            ClickOnLeapdroidPosition(ldid, kq.point);
                            Thread.Sleep(1000);
                            string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                            if (content_split.Count() > 0)
                            {
                                for (int i = 0; i < content_split.Count(); i++)
                                {
                                    PressOnLeapdroid_vietnamese(ldid, content_split[i]);
                                    Delay(1);
                                }
                            }
                            // PressOnLeapdroid_vietnamese(ldid, FunctionHelper.method_Spin(content));
                            break;
                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step <= 20)
                {
                    scroll_up_mid(ldid);
                    goto Lb_start;
                }
            }
            return false;
        }

        public bool sharepost2profilenocontent(string ldid, string app, string content)
        {
            int step = 0;
        //List<DetechModel> detechPlus = new List<DetechModel>();
        //DetechModel detech = new DetechModel();
        //detech.content = "Hãy nói gì đó";
        //detech.text = "Hãy nói gì đó";
        //detech.function = 2;
        //detech.node = "//node[contains(@class,'android.widget.EditText')]";
        //detech.parent = "write";
        //detechPlus.Add(detech);

         //detech = new DetechModel();
        //detech.content = "Bạn viết gì đi";
        //detech.text = "Bạn viết gì đi";
        //detech.function = 2;
        //detech.node = "//node[contains(@class,'android.widget.EditText')]";
        //detech.parent = "write";
        //detechPlus.Add(detech);

         //detech = new DetechModel();
        //detech.parent = "sharepost";
        //detech.content = "chia sẻ";
        //detech.text = "chia sẻ";
        //detech.node = "//node[contains(@class,'android.widget.TextView')]";
        //detech.function = 1;
        //SettingTool.lang.list_shareposttonewfeed.Add(detech);

     Lb_start:

            //DetechModel kqPlus = detechFunction(ldid, detechPlus);
            //if (kqPlus.status)
            //{
            //    ClickOnLeapdroidPosition(ldid, kqPlus.point);
            //    Thread.Sleep(1000);
            //    PressOnLeapdroid_vietnamese(ldid, FunctionHelper.method_Spin(content));
            //    Thread.Sleep(1000);
            //}

            DetechModel kq = detechFunction(ldid, SettingTool.lang.list_seeding_share);
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldid, kq.point);
                            if (kq.parent == "finish")
                            {
                                // activeNewfeed(ldid, app);
                                return true;
                            }
                            break;
                        }
                    case 2:
                        {
                            ClickOnLeapdroidPosition(ldid, kq.point);
                            Thread.Sleep(1000);
                            string[] content_split = SplitByLength(FunctionHelper.method_Spin(" "), 150);
                            if (content_split.Count() > 0)
                            {
                                for (int i = 0; i < content_split.Count(); i++)
                                {
                                    PressOnLeapdroid_vietnamese(ldid, content_split[i]);
                                    Delay(2);
                                }
                            }
                            // PressOnLeapdroid_vietnamese(ldid, FunctionHelper.method_Spin(content));
                            break;
                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step <= 10)
                {
                    scroll_up_mid(ldid);
                    goto Lb_start;
                }
            }
            return false;
        }
        public bool seedingLike(string ldid, CancellationToken token)
        {
            int step = 0;
            //DetechModel detech = new DetechModel();
            //detech.parent = "sharepost";
            //detech.content = "chia sẻ";
            //detech.text = "chia sẻ";
            //detech.node = "//node[contains(@class,'android.widget.TextView')]";
            //detech.function = 1;
            //SettingTool.lang.list_detechlike.Add(detech);

            DetechModel detech = new DetechModel();
            detech = new DetechModel();
            detech.parent = "done";
            detech.content = "Thích";
            detech.text = "Thích";
            detech.node = "//node[contains(@class,'android.widget.Button')]";
            detech.function = 1;
            SettingTool.lang.list_detechlike.Add(detech);

            detech = new DetechModel();
            detech.parent = "Liked";
            detech.content = "Đã nhấn nút Thích";
            detech.text = "Đã nhấn nút Thích";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            SettingTool.lang.list_detechlike.Insert(0, detech);

        Lb_start:
            if (token.IsCancellationRequested)
                return false;
            DetechModel kq = detechFunction(ldid, SettingTool.lang.list_detechlike);
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case 1:
                        {
                            if (kq.parent == "Liked")
                                return true;

                            ClickOnLeapdroidPosition(ldid, kq.point);
                            return true;

                        }

                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step <= 30)
                {
                    scroll_up_mid(ldid);
                    goto Lb_start;
                }

            }
            return false;
        }

        public bool seedingLikeVideo(string ldid, CancellationToken token)
        {
            int step = 0;
            List<DetechImageModel> list_detechimg = new List<DetechImageModel>();

            DetechImageModel detechimg = new DetechImageModel();
            detechimg.function = 1;
            detechimg.name = "like";
            detechimg.img = PointDefault.img_like_videowatch;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.function = 1;
            detechimg.name = "liked";
            detechimg.img = PointDefault.img_liked_videowatch;
            list_detechimg.Add(detechimg);

            DetechModel detech = new DetechModel();
            detech.parent = "close";
            detech.content = "Đóng";
            detech.text = "Đóng";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            SettingTool.lang.list_detechlike.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Thích";
            detech.text = "Thích";
            detech.node = "//node[contains(@class,'android.view.View')]";
            detech.function = 1;
            SettingTool.lang.list_detechlike.Insert(0, detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Like";
            detech.text = "Like";
            detech.node = "//node[contains(@class,'android.view.View')]";
            detech.function = 1;
            SettingTool.lang.list_detechlike.Insert(0, detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Đã nhấn nút Thích";
            detech.text = "Đã nhấn nút Thích";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 0;
            SettingTool.lang.list_detechlike.Insert(0, detech);

        Lb_start:
            if (token.IsCancellationRequested)
                return false;

            DetechModel kq = detechFunctiondesc(ldid, SettingTool.lang.list_detechlike);
            if (!kq.status)
            {
                kq = detechFunctionCatchImages(ldid, list_detechimg);
            }
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case -10:
                        {
                            ClickOnLeapdroidPosition(ldid, kq.point);
                            return false;
                        }
                    case 0:
                        {
                            return false;
                        }
                    case 1:
                        {
                            if (kq.parent == "Liked")
                                return true;

                            if (kq.point.Y > 20)
                            {
                                ClickOnLeapdroidPosition(ldid, kq.point.X + 3, kq.point.Y + 5);
                                if (kq.parent != "close")
                                    return true;
                            }
                            else
                                scroll_up_mid(ldid);
                            break;

                        }

                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step < 3)
                    scroll_up_short(ldid);

                if (step <= 4)
                {
                    goto Lb_start;
                }

            }
            return false;
        }


        //private void settingDetechSharePost()
        //{
        //    SettingTool.lang.list_seeding_share = new List<DetechModel>();

        //    DetechModel data = new DetechModel();
        //    data.parent = "btn_share";
        //    data.content = "Chia sẻ";
        //    data.text = "Chia sẻ";
        //    data.node = "//node[contains(@class,'android.widget.TextView')]";
        //    data.function = 1;
        //    SettingTool.lang.list_seeding_share.Add(data);

        //    data = new DetechModel();
        //    data.parent = "btn_share";
        //    data.content = "Share";
        //    data.text = "Share";
        //    data.node = "//node[contains(@class,'android.widget.TextView')]";
        //    data.function = 1;
        //    SettingTool.lang.list_seeding_share.Add(data);

        //    data = new DetechModel();
        //    data.parent = "write";
        //    data.content = "say something";
        //    data.text = "say something";
        //    data.node = "//node[contains(@class,'android.widget.EditText')]";
        //    data.function = 2;
        //    SettingTool.lang.list_seeding_share.Add(data);

        //    data = new DetechModel();
        //    data.parent = "write";
        //    data.content = "Nói gì đó về nội dung này";
        //    data.text = "Nói gì đó về nội dung này";
        //    data.node = "//node[contains(@class,'android.widget.EditText')]";
        //    data.function = 2;
        //    SettingTool.lang.list_seeding_share.Add(data);


        //    data = new DetechModel();
        //    data.parent = "btn_sharenow";
        //    data.content = "Chia sẻ ngay";
        //    data.text = "Chia sẻ ngay";
        //    data.node = "//node[contains(@class,'android.view.View')]";
        //    data.function = 1;
        //    SettingTool.lang.list_seeding_share.Add(data);

        //    data = new DetechModel();
        //    data.parent = "btn_sharenow";
        //    data.content = "share now";
        //    data.text = "share now";
        //    data.node = "//node[contains(@class,'android.view.View')]";
        //    data.function = 1;
        //    SettingTool.lang.list_seeding_share.Add(data);

        //    data = new DetechModel();
        //    data.parent = "btn_post";
        //    data.content = "Post";
        //    data.text = "post";
        //    data.node = "//node[contains(@class,'android.widget.Button')]";
        //    data.function = 1;
        //    SettingTool.lang.list_seeding_share.Add(data);

        //    data = new DetechModel();
        //    data.parent = "btn_post";
        //    data.content = "đăng";
        //    data.text = "đăng";
        //    data.node = "//node[contains(@class,'android.widget.Button')]";
        //    data.function = 1;
        //    SettingTool.lang.list_seeding_share.Add(data);

        //    SettingTool.lang.list_seeding_like = new List<DetechModel>();
        //    data = new DetechModel();
        //    data.parent = "btn_thich";
        //    data.content = "like";
        //    data.text = "like";
        //    data.node = "//node[contains(@class,'android.widget.TextView')]";
        //    data.function = 1;
        //    SettingTool.lang.list_seeding_like.Add(data);
        //    data = new DetechModel();
        //    data.parent = "btn_share";
        //    data.content = "thích";
        //    data.text = "thích";
        //    data.node = "//node[contains(@class,'android.widget.TextView')]";
        //    data.function = 1;
        //    SettingTool.lang.list_seeding_like.Add(data);

        //}
        public string functionOpenLink(string ldID, string app, string link)
        {
            string result = "";
            string uid = "";
            string linkOpen = "";
            string postId = "";

            if (link.Contains("photos"))
            {
                postId = FunctionHelper.smethod_6(link, link.IndexOf("/photos/") + 8, "?");
                postId = FunctionHelper.smethod_6(postId, postId.IndexOf("/") + 1, "/");
                linkOpen = string.Format("fb://photo/{0}", postId);
                result = OpenLink(ldID, app, linkOpen);

            }
            else if (link.Contains("photo"))
            {

                postId = FunctionHelper.smethod_6(link, link.IndexOf("fbid=") + 5, "&");
                linkOpen = string.Format("fb://photo/{0}", postId);
                result = OpenLink(ldID, app, linkOpen);
            }

            else if (link.Contains("story_fbid"))
            {
                uid = FunctionHelper.smethod_6(link, link.IndexOf("&id=") + 4, "&");
                postId = FunctionHelper.smethod_6(link, link.IndexOf("fbid=") + 5, "&");
                //  linkOpen = string.Format("fb://faceweb/f?href=%2Fstory.php%3Fstory_fbid%3D{0}%26id%3D{1}%26post_id%3D{1}_{0}", postId, uid);
                linkOpen = string.Format("fb://faceweb/f?href={0}", link);

                link = string.Format("https://www.facebook.com/{0}", postId);
                linkOpen = string.Format("fb://faceweb/f?href={0}", link);
                result = OpenLink(ldID, app, linkOpen);
                Delay(6);
            }
            else
                result = OpenLink(ldID, app, link);

            return result;
        }
        public string ShareLiveProfile(userLD u, Account acc, DataGridViewRow dr, string link, string content, int i_delay, CancellationToken token)
        {
            string message = "";
            try
            {

                List<DetechModel> list_write = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "post";
                data.content = "Write something";
                data.text = "Write something";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_write.Add(data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "Viết";
                data.text = "Viết";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_write.Add(data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "nói";
                data.text = "nói";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_write.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Nút chia sẻ";
                data.text = "Nút chia sẻ";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 2;
                SettingTool.lang.list_shareprofile.Insert(0, data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "Viết bài";
                data.text = "Viết bài";
                data.node = "//node[contains(@class,'android.widget.ImageButton')]";
                data.function = 1;
                SettingTool.lang.list_shareprofile.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Phiên đã hết hạn";
                data.text = "ĐỒNG Ý";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = -10;
                SettingTool.lang.list_shareprofile.Add(data);

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources._1_sharelive);
                ls_name.Add("1_sharelive");

                ls_image.Add(Properties.Resources._1_sharelive_3x);
                ls_name.Add("1_sharelive");

                ls_image.Add(Properties.Resources._1_sharelive_3xEn);
                ls_name.Add("1_sharelive");

                //Delay(3);
                //ClickOnLeapdroidPosition(acc.ldid, 300, 300);
                //Thread.Sleep(1000);
                //ClickOnLeapdroidPosition(acc.ldid, 300, 300);
                int step = 0;
                bool has_share = false;
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(acc.ldid, SettingTool.lang.list_shareprofile);
                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImage(acc.ldid, ls_image, ls_name);
                    if (kq_image.status)
                        kq = kq_image;
                }

                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                if (LoginPhienHetHan(u, acc, token))
                                {
                                    break;
                                }
                                else
                                {
                                    return kq.content;
                                }
                            }
                        case -2:
                            {
                                dr.Cells["Message"].Value = kq.content;
                                acc.Thongbao = kq.content;
                                message += " |Link share newfeed fail";
                                break;

                            }
                        case -1:
                            {
                                Thread.Sleep(5000);
                                break;
                            }
                        case 0:
                            {
                                back(acc.ldid, 1);
                                break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                if (has_share || kq.parent == "shareprofile")
                                {
                                    dr.Cells["clSuccess"].Value = 1;
                                    message += " |Link share newfeed complete";
                                    goto lb_finish;
                                }
                                Delay(1);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                Delay(1);
                                DetechModel kqwrite = RunDetechFunction(acc.ldid, list_write);
                                if (kqwrite.status)
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kqwrite.point);
                                    Thread.Sleep(1000);
                                    if (string.IsNullOrEmpty(content))
                                        content = " ";
                                    string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                    if (content_split.Count() > 0)
                                    {
                                        for (int i = 0; i < content_split.Count(); i++)
                                        {
                                            PressOnLeapdroid_vietnamese(acc.ldid, content_split[i]);
                                            Delay(2);
                                        }
                                    }
                                    //PressOnLeapdroid_vietnamese(acc.ldid, FunctionHelper.method_Spin(content));
                                    Delay(1);
                                }
                                has_share = true;
                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    //link profile can scroll de click nut play 
                    scroll_up_short(acc.ldid);
                    step++;
                    if (step <= 10)
                    {
                        if (step == 3)
                        {
                            if (!has_share & link.Contains("http"))
                            {
                                OpenLink(acc.ldid, "com.facebook.katana", FunctionHelper.method_Spin(link));
                            }


                        }
                        goto Lb_start;
                    }
                }
            lb_finish:
                Delay(i_delay);

            }
            catch
            { }
            //   activeNewfeed(acc.ldid, "com.facebook.katana");
            return message;
        }
        #endregion
        public bool connectHMA(string ldID)
        {
            int step = 0;
            runApp(ldID, "com.hidemyass.hidemyassprovpn");
            Thread.Sleep(2000);
        Lb_start:
            DetechModel kq = detechFunction(ldID, SettingTool.lang.list_hma);
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case -1:
                        {
                            Thread.Sleep(5000);
                            break;
                        }
                    case 0:
                        {
                            back(ldID, 1);
                            break;
                        }
                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            Delay(1);
                            break;
                        }
                    case 2:
                        {
                            return true;

                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step <= 5)
                {
                    goto Lb_start;

                }

            }
            return false;
        }
        public bool disHMA(string ldID)
        {
            int step = 0;
        Lb_start:
            DetechModel kq = detechFunction(ldID, SettingTool.lang.list_hma);
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case -1:
                        {
                            Thread.Sleep(5000);
                            break;
                        }
                    case 0:
                        {
                            back(ldID, 1);
                            break;
                        }
                    case 1:
                        {
                            return true;
                        }
                    case 2:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            Delay(1);
                            break;

                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step <= 5)
                {
                    goto Lb_start;

                }
            }
            return false;
        }
        public bool caturehtml(string ldID)
        {

            string cmdCommand = "";
            if (SettingTool.configld.versionld == "3.x")
            {
                cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", "1.xml");
            }
            else
            {
                cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", "1.xml");
            }
            string data = runAdb(ldID, cmdCommand);

            try
            {
                Random rd = new Random();
                string filename = "test.xml";
                string path = "C:\\" + filename;

                if (File.Exists(path))
                    File.Delete(path);

                string cmd = String.Format("pull \"/storage/sdcard0/window_dump.xml\" \"{0}\"", path);
                string a = runAdb(ldID, cmd);

            }
            catch { }

            return false;
        }
        public void Notification(string ldID, string app, int delay)
        {
            OpenLink(ldID, app, "fb://notifications");
            Random rd = new Random();
            Thread.Sleep(2000);
            DetechModel kq = RunDetechFunction(ldID, SettingTool.lang.list_notification);
            if (kq.status)
            {
                ClickOnLeapdroidPosition(ldID, kq.point);
                Delay(delay);
                activeNewfeed(ldID, app);
            }
        }

        public string loopviewInviteLikePage(string ldID, string app, int numInvite, List<string> ls_link, int delay, bool loopInvite, int i_numLoop, CancellationToken token)
        {
            string message = "";
            try
            {
                if (ls_link.Count > 0)
                {
                    int loop = 1;
                    if (loopInvite)
                        loop = i_numLoop;

                    for (int i = 0; i < ls_link.Count; i++)
                    {
                        for (int n = 0; n < loop; n++)
                        {
                            List<string> ls_id = new List<string>();
                            ls_id.Add(ls_link[i]);
                            message += " |Page " + (i + 1).ToString() + viewInviteLikePage(ldID, app, numInvite, ls_id, delay, token);
                        }
                    }
                }
            }
            catch
            {
            }
            return message;
        }

        public string viewInviteLikePage(string ldID, string app, int numInvite, List<string> ls_link, int delay, CancellationToken token)
        {
            string message = "";
            try
            {
                if (ls_link.Count > 0)
                {
                    DetechModel data = new DetechModel();
                    data.parent = "search";
                    data.content = "Search";
                    data.text = "Search";
                    data.node = "//node[contains(@class,'android.widget.TextView')]";
                    data.function = 1;
                    SettingTool.lang.list_invite2page.Add(data);
                    data = new DetechModel();
                    data.parent = "search";
                    data.content = "tìm kiếm";
                    data.text = "tìm kiếm";
                    data.node = "//node[contains(@class,'android.widget.TextView')]";
                    data.function = 1;
                    SettingTool.lang.list_invite2page.Add(data);

                    List<DetechModel> ls_send = new List<DetechModel>();
                    DetechModel detech = new DetechModel();
                    detech.content = "Invite selected friends";
                    detech.text = "Invite selected friends";
                    detech.node = "//node[contains(@class,'android.widget.ImageView')]";
                    ls_send.Add(detech);
                    detech = new DetechModel();
                    detech.content = "Mời bạn bè đã chọn";
                    detech.text = "Mời bạn bè đã chọn";
                    detech.node = "//node[contains(@class,'android.widget.ImageView')]";
                    ls_send.Add(detech);

                    for (int i = 0; i < ls_link.Count; i++)
                    {
                        int count = 0;
                        int step = 0;
                        int exit_check = 0;
                        string result = OpenLink(ldID, app, "fb://page/" + ls_link[i]);
                        Delay(3);
                        if (!result.Contains("Error"))
                        {
                        Lb_continued:
                            if (token.IsCancellationRequested)
                                token.ThrowIfCancellationRequested();
                            DetechModel kq = detechFunction(ldID, SettingTool.lang.list_invite2page);
                            if (kq.status)
                            {
                                switch (kq.function)
                                {
                                    case -1:
                                        {
                                            Thread.Sleep(5000);
                                            break;
                                        }
                                    case 0:
                                        {
                                            back(ldID, 1);
                                            break;
                                        }
                                    case 1:
                                        {
                                            if (kq.parent == "invite2page")
                                                ClickOnLeapdroidPosition(ldID, kq.point.X, kq.point.Y);
                                            if (kq.parent == "search")
                                            {
                                                if (checkContent(ldID, "Không tìm thấy kết quả nào"))
                                                    return "Không tìm thấy bạn bè";
                                            lb_check:
                                                Random rd = new Random();
                                                int random = rd.Next(0, 4);
                                                if (random == 3)
                                                {
                                                    scroll_up_mid(ldID);
                                                    scroll_up_short(ldID);
                                                    scroll_up_mid(ldID);
                                                }
                                                else if (random == 2)
                                                {
                                                    scroll_up_mid(ldID);
                                                    scroll_up_mid(ldID);
                                                }
                                                else
                                                    scroll_up(ldID);

                                                List<Point> ls_check = new List<Point>();
                                                ls_check = FindByXpathListUnClick(ldID, "//node[contains(@class,'android.widget.CheckBox')]");
                                                if (ls_check.Count > 0)
                                                {
                                                    exit_check = 0;
                                                    for (int y = 0; y < ls_check.Count; y++)
                                                    {
                                                        ClickOnLeapdroidPosition(ldID, ls_check[y]);
                                                        Delay(1);
                                                        count++;
                                                        if (count >= numInvite)
                                                        {
                                                            kq = detechFunctionPlus(ldID, ls_send);
                                                            if (kq.point.Y > 0)
                                                            {
                                                                ClickOnLeapdroidPosition(ldID, kq.point);
                                                            }
                                                            goto lb_finish;
                                                        }
                                                    }
                                                    if (count < numInvite)
                                                    {
                                                        goto lb_check;
                                                    }
                                                }
                                                else
                                                {
                                                    exit_check++;
                                                    if (exit_check >= 3)
                                                    {
                                                        kq = detechFunctionPlus(ldID, ls_send);
                                                        if (kq.point.Y > 0)
                                                        {
                                                            ClickOnLeapdroidPosition(ldID, kq.point);
                                                            Delay(1);
                                                            goto lb_finish;
                                                        }
                                                        else
                                                            goto lb_finish;
                                                    }
                                                    else
                                                    {
                                                        goto lb_check;
                                                    }
                                                }
                                            }
                                            //if (kq.parent == "search")
                                            goto Lb_continued;
                                        }
                                }

                            }
                            else
                            {
                                step++;
                                if (step <= 5)
                                {
                                    goto Lb_continued;
                                }
                            }

                        }
                    lb_finish:
                        message += ": invite " + count.ToString() + "/" + numInvite.ToString();
                        Delay(delay);
                    }
                }
            }
            catch
            {
            }
            return message;
        }

        public string viewInviteGroup(userLD u, Account acc, string ldID, string app, int numInvite, List<string> ls_link, int delay, CancellationToken token)
        {
            string message = "";
            try
            {
                if (ls_link.Count > 0)
                {

                    DetechImageModel image = new DetechImageModel();
                    List<DetechImageModel> lsImage = new List<DetechImageModel>();
                    image.img = Properties.Resources._1_invite_group;
                    image.name = "invite_group";
                    image.function = 1;
                    lsImage.Add(image);

                    image = new DetechImageModel();
                    image.img = Properties.Resources._1_invite_group_3x;
                    image.name = "invite_group";
                    image.function = 1;
                    lsImage.Add(image);

                    image = new DetechImageModel();
                    image.img = Properties.Resources._1_invitegroup_en;
                    image.name = "invite_group";
                    image.function = 1;
                    lsImage.Add(image);

                    image = new DetechImageModel();
                    image.img = Properties.Resources.invite_group2_3x;
                    image.name = "invite_group";
                    image.function = 1;
                    lsImage.Add(image);

                    List<DetechModel> list_detech = new List<DetechModel>();
                    DetechModel data = new DetechModel();
                    data = new DetechModel();
                    data.parent = "search";
                    data.content = "Search for friends";
                    data.text = "Search for friends";
                    data.node = "//node[contains(@class,'android.widget.EditText')]";
                    data.function = 1;
                    list_detech.Add(data);

                    data = new DetechModel();
                    data.parent = "search";
                    data.content = "Tìm kiếm bạn bè";
                    data.text = "Tìm kiếm bạn bè";
                    data.node = "//node[contains(@class,'android.widget.EditText')]";
                    data.function = 1;
                    list_detech.Add(data);

                    data = new DetechModel();
                    data.parent = "search";
                    data.content = "Mời thành viên";
                    data.text = "Mời thành viên";
                    data.node = "//node[contains(@class,'android.widget.TextView')]";
                    data.function = 1;
                    list_detech.Add(data);

                    data = new DetechModel();
                    data.parent = "invite2group";
                    data.content = "Add";
                    data.text = "Add";
                    data.node = "//node[contains(@class,'android.view.View')]";
                    data.function = 1;
                    list_detech.Add(data);

                    data = new DetechModel();
                    data.parent = "invite2group";
                    data.content = "mời";
                    data.text = "mời";
                    data.node = "//node[contains(@class,'android.view.View')]";
                    data.function = 1;
                    list_detech.Add(data);

                    data = new DetechModel();
                    data.parent = "";
                    data.content = "xong";
                    data.text = "xong";
                    data.node = "//node[contains(@class,'android.widget.Button')]";
                    data.function = 1;
                    List<DetechModel> dtDone = new List<DetechModel>();
                    dtDone.Add(data);

                    for (int i = 0; i < ls_link.Count; i++)
                    {
                        int count = 0;
                        int step = 0;
                        int exit_check = 0;
                        Delay(1);
                        string result = OpenLink(ldID, app, "fb://group/" + ls_link[i]);
                        Delay(2);
                        scroll_down(ldID);

                        if (!result.Contains("Error"))
                        {
                        Lb_continued:
                            if (token.IsCancellationRequested)
                                token.ThrowIfCancellationRequested();
                            DetechModel kq = detechFunctionPlus(ldID, list_detech);
                            if (!kq.status)
                            {
                                DetechModel kq_image = detechFunctionCatchImages(ldID, lsImage);
                                if (kq_image.status)
                                    kq = kq_image;
                                else
                                {
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Thành viên";
                                    data.text = "Thành viên";
                                    data.node = "//node[contains(@class,'android.view.View')]";
                                    data.function = 1;

                                    List<DetechModel> inviteFriend = new List<DetechModel>();
                                    inviteFriend.Add(data);
                                    kq = detechFunctionExact(ldID, inviteFriend);
                                    if (kq.point2.Y > 0)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq.point2.X + 20, kq.point2.Y - 10);
                                        goto Lb_continued;
                                    }
                                    //kq.status = true;
                                    //kq.parent = "invite2group";
                                    //kq.function = 1;
                                    //kq.point = FindByXpathIndex(ldID, "//node[contains(@class,'android.view.View')]", "2");

                                }

                            }

                            if (kq.status)
                            {
                                switch (kq.function)
                                {
                                    case -1:
                                        {
                                            Thread.Sleep(5000);
                                            break;
                                        }
                                    case 0:
                                        {
                                            back(ldID, 1);
                                            break;
                                        }
                                    case 1:
                                        {
                                            if (kq.parent == "invite2group" || kq.parent == "invite")
                                            {
                                                ClickOnLeapdroidPosition(ldID, kq.point.X, kq.point.Y);
                                                Delay(1);
                                            }
                                            else if (kq.parent == "search")
                                            {
                                            lb_check:
                                                scroll_up_mid(ldID);
                                                List<Point> ls_check = new List<Point>();
                                                List<string> ls_text = new List<string>();
                                                List<Point> ls_checkbox = new List<Point>();

                                                ls_text.Add("mời");
                                                ls_text.Add("Invite");
                                                ls_text.Add("Add");
                                                ls_check = FindByXpathList(ldID, "//node[contains(@class,'android.view.View')]", ls_text);
                                                ls_checkbox = FindByXpathList(ldID, "//node[contains(@class,'android.widget.CheckBox')]");

                                                if (ls_check.Count > 0 || ls_checkbox.Count > 0)
                                                {
                                                    exit_check = 0;
                                                    for (int y = 0; y < ls_check.Count; y++)
                                                    {
                                                        ClickOnLeapdroidPosition(ldID, ls_check[y]);
                                                        Delay(delay);
                                                        count++;
                                                        if (count >= numInvite)
                                                        {
                                                            message += " |Group " + (i + 1).ToString() + ": invite " + count.ToString() + "/" + numInvite.ToString();
                                                            goto lb_finish;
                                                        }

                                                    }

                                                    for (int y = 0; y < ls_checkbox.Count; y++)
                                                    {
                                                        ClickOnLeapdroidPosition(ldID, ls_checkbox[y]);
                                                        Delay(1);
                                                        count++;
                                                        if (count >= numInvite)
                                                        {

                                                            message += " |Group " + (i + 1).ToString() + ": invite " + count.ToString() + "/" + numInvite.ToString();
                                                            goto lb_finish;
                                                        }

                                                    }

                                                    if (count < numInvite)
                                                    {
                                                        goto lb_check;
                                                    }

                                                }
                                                else
                                                {
                                                    List<DetechModel> lsPoint = new List<DetechModel>();
                                                    lsPoint = detechFunctionCatchImagesListPoint(ldID, lsImage);
                                                    if (lsPoint.Count > 0)
                                                    {
                                                        int loop = 10;
                                                        while (loop > 0)
                                                        {
                                                            kq = detechFunctionCatchImages(ldID, lsImage);
                                                            if (kq.status)
                                                            {
                                                                ClickOnLeapdroidPosition(ldID, kq.point);
                                                                Delay(1);
                                                                count++;
                                                                if (count >= numInvite)
                                                                {

                                                                    message += " |Group " + (i + 1).ToString() + ": invite " + count.ToString() + "/" + numInvite.ToString();
                                                                    goto lb_finish;
                                                                }
                                                            }
                                                            loop--;
                                                        }
                                                        goto lb_check;
                                                    }

                                                    exit_check++;
                                                    if (exit_check >= 3)
                                                    {
                                                        goto lb_finish;
                                                    }
                                                    else
                                                    {
                                                        goto lb_check;
                                                    }
                                                }
                                            }
                                            if (kq.parent == "invite2group" || kq.parent == "invite")
                                                goto Lb_continued;
                                            break;
                                        }
                                }
                            }
                            else
                            {
                                step++;
                                if (step == 3)
                                    joinGroupLD(u, acc, ldID, true, "", token);

                                if (step <= 5)
                                {
                                    goto Lb_continued;
                                }
                                else
                                    goto lb_finish;
                            }
                        }

                    lb_finish:
                        DetechModel done = new DetechModel();
                        done = detechFunction(ldID, dtDone);
                        if (done.status)
                            ClickOnLeapdroidPosition(ldID, done.point);

                        message += " |Group " + (i + 1).ToString() + ": invite " + count.ToString() + "/" + numInvite.ToString();
                        Delay(delay);
                    }
                }
                activeNewfeed(ldID, app);
            }
            catch
            {
            }
            return message;
        }

        public bool LeaveGroup(string ldID, string app, string groupId, CancellationToken token)
        {
            try
            {
                List<DetechModel> list_detech = new List<DetechModel>();
                //DetechModel data = new DetechModel();
                //data.parent = "invite2group";
                //data.content = "Add";
                //data.text = "Add";
                //data.node = "//node[contains(@class,'android.view.View')]";
                //data.function = 1;
                //list_detech.Add(data);

                //data = new DetechModel();
                //data.parent = "invite2group";
                //data.content = "đã mời bạn";
                //data.text = "đã mời bạn";
                //data.node = "//node[contains(@class,'android.view.View')]";
                //data.function = 1;
                //list_detech.Add(data);

                DetechModel data = new DetechModel();
                data.parent = "";
                data.content = "Tham gia nhóm";
                data.text = "Tham gia nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 2;
                list_detech.Add(data);

                //data = new DetechModel();
                //data.parent = "invite2group";
                //data.content = "Thêm";
                //data.text = "Thêm";
                //data.node = "//node[contains(@class,'android.view.View')]";
                //data.function = 1;
                //list_detech.Add(data);

                data = new DetechModel();
                data.parent = "out";
                data.content = "Leave Group";
                data.text = "Leave Group";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                list_detech.Add(data);

                data = new DetechModel();
                data.parent = "out";
                data.content = "Rời khỏi nhóm";
                data.text = "Rời khỏi nhóm";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                list_detech.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Leave Group";
                data.text = "Leave Group";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                list_detech.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Rời khỏi nhóm";
                data.text = "Rời khỏi nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                list_detech.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Rời khỏi nhóm";
                data.text = "Rời khỏi nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                list_detech.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Công cụ";
                data.text = "Công cụ";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                list_detech.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Công cụ";
                data.text = "Công cụ";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                list_detech.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Member Tools";
                data.text = "Member Tools";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                list_detech.Add(data);

                data = new DetechModel();
                data.parent = "removeinvite";
                data.content = "Xóa lời mời";
                data.text = "Xóa lời mời";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                list_detech.Add(data);

                int step = 0;
                Delay(1);
                string result = OpenLink(ldID, app, "fb://group/" + groupId);
                Delay(3);

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources._1_xoaloimoigroup);
                ls_name.Add("1_deleteinvite");


            Lb_continued:
                //checkScreen(ldID);
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                DetechModel kq = new DetechModel();
                kq = detechFunctionCatchImage(ldID, ls_image, ls_name);

                if (!kq.status)
                    kq = detechFunctionPlus(ldID, list_detech);

                if (kq.status)
                {
                    switch (kq.function)
                    {
                        case -1:
                            {
                                Thread.Sleep(5000);
                                break;
                            }
                        case 0:
                            {
                                return false;
                            }

                        case 1:
                            {

                                //if (kq.parent == "invite2group")
                                //{
                                //    List<DetechModel> list_detech2 = new List<DetechModel>();
                                //    data = new DetechModel();
                                //    data.parent = "Giới thiệu";
                                //    data.content = "Giới thiệu";
                                //    data.text = "Giới thiệu";
                                //    data.node = "//node[contains(@class,'android.view.View')]";
                                //    data.function = 1;
                                //    list_detech2.Add(data);
                                //    DetechModel kqgioithieu = detechFunctionPlus(ldID, list_detech2);
                                //    if (kqgioithieu.status)
                                //    {
                                //        if (SettingTool.configld.versionld == "3.x")
                                //        {
                                //            ClickOnLeapdroidPosition(ldID, 150, kqgioithieu.point.Y - 50);
                                //        }
                                //        else
                                //            ClickOnLeapdroidPosition(ldID, 800, kqgioithieu.point.Y - 100);
                                //        Delay(2);

                                //    }
                                //    else
                                //    {
                                //        return false;
                                //    }

                                //}
                                //else
                                if (kq.parent == "out")
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point.X, kq.point.Y);
                                    Delay(1);
                                    return true;
                                }
                                else
                                {
                                    if (kq.parent == "removeinvite")
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq.point.X, kq.point.Y);
                                        Delay(1);
                                        return true;
                                    }
                                    else if (kq.parent == "deleteinvite")
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq.point);
                                        Delay(1);
                                        DetechModel accept = RunDetechFunction(ldID, list_detech);
                                        if (accept.status)
                                        {
                                            ClickOnLeapdroidPosition(ldID, accept.point);
                                            return true;
                                        }
                                    }
                                    else
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq.point.X, kq.point.Y);
                                    }
                                }

                                break;
                            }
                        case 2:
                            {
                                return false;
                            }
                    }
                    goto Lb_continued;
                }
                else
                {
                    var screen = ScreenShoot(ldID.ToString());
                    var like = Properties.Resources.moregr;
                    var like1 = Properties.Resources.moregr_vn;
                    var point = ImageScanOpenCV.FindOutPoint(screen, like);
                    var point1 = ImageScanOpenCV.FindOutPoint(screen, like1);
                    if (point.Y > 0 || point1.Y > 0)
                    {
                        if (point.Y > 0)
                            ClickOnLeapdroidPosition(ldID, point);
                        else
                            ClickOnLeapdroidPosition(ldID, point1);
                    }
                    step++;
                    if (step <= 5)
                    {
                        goto Lb_continued;
                    }

                }
            }
            catch
            { }
            return false;

        }

        public List<Point> FindByXpathListUnClick(string ldID, string xpath)
        {
            Random rd = new Random();
            List<Point> list_point = new List<Point>();

            try
            {

                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                HtmlNode.ElementsFlags.Remove("form");
                document.LoadHtml(html);
                HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(xpath);
                foreach (HtmlNode node in nodes)
                {
                    string text_checked = node.Attributes["checked"].Value.ToString().ToLower();

                    if (text_checked == "false")
                    {
                        string text = node.Attributes["bounds"].Value.ToString().Remove(0, 1).ToLower();
                        string[] arr = text.Split(']');
                        if (arr.Length > 0)
                        {
                            string[] arr1 = arr[0].Split(',');
                            Point point = new Point();
                            point.X = Convert.ToInt32(arr1[0]);
                            point.Y = Convert.ToInt32(arr1[1]);
                            list_point.Add(point);
                        }
                    }

                }

            }
            catch { }
            return list_point;
        }
        public List<Point> FindByXpathTree(string ldID, string nodecha, string nodecon)
        {
            Random rd = new Random();
            List<Point> list_point = new List<Point>();

            try
            {

                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, filename);

                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                HtmlNode.ElementsFlags.Remove("form");
                document.LoadHtml(html);
                HtmlNode nodeparent = document.DocumentNode.SelectSingleNode(nodecha);
                if (nodeparent != null)
                {
                    html = nodeparent.InnerHtml;
                    document = new HtmlAgilityPack.HtmlDocument();
                    HtmlNode.ElementsFlags.Remove("form");
                    document.LoadHtml(html);
                    HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(nodecon);
                    foreach (HtmlNode node in nodes)
                    {

                        string text = node.Attributes["bounds"].Value.ToString().Remove(0, 1).ToLower();
                        string[] arr = text.Split(']');
                        if (arr.Length > 0)
                        {
                            string[] arr1 = arr[0].Split(',');
                            Point point = new Point();
                            point.X = Convert.ToInt32(arr1[0]);
                            point.Y = Convert.ToInt32(arr1[1]);
                            list_point.Add(point);
                        }
                    }
                }

            }
            catch { }
            return list_point;
        }

        public List<Point> FindByXpathTreeNotEmpty(string ldID, string nodecha, string nodecon)
        {
            Random rd = new Random();
            List<Point> list_point = new List<Point>();

            try
            {
                string cmdCommand = "shell uiautomator dump";
                string data = runAdb(ldID, cmdCommand);
                string html = readFile(ldID, "/sdcard/window_dump.xml");
                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                HtmlNode.ElementsFlags.Remove("form");
                document.LoadHtml(html);
                HtmlNode nodeparent = document.DocumentNode.SelectSingleNode(nodecha);
                if (nodeparent != null)
                {
                    html = nodeparent.InnerHtml;
                    document = new HtmlAgilityPack.HtmlDocument();
                    HtmlNode.ElementsFlags.Remove("form");
                    document.LoadHtml(html);
                    HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(nodecon);
                    foreach (HtmlNode node in nodes)
                    {

                        string text = node.Attributes["text"].Value.ToString();
                        string desc = node.Attributes["content-desc"].Value.ToString();
                        if (text != "" || desc != "")
                        {
                            string bounds = node.Attributes["bounds"].Value.ToString().Remove(0, 1).ToLower();
                            string[] arr = bounds.Split(']');
                            if (arr.Length > 0)
                            {
                                string[] arr1 = arr[0].Split(',');
                                Point point = new Point();
                                point.X = Convert.ToInt32(arr1[0]);
                                point.Y = Convert.ToInt32(arr1[1]);
                                list_point.Add(point);
                            }
                        }
                    }
                }

            }
            catch { }
            return list_point;
        }

        public void scroll_up_random(string ldId, CancellationToken token)
        {
            Random rd = new Random();
            int loop = rd.Next(1, 4);
            for (int i = 0; i < loop; i++)
            {
                scroll_up(ldId);
                Delay(1);
            }
            //if (loop == 3 || loop == 1)
            //{
            //    if (token.IsCancellationRequested)
            //    {
            //        token.ThrowIfCancellationRequested();
            //    }
            //    scroll_up(ldId);

            //}
            //else if (loop == 4 || loop == 2)
            //{
            //    if (token.IsCancellationRequested)
            //    {
            //        token.ThrowIfCancellationRequested();
            //    }

            //    scroll_up(ldId);

            //    scroll_up(ldId);

            //}
            //else
            //{
            //    if (token.IsCancellationRequested)
            //    {
            //        token.ThrowIfCancellationRequested();
            //    }
            //    scroll_up(ldId);
            //    scroll_up_mid(ldId);
            //    scroll_up_mid(ldId);

            //}

        }

        public void scroll_up_randomShare(string ldId)
        {
            Random rd = new Random();
            //up
            //if (SettingTool.configld.versionld == "3.x")
            //{
            //    scroll_up(ldId);
            //}
            //else
            //{
            //    scroll_up(ldId);
            //}
            int loop = rd.Next(0, 4);
            if (loop == 3)
            {
                scroll_up_mid(ldId);
                scroll_up(ldId);
                scroll_up_mid(ldId);
            }
            else if (loop == 2)
            {
                scroll_up(ldId);
                scroll_up_mid(ldId);
            }
            else if (loop == 1)
                scroll_up(ldId);

        }


        public bool shareVideo2Newfeed(string device, string content, CancellationToken token)
        {
            try
            {
                int i = 0;
                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources._1_sharevideo);
                ls_name.Add("1_sharevideo");
                ls_image.Add(Properties.Resources._1_sharevideo_3x);
                ls_name.Add("1_sharevideo");

                DetechModel data = new DetechModel();
                List<DetechModel> list_shareVideo = new List<DetechModel>();

                data = new DetechModel();
                data.parent = "";
                data.content = "nói gì đó";
                data.text = "nói gì đó";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Write something";
                data.text = "Write something";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "...";
                data.text = "...";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "chia sẻ";
                data.text = "chia sẻ";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 2;
                list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Share";
                data.text = "Share";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Share";
                data.text = "Share";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "CHIA SẺ";
                data.text = "CHIA SẺ";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                list_shareVideo.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Viết bài";
                data.text = "Viết bài";
                data.node = "//node[contains(@class,'android.widget.ImageButton')]";
                data.function = 1;
                list_shareVideo.Insert(0, data);

                data = new DetechModel();
                data.parent = "sharevideo";
                data.content = "post";
                data.text = "post";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "sharevideo";
                data.content = "ĐĂNG";
                data.text = "ĐĂNG";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                list_shareVideo.Insert(0, data);

                data = new DetechModel();
                data.parent = "sharevideo";
                data.content = "CHIA SẺ NGAY";
                data.text = "CHIA SẺ NGAY";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                list_shareVideo.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Write Post";
                data.text = "Write Post";
                data.node = "//node[contains(@class,'android.widget.ImageButton')]";
                data.function = 1;
                list_shareVideo.Insert(0, data);

            Lb_start:
                if (token.IsCancellationRequested)
                    return false;
                DetechModel kq = detechFunction(device, list_shareVideo);
                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImage(device, ls_image, ls_name);
                    if (kq_image.status)
                        kq = kq_image;
                }

                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                return false;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(device, kq.point);

                                if (kq.parent == "sharevideo")
                                {
                                    Delay(1);
                                    if (kq.text.ToLower() == "post" || kq.text.ToLower() == "đăng" || kq.text.ToLower() == "share now" || kq.text.ToLower() == "chia sẻ ngay")
                                        return true;
                                }
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                Delay(1);
                                string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int n = 0; n < content_split.Count(); n++)
                                    {
                                        PressOnLeapdroid_vietnamese(device, content_split[n]);
                                        Delay(1);
                                    }
                                }
                                //PressOnLeapdroid_vietnamese(device, FunctionHelper.method_Spin(content));
                                PressOnLeapdroid(device, " ");
                                break;
                            }

                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    if (i == 0)
                    {
                        scroll_up_mid(device);
                    }
                    i++;
                    if (i <= 5)
                    {
                        goto Lb_start;
                    }
                }
            }
            catch
            {
            }
            return false;
        }


        public int ShareVideo_random_noApproval(userLD u, DataGridViewRow dr, Account acc, string link, int numGroup, int i_delay, List<GroupFB> ls_groupname, string description, ref StringBuilder historyshare, bool fullscreen, CancellationToken token)
        {
            int message = 0;
            try
            {
                string device = acc.ldid;
                int count = 0;
                int max = 0;
                Random rd = new Random();
                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
                DetechImageModel detechimg = new DetechImageModel();
                detechimg.function = 1;
                detechimg.name = "like";
                detechimg.img = PointDefault.img_like_videowatch;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.function = 1;
                detechimg.name = "liked";
                detechimg.img = PointDefault.img_liked_videowatch;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.function = 1;
                detechimg.name = "liked";
                detechimg.img = PointDefault.img_3x_like_watch_2;
                list_detechimg.Add(detechimg);

                DetechModel kqlike = detechFunctionCatchImages(acc.ldid, list_detechimg);
                if (kqlike.status)
                {
                    int x = kqlike.point.X + 100;
                    int y = kqlike.point.Y - 100;
                    ClickOnLeapdroidPosition(acc.ldid, x, y);
                    //Thread.Sleep(500);
                    //ClickOnLeapdroidPosition(acc.ldid, x, y);
                }
                else
                {
                    ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_group_view_video);
                    Thread.Sleep(500);
                    ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_group_view_video);
                }
                count = 0;
                while (count < numGroup)
                {
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();
                    if (ls_groupname.Count == 0)
                        break;

                    GroupFB group = ls_groupname[rd.Next(0, ls_groupname.Count)];
                    ls_groupname.Remove(group);
                    string error = "";
                    if (shareVideo2Group(u, acc, FunctionHelper.method_Spin(description), group.name, ref error, 1, link, fullscreen))
                    {
                        count++;
                        max = 0;
                        if (count % 1 == 0)
                        {
                            if (!fullscreen)
                                OpenLink(acc.ldid, "com.facebook.katana", link);
                            kqlike = detechFunctionCatchImages(acc.ldid, list_detechimg);
                            if (kqlike.status)
                            {
                                int x = kqlike.point.X + 100;
                                int y = kqlike.point.Y - 200;
                                ClickOnLeapdroidPosition(acc.ldid, x, y);

                            }
                            else
                            {
                                ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_group_view_video);
                                Thread.Sleep(500);
                            }
                            scroll_up_slow(acc.ldid);
                        }
                        Delay(i_delay);
                    }
                    else
                    {
                        if (error == "spam")
                        {
                            message += count;
                            return message;
                        }
                        max++;
                        if (max >= 5)
                        {
                            message += count;
                            goto lb_finish;
                        }
                    }
                }
                message = count;

            lb_finish:
                //count = 0;
                activeNewfeed(device, "com.facebook.katana");
            }
            catch
            { }
            return message;
        }
        private bool choosegroupandcommnet(string ldid, string content)
        {
            if (checkContentLD(ldid, "Không có nhóm|No groups", 3))
                return false;
            scroll_up_randomShare(ldid);
            Random rd = new Random();
            List<Point> ls_point = FindByXpathList(ldid, "//node[contains(@class,'android.view.View')]");
            Delay(1);
            if (ls_point.Count == 0)
                return false;
            else
            {
                List<Point> list_point = new List<Point>();
                foreach (Point p in ls_point)
                {
                    if (p.Y >= 90)
                    {
                        list_point.Add(p);
                    }

                }
                if (list_point.Count <= 0)
                {
                    return false;

                }
                int index = rd.Next(0, list_point.Count);
                ClickOnLeapdroidPosition(ldid, list_point[index].X + 10, list_point[index].Y + 10);
                List<DetechModel> list_write = new List<DetechModel>();
                DetechModel data = new DetechModel();

                data = new DetechModel();
                data.parent = "post";
                data.content = "Viết tin nhắn";
                data.text = "Viết tin nhắn";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_write.Add(data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "Write";
                data.text = "Write";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_write.Add(data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "viết gì đi";
                data.text = "viết gì đi";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                list_write.Add(data);


                DetechModel kqwrite = RunDetechFunction(ldid, list_write);
                if (kqwrite.status)
                {
                    ClickOnLeapdroidPosition(ldid, kqwrite.point);
                    Thread.Sleep(500);
                    string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                    if (content_split.Count() > 0)
                    {
                        for (int i = 0; i < content_split.Count(); i++)
                        {
                            PressOnLeapdroid_vietnamese(ldid, content_split[i]);
                            Delay(1);
                        }
                    }
                    // PressOnLeapdroid_vietnamese(ldid, FunctionHelper.method_Spin(content));

                    List<DetechModel> list_sharecaption = new List<DetechModel>();
                    data = new DetechModel();
                    data.parent = "";
                    data.content = "ĐĂNG";
                    data.text = "ĐĂNG";
                    data.node = "//node[contains(@class,'android.widget.Button')]";
                    data.function = 1;
                    list_sharecaption.Add(data);

                    data = new DetechModel();
                    data.parent = "";
                    data.content = "Chia sẻ";
                    data.text = "Chia sẻ";
                    data.node = "//node[contains(@class,'android.widget.Button')]";
                    data.function = 1;
                    list_sharecaption.Add(data);

                    data = new DetechModel();
                    data.parent = "";
                    data.content = "Post";
                    data.text = "Post";
                    data.node = "//node[contains(@class,'android.widget.Button')]";
                    data.function = 1;
                    list_sharecaption.Add(data);


                    DetechModel kqcaption = detechFunction(ldid, list_sharecaption);
                    if (kqcaption.status)
                    {
                        ClickOnLeapdroidPosition(ldid, kqcaption.point);
                        return true;
                    }
                }
                else
                    return false;
            }
            return false;
        }

        private bool choosegroupsharevideo(string ldid, string content)
        {
            if (checkContentLD(ldid, "Không có nhóm|Không tìm thấy kết quả nào", 3))
            {
                back(ldid, 2);
                return false;
            }
            ClickOnLeapdroidPosition(ldid, 5, 90);
            return true;
            //// scroll_up_randomShare(ldid);
            // Random rd = new Random();
            // List<string> ls_name = new List<string>();
            // ls_name.Add("CHIA SẺ");
            // List<Point> ls_point = FindByXpathList(ldid, "//node[contains(@class,'android.widget.Button')]", ls_name);

            // //Delay(1);
            // if (ls_point.Count == 0)
            // {
            //     ls_name = new List<string>();
            //     ls_name.Add("");
            //     ls_point = FindByXpathList(ldid, "//node[contains(@class,'android.view.View')]", ls_name);
            //     if (ls_point.Count > 0)
            //     {
            //         ClickOnLeapdroidPosition(ldid, 5, 90);
            //         return true;
            //     }
            //     else
            //     {
            //         back(ldid, 2);
            //         return false;
            //     }

            // }

            //else
            //{
            //    ClickOnLeapdroidPosition(ldid, ls_point[rd.Next(0, ls_point.Count)].X + 5, ls_point[0].Y + 5);
            //    back(ldid, 1);
            //    return true;
            //}


        }

        private bool choosegroupnotbuttonshare(string ldid, string content)
        {
            if (checkContentLD(ldid, "Không có nhóm|Không tìm thấy kết quả nào", 3))
            {
                back(ldid, 2);
                return false;
            }
            scroll_up_randomShare(ldid);
            Random rd = new Random();
            List<Point> ls_point = FindByXpathList(ldid, "//node[contains(@class,'android.view.View')]");
            if (ls_point.Count == 0)
            {
                ls_point = FindByXpathList(ldid, "//node[contains(@class,'android.view.View')]");
            }
            if (ls_point.Count > 0)
            {
                List<Point> list_point = new List<Point>();
                foreach (Point point in ls_point)
                {
                    if (point.Y >= 90)
                    {
                        list_point.Add(point);
                    }
                }
                if (list_point.Count > 0)
                {
                    Point p = list_point[rd.Next(0, list_point.Count)];
                    ClickOnLeapdroidPosition(ldid, p.X + 5, p.Y + 5);
                    return true;
                }
                else
                {
                    back(ldid, 2);
                    return false;
                }
            }
            else
            {
                back(ldid, 2);
                return true;
            }

        }


        public bool scrollJoinGroupbyUID(userLD u, Account acc, string Intpt, string app, string uid, int delay, bool autoAnswer, string answer, CancellationToken token)
        {
            return joinGroupbyUID(u, acc, Intpt, app, uid, delay, autoAnswer, answer, token);
        }
        private bool joinGroupbyUID(userLD u, Account acc, string Intpt, string app, string uid, int delay, bool autoAnswer, string answer, CancellationToken token)
        {
            //check_Facebook_has_stopped(Intpt);
            //OpenLink(Intpt, app, String.Format("fb://group/{0}/about", uid));
            OpenLink(Intpt, app, "fb://group/" + uid);//+ "?view=info&refid=18"

            Delay(2);
            return joinGroupLD(u, acc, Intpt, autoAnswer, answer, token);
        }



        public string scrollJoinGroup(userLD u, Account acc, string Intpt, string app, int min, int max, string keyword, int delay, bool autoAnswer, string answer, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(min, max);
            u.setStatusSum(luot);
            return joinGroupbySearch(u, acc, Intpt, app, luot, keyword, delay, autoAnswer, answer, token);
        }
        public Bitmap ScreenShoot(string device)
        {

            try
            {
                Bitmap result;
                bool isDeleteImageAfterCapture = true;
                string CAPTURE_SCREEN_TO_DEVICES = "shell screencap {0}";//SettingTool.data["capturescreen"];
                Random rd = new Random();

                string filename = rd.Next(1000000) + ".png";
                string path = string.Format("c:\\test\\{0}\\pictures\\temp", device);
                if (Directory.Exists(path) == false)
                    Directory.CreateDirectory(path);
                string text = string.Format("{0}\\{1}", path, filename);
                if (File.Exists(text))
                {
                    File.Delete(text);
                }
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format(CAPTURE_SCREEN_TO_DEVICES, "storage/emulated/legacy/pictures/temp/" + filename);
                }
                else
                {
                    cmdCommand = string.Format(CAPTURE_SCREEN_TO_DEVICES, "storage/emulated/0/pictures/temp/" + filename);
                }

                string kq = runAdb(device, cmdCommand);
                ninjaDroidHelper droid = new ninjaDroidHelper();

                if (File.Exists(text))
                {
                    using (Bitmap bitmap = new Bitmap(text))
                    {
                        result = new Bitmap(bitmap);
                    }
                    if (isDeleteImageAfterCapture)
                    {
                        try
                        {
                            File.Delete(text);
                        }
                        catch
                        {
                        }
                    }
                    return result;
                }
                else
                    return Properties.Resources.a3_1;

            }
            catch (Exception err)
            {

                File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, device), DateTime.Now.ToString() + ": LD - " + device + " " + err.Message + "\n");

                return Properties.Resources.a3_1;
            }

        }
        private bool joinGroupLD(userLD u, Account acc, string ldID, bool autoAnswer, string answer, CancellationToken token, bool grsuggest = false)
        {
            try
            {
                int i = 0;
                int max = 0;
                bool success = false;

                DetechModel model = new DetechModel();
                model = new DetechModel();
                model.content = "Đã tham gia";
                model.text = "Đã tham gia";
                model.function = 0;
                model.parent = "joined";
                model.node = "//node[contains(@class,'android.view.View')]";
                SettingTool.lang.list_joingroup.Add(model);

                List<DetechModel> ls_write = new List<DetechModel>();
                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
                DetechImageModel detechimg = new DetechImageModel();
                detechimg.function = 1;
                detechimg.name = "write";
                detechimg.img = PointDefault.img_joingroup_writeanswer;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.function = 1;
                detechimg.name = "button write";
                detechimg.img = PointDefault.img_joingroup_buttonanswer;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.function = 1;
                detechimg.name = "check";
                detechimg.img = PointDefault.img_joingroup_check;
                list_detechimg.Add(detechimg);

                List<DetechModel> ls_model = new List<DetechModel>();

                model = new DetechModel();
                model.content = "Nút chia sẻ";
                model.text = "Nút chia sẻ";
                model.function = 1;
                model.node = "//node[contains(@class,'android.widget.TextView')]";

                ls_model.Add(model);
                model = new DetechModel();
                model.content = "Quản trị viên kiểm soát";
                model.text = "Quản trị viên kiểm soát";
                model.parent = "admin";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                ls_model.Add(model);

                model = new DetechModel();
                model.content = "Quy tắc";
                model.text = "Quy tắc";
                model.parent = "rule";
                model.node = "//node[contains(@class,'android.view.View')]";
                ls_model.Add(model);

            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_joingroup);
                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                if (LoginPhienHetHan(u, acc, token) == false)
                                {
                                    return false;
                                }
                                break;
                            }
                        case 0:
                            {
                                if (!grsuggest) // join gr suggest ko can back
                                    back(ldID, 1);
                                if (success || kq.parent == "joined")
                                    return true;
                                else
                                    return false;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point.X + 5, kq.point.Y + 3);
                                if (kq.parent == "clickJoin" || kq.content == "Join")
                                {
                                    Delay(3);

                                    if (checkContentLD(ldID, "Hủy yêu cầu|Đã tham gia|Tạo bài viết công khai|Mời thành viên|Xem quản trị viên "))
                                    {
                                        // tra loi cau hoi
                                        scroll_up(ldID);

                                        int scroll = 0;
                                        while (scroll < 10)
                                        {
                                            kq = detechFunction(ldID, ls_model);
                                            if (kq.status)
                                            {
                                                ClickOnLeapdroidPosition(ldID, kq.point.X, kq.point.Y - 5);
                                                Delay(4);
                                                kq = detechFunction(ldID, ls_model);
                                                if (kq.status)
                                                {
                                                    if (kq.parent == "rule")
                                                    {
                                                        back(ldID, 1);
                                                        return true;
                                                    }
                                                    else
                                                    {
                                                        ClickOnLeapdroidPosition(ldID, kq.point2.X - 5, kq.point2.Y - 10);
                                                        Delay(4);
                                                        if (checkContent(ldID, "Quản trị viên kiểm soát"))
                                                        {
                                                            back(ldID, 1);
                                                            return true;
                                                        }
                                                        else
                                                            goto Lb_start;
                                                    }

                                                }
                                            }
                                            scroll_up_mid(ldID);
                                            scroll++;
                                            scroll_up_2short(ldID);
                                        }

                                        back(ldID, 1);
                                        return true;
                                    }

                                    max++;
                                    if (max > 5)
                                    {
                                        back(ldID, 1);
                                        return false;
                                    }
                                    else
                                    {
                                        //viet cau tra loi
                                        List<DetechModel> list_writeinput = new List<DetechModel>();
                                        DetechModel dtmodel = new DetechModel();
                                        dtmodel.content = "Viết câu trả lời...";
                                        dtmodel.text = "Viết câu trả lời...";
                                        dtmodel.function = 1;
                                        dtmodel.node = "//node[contains(@class,'android.widget.EditText')]";
                                        list_writeinput.Add(dtmodel);

                                        bool has_input = false;
                                        for (int j = 0; j < 3; j++)
                                        {
                                            DetechModel kq_write = detechFunction(acc.ldid, list_writeinput);
                                            if (kq_write.status)
                                            {
                                                has_input = true;
                                                ClickOnLeapdroidPosition(ldID, kq_write.point.X + 10, kq_write.point.Y + 10);

                                                if (string.IsNullOrEmpty(answer))
                                                    PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin("{Ok|có|đồng ý|chấp thuận|sẵn sàng|quan tâm|thực sự}"));
                                                else
                                                    PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(answer));
                                            }
                                            else
                                            {

                                                break;
                                            }
                                            scroll_up_2short(acc.ldid);
                                        }
                                        if (has_input)
                                        {
                                            return inputandsend(ldID, answer);
                                        }
                                        else
                                        {
                                            DetechModel kq_image = detechFunctionCatchImages(ldID, list_detechimg);
                                            if (kq_image.status)
                                            {
                                                has_input = true;
                                                ClickOnLeapdroidPosition(ldID, kq_image.point.X + 10, kq_image.point.Y + 10);

                                                if (string.IsNullOrEmpty(answer))
                                                    PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin("{Ok|có|đồng ý|chấp thuận|sẵn sàng|quan tâm|thực sự}"));
                                                else
                                                    PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(answer));
                                                return inputandsend(ldID, answer);
                                            }

                                        }

                                    }
                                    success = true;
                                }
                                Delay(1);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                if (!autoAnswer)
                                {
                                    var result = MessageBox.Show("Hãy điền xong câu trả lời, rồi chọn đồng ý để tiếp tục", "Thông báo", MessageBoxButtons.OKCancel);
                                    if (result == DialogResult.OK)
                                    {
                                        return true;
                                    }
                                }
                                List<DetechModel> list_write = new List<DetechModel>();
                                model = new DetechModel();
                                model.parent = "";
                                model.content = "Viết câu trả lời...";
                                model.text = "Viết câu trả lời...";
                                model.node = "//node[contains(@class,'android.widget.EditText')]";
                                model.function = 2;
                                list_write.Add(model);
                                model = new DetechModel();
                                model.parent = "";
                                model.content = "Write your answer";
                                model.text = "Write your answer";
                                model.node = "//node[contains(@class,'android.widget.EditText')]";
                                model.function = 2;
                                list_write.Add(model);

                                //get list pint
                                List<DetechModel> list_point = detechFunctionListPoint(ldID, list_write);
                                if (list_point.Count > 0)
                                {
                                    foreach (DetechModel dt in list_point)
                                    {
                                        ClickOnLeapdroidPosition(ldID, dt.point);

                                        if (string.IsNullOrEmpty(answer))
                                            PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin("{Ok|có|đồng ý|chấp thuận|sẵn sàng|quan tâm|thực sự}"));
                                        else
                                            PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(answer));
                                    }
                                    if (list_point.Count > 1)
                                    {
                                        list_point = detechFunctionListPoint(ldID, list_write);
                                        if (list_point.Count > 0)
                                        {
                                            foreach (DetechModel dt in list_point)
                                            {
                                                ClickOnLeapdroidPosition(ldID, dt.point);

                                                if (string.IsNullOrEmpty(answer))
                                                    PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin("{Ok|có|đồng ý|chấp thuận|sẵn sàng|quan tâm|thực sự}"));
                                                else
                                                    PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(answer));

                                            }
                                        }
                                        scroll_up_2short(ldID);
                                    }
                                    return inputandsend(ldID, answer, grsuggest);

                                }
                                break;
                            }
                        case 3:
                            {
                                return true;

                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {

                    DetechModel kq_image = detechFunctionCatchImages(ldID, list_detechimg);
                    if (kq_image.status)
                    {
                        ClickOnLeapdroidPosition(ldID, kq_image.point.X + 10, kq_image.point.Y + 10);
                        return inputandsend(ldID, answer);
                    }

                    i++;
                    if (i < 3)
                    {

                        goto Lb_start;
                    }
                }
            }
            catch
            {
            }
            string data = "Bộ lọc|TỈNH/THÀNH PHỐ|filters|Groups";
        LB_back:
            if (!checkContentLD(ldID, data))
            {
                if (!grsuggest)
                    back(ldID, 1);
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "Thoát mà không trả lời?";
                model.text = "THOÁT";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;
                List<DetechModel> lsModel = new List<DetechModel>();
                lsModel.Add(model);
                model = RunDetechFunction(ldID, lsModel, 2);
                if (model.status)
                {
                    ClickOnLeapdroidPosition(ldID, model.point);
                    goto LB_back;
                }

            }
            return false;
        }
        private bool inputandsend(string ldID, string answer, bool grsuggest = false)
        {
            //grsuggest tham gia gr goi y ko can back
            List<DetechModel> ls_detechSend = new List<DetechModel>();
            DetechModel model = new DetechModel();
            model = new DetechModel();
            model.parent = "clicksend";
            model.content = "submit";
            model.text = "submit";
            model.node = "//node[contains(@class,'android.view.View')]";
            model.function = 1;
            ls_detechSend.Add(model);

            model = new DetechModel();
            model.parent = "clicksend";
            model.content = "GỬI";
            model.text = "GỬI";
            model.node = "//node[contains(@class,'android.view.View')]";
            model.function = 1;
            ls_detechSend.Add(model);

            //check
            List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
            DetechImageModel detechimg = new DetechImageModel();
            detechimg.function = 1;
            detechimg.name = "check";
            detechimg.img = PointDefault.img_joingroup_check;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.function = 1;
            detechimg.name = "check";
            detechimg.img = PointDefault.img_joingroup_radio;
            list_detechimg.Add(detechimg);

            for (int i = 0; i <= 3; i++)
            {
                DetechModel kq_check = detechFunctionCatchImages(ldID, list_detechimg);
                if (kq_check.status)
                {
                    ClickOnLeapdroidPosition(ldID, kq_check.point);
                }
                else
                {
                    break;
                }
            }


            Delay(1);
            int step_send = 0;
        lb_send:
            DetechModel kq_send = detechFunction(ldID, ls_detechSend);
            if (kq_send.status & kq_send.point.Y > 0)
            {
                ClickOnLeapdroidPosition(ldID, kq_send.point);
                Delay(1);
                string data = "Bộ lọc|TỈNH/THÀNH PHỐ|Xóa nội dung|Tham gia|Hủy";
                if (!checkContentLD(ldID, data) & !grsuggest)      //grsuggest tham gia gr goi y ko can back
                    back(ldID, 1);
                return true;
            }
            else
            {
                step_send++;
                scroll_up(ldID);
                if (step_send <= 5)
                {
                    Delay(1);
                    goto lb_send;
                }
            }
            return false;
        }
        public string scrollCommentGroup(userLD u, Account acc, string Intpt, string app, int minlike, int maxlike, string content, int delay, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            int dem = 0;
            int max = 0;
            int step = 0;
            try
            {
                List<string> list_text = new List<string>();
                list_text.Add("Vừa xong");
                list_text.Add("Nhãn dán");

                List<string> list_text2 = new List<string>();
                list_text2.Add("nhóm của bạn");

                OpenLink(Intpt, app, "fb://groups/gridtab"); //fb://groups/gridtab
                Delay(2);
                scroll_down(Intpt);
                if (intoyourgroup(Intpt, token) == false)
                {
                    scroll_down(Intpt);
                }
                while (dem < luot)
                {

                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    scroll_up_random(Intpt, token);

                    string message = content.Replace("$me", acc.name);
                    if (commentPost(u, acc, Intpt, FunctionHelper.method_Spin(message), token))
                    {
                        max = 0;
                        dem++;
                        u.setStatusResult(dem);
                        Delay(2);
                        back(Intpt, 2);

                        // truong hop commnet live stream chi back 1 lan
                        string check = checkListContent(Intpt, list_text);
                        if (check != null)
                        {
                            back(Intpt, 1);
                            Delay(1);
                            back(Intpt, 1);
                        }
                        //check = checkListContent(Intpt, list_text2);
                        //if (check == null)
                        //{
                        //    OpenLink(Intpt, app, "fb://groups/gridtab");
                        //    Delay(2);
                        //}
                        //else
                        //{
                        //    scroll_up(Intpt);
                        //}
                        scroll_up(Intpt);

                    }
                    else
                    {
                        max++;
                        //  backNewfeedGroup(Intpt);
                        if (max >= 5)
                        {
                            activeNewfeed(Intpt, app);
                            return "| Comment group complete:" + dem.ToString() + "/" + luot.ToString();
                        }
                        else
                        {
                            if (check_Facebook_has_stopped(u, Intpt, acc, token) == false)
                            {
                                return "| Comment group complete:" + dem.ToString() + "/" + luot.ToString();
                            }
                            back(Intpt, 1);
                            scroll_up(Intpt);
                        }

                    }

                }
                activeNewfeed(Intpt, app);
            }
            catch
            { }
            return "| Comment group complete:" + dem.ToString() + "/" + luot.ToString();
        }

        public string scrollCommentNefeedGroup(userLD u, Account acc, string Intpt, string app, int minlike, int maxlike, string content, int delay, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            int dem = 0;
            int max = 0;
            int step = 0;
            try
            {
                List<string> list_text = new List<string>();
                list_text.Add("Vừa xong");
                list_text.Add("Nhãn dán");

                List<string> list_text2 = new List<string>();
                list_text2.Add("Tìm kiếm nhóm");
                OpenLink(Intpt, app, "fb://groups/gridtab"); //fb://groups/gridtab
                Delay(1);
                scroll_down(Intpt);
                Delay(2);
                while (dem < luot)
                {

                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    if (checkContentLD(Intpt, "bạn bè|Xác nhận lời mời"))
                    {
                        OpenLink(Intpt, app, "fb://groups/gridtab");
                        Delay(1);
                    }
                    scroll_up_random(Intpt, token);

                    string message = content.Replace("$me", acc.name);
                    if (commentPost(u, acc, Intpt, FunctionHelper.method_Spin(message), token))
                    {
                        max = 0;
                        dem++;
                        u.setStatusResult(dem);
                        Delay(1);
                        back(Intpt, 2);
                        string check = "";
                        // truong hop commnet live stream chi back 1 lan
                        for (int i = 0; i <= 1; i++)
                        {
                            check = checkListContent(Intpt, list_text);
                            if (check != null)
                            {
                                back(Intpt, 1);
                                Delay(1);

                            }
                        }
                        check = checkListContent(Intpt, list_text2);
                        if (check == null)
                        {

                            OpenLink(Intpt, app, "fb://groups/gridtab");
                            Delay(2);
                        }
                        else
                        {
                            scroll_up(Intpt);
                        }


                    }
                    else
                    {
                        max++;
                        //  backNewfeedGroup(Intpt);
                        if (max >= 7)
                        {
                            activeNewfeed(Intpt, app);
                            return "| Comment group complete:" + dem.ToString() + "/" + luot.ToString();
                        }
                        else
                        {
                            // back(Intpt, 1); 
                            if (checkContent(Intpt, "Bạn đã đọc hết"))
                            {
                                break;
                            }

                            else
                            {
                                scroll_up(Intpt);
                            }
                        }

                    }

                }
                activeNewfeed(Intpt, app);
            }
            catch
            { }
            return "| Comment group complete:" + dem.ToString() + "/" + luot.ToString();


        }

        public string addfriendbylink(userLD u, Account acc, string handle, string app, int minlike, int maxlike, CancellationToken token)
        {
            int dem = 0;
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            int max = 0;
            try
            {
                Delay(1);
                while (dem < luot)
                {
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();
                    scroll_up_random(handle, token);

                    if (likePost(acc, handle, token))
                    {
                        max = 0;
                        dem++;
                        u.setStatusResult(dem);
                    }
                    else
                    {
                        max++;
                        if (max > 6)
                        {
                            activeNewfeed(handle, app);
                            return "| Like newfeed Group complete:" + dem.ToString() + "/" + luot.ToString();
                        }
                        else
                        {
                            if (check_Facebook_has_stopped(u, handle, acc, token) == false)
                            {
                                return "| Like newfeed Group complete:" + dem.ToString() + "/" + luot.ToString();
                            }
                        }
                    }

                }
                activeNewfeed(handle, app);
            }
            catch
            { }
            return "| Like newfeed Group complete:" + dem.ToString() + "/" + luot.ToString();
        }
        public string scrollLikeGroup(userLD u, Account acc, string handle, string app, int minlike, int maxlike, CancellationToken token)
        {
            int dem = 0;
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            int max = 0;
            try
            {
                OpenLink(handle, app, "fb://groups/gridtab");

                Delay(1);
                while (dem < luot)
                {
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();

                    if (checkContentLD(handle, "Xác nhận lời mời|bạn bè"))
                    {
                        OpenLink(handle, app, "fb://groups/gridtab");
                        Delay(2);
                    }
                    scroll_up_random(handle, token);
                    if (likePost(acc, handle, token))
                    {
                        max = 0;
                        dem++;
                        u.setStatusResult(dem);
                    }
                    else
                    {
                        max++;
                        if (max > 6)
                        {
                            activeNewfeed(handle, app);
                            return "| Like newfeed Group complete:" + dem.ToString() + "/" + luot.ToString();
                        }
                        else
                        {
                            if (check_Facebook_has_stopped(u, handle, acc, token) == false)
                            {
                                return "| Like newfeed Group complete:" + dem.ToString() + "/" + luot.ToString();
                            }
                        }
                    }
                }
                activeNewfeed(handle, app);
            }
            catch
            { }
            return "| Like newfeed Group complete:" + dem.ToString() + "/" + luot.ToString();
        }

        public void changeProxy(string ldID, string proxy)
        {
            string[] proxyInfo = proxy.Split(':');

            string IP = "", port = "", user = "", pass = "";
            if (proxyInfo.Count() == 4)
            {
                IP = proxyInfo[0];
                port = proxyInfo[1];
                user = proxyInfo[2];
                pass = proxyInfo[3];
            }
            runApp(ldID, "org.proxydroid");

            Thread.Sleep(2000);

            List<DetechModel> ls_check_ip = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data.parent = "check";
            data.content = IP;
            data.text = IP;
            data.node = "";
            data.function = 0;
            ls_check_ip.Add(data);

            closeAlert(ldID);

            DetechModel kq_ip = RunDetechFunction(ldID, ls_check_ip);

            if (!kq_ip.status)
            {
                inputProxyInfo(ldID, IP, "Host");
                List<DetechModel> ls_check_port = new List<DetechModel>();
                data = new DetechModel();
                data.parent = "check";
                data.content = port;
                data.text = port;
                data.node = "";
                data.function = 0;
                ls_check_port.Add(data);

                DetechModel kq_port = RunDetechFunction(ldID, ls_check_port);
                if (!kq_port.status)
                    inputProxyInfo(ldID, port, "Port");

                enableAuthen(ldID);
                List<DetechModel> ls_check_user = new List<DetechModel>();
                data = new DetechModel();
                data.parent = "check";
                data.content = user;
                data.text = user;
                data.node = "";
                data.function = 0;
                ls_check_user.Add(data);

                DetechModel kq_user = RunDetechFunction(ldID, ls_check_user);

                if (!kq_user.status)
                {
                    inputProxyInfo(ldID, user, "User");
                }

                inputProxyInfo(ldID, pass, "Password");
            }
            onOff(ldID);
        }
        private bool onOff(string ldID)
        {
            int step = 0;
            List<DetechModel> ls_proxy = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data = new DetechModel();
            data.parent = "clickSwitchOff";
            data.content = "tắt";
            data.text = "tắt";
            data.node = "//node[contains(@class,'android.widget.Switch')]";
            data.function = 1;
            ls_proxy.Add(data);
            data = new DetechModel();
            data.parent = "clickSwitchOn";
            data.content = "bật";
            data.text = "bật";
            data.node = "//node[contains(@class,'android.widget.Switch')]";
            data.function = 1;
            ls_proxy.Add(data);

            data = new DetechModel();
            data.parent = "clickSwitchOff";
            data.content = "off";
            data.text = "off";
            data.node = "//node[contains(@class,'android.widget.Switch')]";
            data.function = 1;
            ls_proxy.Add(data);

            data = new DetechModel();
            data.parent = "clickSwitchOn";
            data.content = "on";
            data.text = "on";
            data.node = "//node[contains(@class,'android.widget.Switch')]";
            data.function = 1;
            ls_proxy.Add(data);
        Lb_start:
            DetechModel kq = detechFunction(ldID, ls_proxy);
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case -1:
                        {
                            Thread.Sleep(5000);
                            break;
                        }
                    case 0:
                        {
                            back(ldID, 1);
                            break;
                        }
                    case 1:
                        {
                            if (kq.parent == "clickSwitchOff")
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(3);
                                return true;
                            }
                            else
                                ClickOnLeapdroidPosition(ldID, kq.point);
                            Delay(1);
                            break;
                        }
                    case 2:
                        {
                            return true;
                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step <= 5)
                {
                    scroll_down(ldID);
                    goto Lb_start;

                }

            }
            return false;
        }

        private bool enableAuthen(string ldID)
        {
            int step = 0;
            List<DetechModel> ls_proxy = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data = new DetechModel();
            data.parent = "clickEnable";
            data.content = "Enable Authentication";
            data.text = "Enable Authentication";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            ls_proxy.Add(data);

            List<DetechModel> ls_checkAble = new List<DetechModel>();
            data = new DetechModel();
            data = new DetechModel();
            data.parent = "clickEnable";
            data.content = "";
            data.text = "";
            data.node = "//node[contains(@class,'android.widget.CheckBox')]";
            data.function = 0;
            ls_checkAble.Add(data);

        Lb_start:
            DetechModel kq = detechFunction(ldID, ls_proxy);
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {

                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            Delay(2);
                            if (detechFunctionCheckable(ldID, ls_checkAble))
                                return true;
                            else
                                scroll_up_mid(ldID);
                            break;
                        }

                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step <= 5)
                {
                    scroll_up(ldID);
                    goto Lb_start;
                }

            }
            return false;
        }
        private bool closeAlert(string ldID)
        {
            int step = 0;

            List<DetechModel> ls_proxy = new List<DetechModel>();
            List<DetechModel> ls_deny = new List<DetechModel>();

            DetechModel data = new DetechModel();
            data.parent = "clickOK";
            data.content = "OK, I know";
            data.text = "OK, I know";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            ls_proxy.Add(data);

            data = new DetechModel();
            data.parent = "remember";
            data.content = "Remember choice forever";
            data.text = "Remember choice forever";
            data.node = "//node[contains(@class,'android.widget.RadioButton')]";
            data.function = 1;
            ls_proxy.Add(data);

            data = new DetechModel();
            data.parent = "clickOK";
            data.content = "Allow";
            data.text = "Allow";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            ls_deny.Add(data);

            data = new DetechModel();
            data.parent = "clickOK";
            data.content = "Allow";
            data.text = "Allow";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            ls_deny.Add(data);

        Lb_start:
            DetechModel kq = detechFunction(ldID, ls_proxy);
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {

                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            if (kq.parent == "remember")
                            {
                                Delay(2);
                                DetechModel kqDeny = RunDetechFunction(ldID, ls_deny, 5);
                                if (kqDeny.status)
                                    ClickOnLeapdroidPosition(ldID, kqDeny.point);
                            }
                            break;
                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step <= 5)
                {
                    goto Lb_start;
                }
            }
            return false;
        }
        private bool inputProxyInfo(string ldID, string Ip, string name)
        {
            int step = 0;

            List<DetechModel> ls_proxy = new List<DetechModel>();
            List<DetechModel> ls_deny = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data.parent = "clickOK";
            data.content = "OK, I know";
            data.text = "OK, I know";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            ls_proxy.Add(data);

            data = new DetechModel();
            data.parent = "remember";
            data.content = "Remember choice forever";
            data.text = "Remember choice forever";
            data.node = "//node[contains(@class,'android.widget.RadioButton')]";
            data.function = 1;
            ls_proxy.Add(data);

            data = new DetechModel();
            data.parent = "clickOK";
            data.content = "Từ chối";
            data.text = "Từ chối";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            ls_deny.Add(data);

            data = new DetechModel();
            data.parent = "clickOK";
            data.content = "Deny";
            data.text = "Deny";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            ls_deny.Add(data);

            data = new DetechModel();
            data.parent = "check";
            data.content = Ip;
            data.text = Ip;
            data.node = "";
            data.function = 0;
            ls_proxy.Add(data);

            data = new DetechModel();
            data.parent = "click";
            data.content = name;
            data.text = name;
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            ls_proxy.Add(data);

        Lb_start:
            DetechModel kq = detechFunction(ldID, ls_proxy);
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case -1:
                        {
                            Thread.Sleep(5000);
                            break;
                        }
                    case 0:
                        {
                            return true;
                        }
                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            if (kq.parent == "remember")
                            {
                                Delay(1);
                                DetechModel kqDeny = RunDetechFunction(ldID, ls_deny, 5);
                                if (kqDeny.status)
                                    ClickOnLeapdroidPosition(ldID, kqDeny.point);
                            }
                            Delay(1);
                            var point = FindByXpath(ldID, "//node[contains(@class,'android.widget.EditText')]");
                            if (point.X > 0)
                            {
                                ClickOnLeapdroidPosition(ldID, point);

                                for (int i = 0; i < 20; i++)
                                {
                                    ClickOnLeapdroidPosition(ldID, point.X + 500, point.Y);
                                    runAdb(ldID, "shell input keyevent 67");
                                }
                                PressOnLeapdroid(ldID, Ip);
                                Delay(1);
                                List<string> ls_path = new List<string>();
                                ls_path.Add("//node[contains(@class,'android.widget.Button')]");
                                List<string> ls_text = new List<string>();
                                ls_text.Add("ok");
                                point = FindByListXpath(ldID, ls_path, ls_text);
                                if (point.X > 0)
                                {
                                    ClickOnLeapdroidPosition(ldID, point);
                                    return true;
                                }

                            }
                            break;
                        }

                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step <= 5)
                {
                    scroll_up_mid(ldID);
                    goto Lb_start;

                }

            }
            return false;
        }
        public string joinGroupManual(userLD u, Account acc, string device, string app, List<string> lsUID, bool autoAnswer, string answer, int delay, CancellationToken token)
        {

            int count = 0;
            for (int i = 0; i < lsUID.Count(); i++)
            {

                if (autoAnswer)
                {
                    if (joinGroupbyUID(u, acc, device, app, lsUID[i], 3, autoAnswer, answer, token))
                        count++;
                }
                else
                {
                    OpenLink(device, app, "fb://group/" + lsUID[i]);
                    if (SettingTool.configld.language == "English")
                        MessageBox.Show("Please answer the group join question. Click OK to continue with another ID!");
                    else
                        MessageBox.Show("Hãy trả lời câu hỏi tham gia của nhóm. Bấm OK để tiếp tục ID khác!");
                }
                File.AppendAllText(string.Format("{0}\\logs\\{1}.txt", Application.StartupPath, device), lsUID[i]);
                Thread.Sleep(delay * 1000);
            }
            return "Complete " + count.ToString() + "/" + lsUID.Count.ToString();

        }
        public string scrollLikePostPage(userLD u, Account acc, string handle, string app, string pageid, int minlike, int maxlike, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            int max = 0;
            u.setStatusSum(luot);
            try
            {
                string result = OpenLink(handle, "com.facebook.katana", "fb://page/" + pageid);
                if (result.Contains("Error"))
                {
                    return "Lỗi mở linke fanpage";
                }
                Delay(1);
                List<DetechModel> detechFeed = new List<DetechModel>();
                List<DetechModel> detechexit = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "clickfeed";
                model.content = "Feed";
                model.text = "Feed";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechFeed.Add(model);

                model = new DetechModel();
                model.parent = "clickfeed";
                model.content = "Bảng tin";
                model.text = "Bảng tin";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechFeed.Add(model);

                model = new DetechModel();
                model.parent = "exit";
                model.content = "Không thể kết nối";
                model.text = "Không thể kết nối";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechexit.Add(model);

                model = new DetechModel();
                model.parent = "exit";
                model.content = "can't connect";
                model.text = "can't connect";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechexit.Add(model);


                DetechModel kq = RunDetechFunction(handle, detechexit, 3);
                if (kq.parent == "exit")
                {
                    activeNewfeed(handle, app);
                    if (SettingTool.configld.language == "English")
                        return "| Not avaiable newfeed fanpage";
                    else
                        return "| Không có newfeed của page";
                }
                int dem = 0;
                while (dem < luot)
                {
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    scroll_up_random(handle, token);

                    if (likePost(acc, handle, token))
                    {
                        max = 0;
                        dem++;
                        Delay(1);
                        u.setStatusResult(dem);
                    }
                    else
                    {
                        max++;
                        if (max >= 5)
                        {
                            activeNewfeed(handle, app);
                            return "| Like post fanpage complete:" + dem.ToString() + "/" + luot;
                        }
                    }
                }
                activeNewfeed(handle, app);
                return "| Like post fanpage complete:" + dem.ToString() + "/" + luot;

            }
            catch
            { }
            return "| Like post fanpage complete:" + "0/" + luot;
        }
        public string scrollCommentPostPage(userLD u, Account acc, string handle, string app, string pageid, int minlike, int maxlike, string content, CancellationToken token)
        {
            int max = 0;
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            try
            {
                string message = content.Replace("$me", acc.name);
                string result = OpenLink(handle, "com.facebook.katana", "fb://page/" + pageid);
                if (result.Contains("Error"))
                {
                    return "Lỗi mở link fanpage";
                }
                Delay(2);
                List<DetechModel> detechFeed = new List<DetechModel>();
                List<DetechModel> detechexit = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "exit"; ;
                model.content = "Không thể kết nối";
                model.text = "Không thể kết nối";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechexit.Add(model);

                model = new DetechModel();
                model.parent = "exit";
                model.content = "can't connect";
                model.text = "can't connect";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechexit.Add(model);

                model = new DetechModel();
                model.parent = "clickfeed";
                model.content = "Feed";
                model.text = "Feed";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechFeed.Add(model);

                model = new DetechModel();
                model.parent = "clickfeed";
                model.content = "Bảng tin";
                model.text = "Bảng tin";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechFeed.Add(model);
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                int dem = 0;
                DetechModel kq = RunDetechFunction(handle, detechexit);
                if (kq.parent == "exit")
                {
                    activeNewfeed(handle, app);
                    return "| Không có newfeed của page";
                }
                while (dem < luot)
                {
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    scroll_up_random(handle, token);
                    if (commentPost(u, acc, handle, message, token))
                    {
                        max = 0;
                        dem++;
                        u.setStatusResult(dem);
                        Delay(1);
                        back(handle, 2);

                    }
                    else
                    {
                        max++;
                        if (max >= 5)
                        {
                            activeNewfeed(handle, app);
                            return "| Comment fanpage complete:" + dem.ToString() + "/" + luot.ToString();
                        }
                    }
                }
                return "| Comment fanpage complete:" + dem.ToString() + "/" + luot.ToString();
            }
            catch
            {

            }
            return "";
        }
        private bool shareVideo2Group(userLD u, Account acc, string content, string namegroup, ref string error, int delay, string linkopen, bool fullscreen)
        {
            try
            {
                string device = acc.ldid;
                DetechModel data = new DetechModel();
                data.parent = "Post";
                data.content = "Post";
                data.text = "Post";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                SettingTool.lang.list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "ĐĂNG";
                data.content = "ĐĂNG";
                data.text = "ĐĂNG";
                data.function = 1;
                data.node = "//node[contains(@class,'android.widget.Button')]";
                SettingTool.lang.list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ";
                data.text = "Chia sẻ";
                data.function = 1;
                data.node = "//node[contains(@class,'android.view.View')]";
                SettingTool.lang.list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "share";
                data.text = "share";
                data.function = 1;
                data.node = "//node[contains(@class,'android.view.View')]";
                SettingTool.lang.list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Phiên đã hết hạn";
                data.text = "ĐỒNG Ý";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = -3;
                SettingTool.lang.list_shareVideo.Add(data);

                Random rd = new Random();
                List<DetechImageModel> list_images = new List<DetechImageModel>();
                DetechImageModel detechimg = new DetechImageModel();
                detechimg.name = "sharevideo";
                detechimg.function = 1;
                detechimg.img = Properties.Resources._1_sharevideo;
                list_images.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "sharevideo";
                detechimg.function = 1;
                detechimg.img = Properties.Resources._1_sharevideo_hi;
                list_images.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "sharevideo";
                detechimg.function = 1;
                detechimg.img = Properties.Resources._1_sharevideo_3x;
                list_images.Add(detechimg);

                data = new DetechModel();
                data.parent = "";
                data.content = "Search";
                data.text = "Search";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 1;
                SettingTool.lang.list_shareVideo.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "CHIA SẺ NGAY";
                data.text = "CHIA SẺ NGAY";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Bảng tin";
                data.text = "Bảng tin";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_shareVideo.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Facebook";
                data.text = "Facebook";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_shareVideo.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Trong nhóm";
                data.text = "Trong nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_shareVideo.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên một nhóm";
                data.text = "Chia sẻ lên một nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_shareVideo.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên nhóm";
                data.text = "Chia sẻ lên nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_shareVideo.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên một nhóm";
                data.text = "Chia sẻ lên một nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_shareVideo.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên nhóm";
                data.text = "Chia sẻ lên nhóm";
                data.node = "//node[contains(@class,'android.widget.ImageButton')]";
                data.function = 1;
                SettingTool.lang.list_shareVideo.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Share to a Group";
                data.text = "Share to a Group";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_shareVideo.Insert(0, data);

                bool sroll = true;
                int i = 0;
                bool has_seach = false;

                CancellationToken token = new CancellationToken();
            Lb_start:
                DetechModel kq = detechFunction(device, SettingTool.lang.list_shareVideo);
                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImages(device, list_images);
                    if (kq_image.status)
                        kq = kq_image;

                }

                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                back(device, 2);
                                return false;
                            }
                        case -3:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                LoginPhienHetHan(u, acc, token);
                                break;
                            }
                        case -1:
                            {
                                List<DetechImageModel> list_imagekhang = new List<DetechImageModel>();
                                detechimg = new DetechImageModel();
                                detechimg.name = "khangspam";
                                detechimg.function = 1;
                                detechimg.img = Properties.Resources._3x_share_video_khang_spam;
                                list_imagekhang.Add(detechimg);
                                DetechModel kq_image = detechFunctionCatchImages(device, list_imagekhang);
                                if (kq_image.status)
                                {
                                    ClickOnLeapdroidPosition(device, kq_image.point.X + 20, kq_image.point.Y + 20);

                                }
                                error = "spam";
                                return false;

                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(device, kq.point.X + 5, kq.point.Y + 5);
                                if (kq.content == "Tìm kiếm" || kq.content == "Search")
                                {
                                    if (has_seach == false)
                                    {
                                        PressOnLeapdroid_vietnamese(device, namegroup);
                                        has_seach = true;
                                        List<DetechModel> list_buttonshare = new List<DetechModel>();
                                        data = new DetechModel();
                                        data.parent = "";
                                        data.content = "Chia sẻ";
                                        data.text = "Chia sẻ";
                                        data.node = "//node[contains(@class,'android.widget.Button')]";
                                        data.function = 1;
                                        list_buttonshare.Add(data);
                                        data = new DetechModel();
                                        data.parent = "";
                                        data.content = "share";
                                        data.text = "share";
                                        data.node = "//node[contains(@class,'android.widget.Button')]";
                                        data.function = 1;
                                        list_buttonshare.Add(data);


                                        DetechModel kqbuttonshare = detechFunction(device, list_buttonshare);
                                        if (kqbuttonshare.status)
                                        {
                                            ClickOnLeapdroidPosition(device, kqbuttonshare.point.X, kqbuttonshare.point.Y);
                                            List<DetechModel> list_deleteseach = new List<DetechModel>();
                                            data = new DetechModel();
                                            data.parent = "post";
                                            data.content = "Xóa nội dung";
                                            data.text = "Xóa nội dung";
                                            data.node = "//node[contains(@class,'android.widget.ImageView')]";
                                            data.function = 2;
                                            list_deleteseach.Add(data);

                                            DetechModel kq_seach = RunDetechFunction(device, list_deleteseach);
                                            if (kq_seach.status)
                                            {
                                                ClickOnLeapdroidPosition(device, kq_seach.point);
                                            }
                                            else
                                            {
                                                back(device, 1);
                                            }
                                            return true;
                                        }
                                        else
                                        {
                                            choosegroupsharevideo(device, content);
                                            List<DetechModel> list_sharecaption = new List<DetechModel>();
                                            data = new DetechModel();
                                            data.parent = "";
                                            data.content = "Viết tin nhắn…";
                                            data.text = "Viết tin nhắn…";
                                            data.node = "//node[contains(@class,'android.widget.EditText')]";
                                            data.function = 1;
                                            list_sharecaption.Add(data);
                                            data = new DetechModel();
                                            data.parent = "";
                                            data.content = "bạn viết gì đi.";
                                            data.text = "bạn viết gì đi.";
                                            data.node = "//node[contains(@class,'android.widget.EditText')]";
                                            data.function = 1;
                                            list_sharecaption.Add(data);
                                            data = new DetechModel();
                                            data.parent = "";
                                            data.content = "Hãy nói gì đó";
                                            data.text = "Hãy nói gì đó";
                                            data.node = "//node[contains(@class,'android.widget.EditText')]";
                                            data.function = 1;
                                            list_sharecaption.Add(data);
                                            DetechModel kqcaption = detechFunction(device, list_sharecaption);
                                            if (kqcaption.status)
                                            {
                                                ClickOnLeapdroidPosition(device, kqcaption.point);
                                                Delay(1);
                                                string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                                if (content_split.Count() > 0)
                                                {
                                                    for (int n = 0; n < content_split.Count(); n++)
                                                    {
                                                        PressOnLeapdroid_vietnamese(device, content_split[n]);
                                                        Delay(1);
                                                    }
                                                }
                                                // PressOnLeapdroid_vietnamese(device, FunctionHelper.method_Spin(content));
                                            }
                                        }
                                    }
                                    else
                                    {
                                        return false;
                                    }
                                }
                                else if (kq.text == "Chia sẻ" || kq.parent == "sharevideo")
                                    sroll = false;

                                Delay(1);
                                if (kq.parent == "clickShare" || kq.parent.ToLower() == "share" || kq.parent.ToLower() == "chia sẻ" || kq.parent.ToLower() == "đăng" || kq.parent.ToLower() == "post")
                                {
                                    //back(device, 1);
                                    return true;
                                }
                                if (kq.parent == "fullscreen")
                                    SettingTool.lang.list_shareVideo.RemoveAt(0);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                Delay(1);
                                string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int n = 0; n < content_split.Count(); n++)
                                    {
                                        PressOnLeapdroid_vietnamese(device, content_split[n]);
                                        Delay(1);

                                    }
                                }
                                break;
                            }

                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    if (sroll)
                    {
                        if (i < 2)
                            scroll_up_short(device);
                    }

                    i++;

                    if (i < 9)
                    {
                        goto Lb_start;
                    }
                }
            }
            catch
            {
            }
            return false;
        }
        public int shareVideo2Group(userLD u, Account acc, string content, int numgroup, int delay, string link, CancellationToken token, bool fullscreen = false)
        {
            //fullscreen = false thi moi lan share xong open lai link, vi giao dien binh thuong share xong bi nhay video khac
            string device = acc.ldid;
            int count = 0;
            try
            {
                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
                DetechImageModel model = new DetechImageModel();
                model.img = PointDefault.img_sharevideo_buttonshare;
                model.name = "step1";
                model.function = 1;
                list_detechimg.Add(model);
                bool sroll = true;
                int i = 0;
                Random rd = new Random();

                DetechModel data = new DetechModel();
                data.parent = "step1";
                data.content = "Share Button";
                data.text = "Share";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Add(data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "POST";
                data.text = "POST";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Add(data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "ĐĂNG";
                data.text = "ĐĂNG";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "Share";
                data.text = "Share";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "In a group";
                data.text = "In a group";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                List<DetechModel> lsbangtin = new List<DetechModel>();
                data = new DetechModel();
                data.parent = "";
                data.content = "Bảng tin";
                data.text = "Bảng tin";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                lsbangtin.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Bảng tin";
                data.text = "Bảng tin";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                lsbangtin.Add(data);

                data = new DetechModel();
                data.parent = "step1new";
                data.content = "CHIA SẺ";
                data.text = "CHIA SẺ";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "step1new";
                data.content = "share";
                data.text = "share";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "clickShare";
                data.content = "CHIA SẺ NGAY";
                data.text = "CHIA SẺ NGAY";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "clickShare";
                data.content = "share now";
                data.text = "share now";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Hãy nói gì đó";
                data.text = "Hãy nói gì đó";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Write a message";
                data.text = "Write a message";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Phiên đã hết hạn";
                data.text = "ĐỒNG Ý";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = -3;
                SettingTool.lang.list_sharevideowatch.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Facebook";
                data.text = "Facebook";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Trong nhóm";
                data.text = "Trong nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Share to a Group";
                data.text = "Share to a Group";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên một nhóm";
                data.text = "Chia sẻ lên một nhóm";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên một nhóm";
                data.text = "Chia sẻ lên một nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên một nhóm";
                data.text = "Chia sẻ lên một nhóm";
                data.node = "//node[contains(@class,'android.widget.ImageButton')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên nhóm";
                data.text = "Chia sẻ lên nhóm";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên nhóm";
                data.text = "Chia sẻ lên nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên nhóm";
                data.text = "Chia sẻ lên nhóm";
                data.node = "//node[contains(@class,'android.widget.ImageButton')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Share to a Group";
                data.text = "Share to a Group";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "ĐĂNG";
                data.text = "ĐĂNG";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Bạn viết gì";
                data.text = "Bạn viết gì";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Trong nhóm";
                data.text = "Trong nhóm";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);
                int max_click = 0;
            Lb_start:
                if (token.IsCancellationRequested)
                    return count;
                DetechModel kq = detechFunction(device, SettingTool.lang.list_sharevideowatch);

                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImages(device, list_detechimg);
                    if (kq_image.status)
                        kq = kq_image;
                }
                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            return count;
                        case -3:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                LoginPhienHetHan(u, acc, token);
                                break;
                            }
                        case 0:
                            return count;
                        case 1:
                            {
                                if (kq.text == "Trong nhóm" || kq.text == "Chia sẻ lên nhóm" || kq.text == "Chia sẻ lên một nhóm" || kq.text == "Share to a Group")
                                {
                                    ClickOnLeapdroidPosition(device, kq.point);
                                    if (checkContentLD(device, "không có nhóm| no group"))
                                        return count;
                                    else
                                    {
                                        if (checkContentLD(device, "Viết tin nhắn"))
                                        {
                                            List<DetechModel> list_sharecaption = new List<DetechModel>();
                                            data = new DetechModel();
                                            data.parent = "";
                                            data.content = "Viết tin nhắn…";
                                            data.text = "Viết tin nhắn…";
                                            data.node = "//node[contains(@class,'android.widget.EditText')]";
                                            data.function = 1;
                                            list_sharecaption.Add(data);
                                            DetechModel kqcaption = detechFunction(device, list_sharecaption);
                                            if (kqcaption.status)
                                            {
                                                ClickOnLeapdroidPosition(device, kqcaption.point);
                                                Delay(0.5);
                                            }
                                            if (string.IsNullOrEmpty(content))
                                            {
                                                PressOnLeapdroid_vietnamese(device, " ");
                                            }
                                            else
                                            {
                                                string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                                if (content_split.Count() > 0)
                                                {
                                                    for (int v = 0; v < content_split.Count(); v++)
                                                    {
                                                        PressOnLeapdroid_vietnamese(device, content_split[v]);
                                                        Delay(1);
                                                    }
                                                }
                                            }
                                        }
                                        else
                                            choosegroupnotbuttonshare(device, content);
                                    }
                                }
                                else
                                {
                                    if (kq.parent == "share")
                                    {
                                        List<string> list_text = new List<string>();
                                        list_text.Add("chia sẻ");
                                        List<Point> list_point = FindByXpathDescList(device, "//node[contains(@class,'android.widget.Button')]", list_text);
                                        if (list_point.Count > 0)
                                        {
                                            Point p = list_point[rd.Next(0, list_point.Count)];
                                            ClickOnLeapdroidPosition(device, p);
                                            scroll_up_short(device);
                                            count++;
                                            if (numgroup <= count)
                                            {
                                                back(device, 1);
                                                return count;
                                            }

                                        }
                                    }
                                    else
                                    {
                                        if (kq.parent == "đăng" || kq.parent == "post" || kq.parent == "clickShare")
                                        {
                                            ClickOnLeapdroidPosition(device, kq.point);
                                            count++;
                                            if (numgroup <= count)
                                            {
                                                back(device, 1);
                                                return count;
                                            }
                                            sroll = true;
                                            if (!fullscreen)
                                                functionOpenLink(device, "com.facebook.katana", link);

                                        }
                                        else if (kq.parent == "step1")
                                        {
                                            sroll = false;
                                            ClickOnLeapdroidPosition(device, kq.point);
                                            Delay(3);
                                            kq = detechFunction(device, lsbangtin);
                                            if (kq.status)
                                                ClickOnLeapdroidPosition(device, kq.point);
                                            else
                                            {
                                                List<string> list_text = new List<string>();
                                                list_text.Add("chia sẻ");
                                                list_text.Add("share");
                                                List<Point> list_point = FindByXpathDescList(device, "//node[contains(@class,'android.widget.Button')]", list_text);
                                                if (list_point.Count > 0)
                                                {
                                                    Point p = list_point[rd.Next(0, list_point.Count)];
                                                    ClickOnLeapdroidPosition(device, p);
                                                    scroll_up_short(device);
                                                    count++;
                                                    if (numgroup <= count)
                                                    {
                                                        return count;
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            ClickOnLeapdroidPosition(device, kq.point.X + 3, kq.point.Y + 3);
                                            max_click++;
                                            if (max_click > 20)
                                                return count;
                                            //if (kq.parent == "step1new")
                                            //    SettingTool.lang.list_sharevideowatch.Remove(kq);
                                            //scroll_up_mid(device);
                                        }

                                    }
                                }
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                Delay(1);
                                if (string.IsNullOrEmpty(content))
                                    content = " ";
                                string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int z = 0; z < content_split.Count(); z++)
                                    {
                                        PressOnLeapdroid_vietnamese(device, content_split[z]);
                                        Delay(1);
                                    }
                                }

                                break;
                            }

                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    if (sroll)
                        scroll_up_short(device);
                    i++;

                    if (i <= 5)
                    {
                        goto Lb_start;
                    }
                }
            }
            catch
            {
            }
            return count;
        }

        public int shareVideo2Group_pro(userLD u, Account acc, string content, int numgroup, int delay, CancellationToken token)
        {
            string device = acc.ldid;
            int count = 0;
            try
            {
                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
                DetechImageModel model = new DetechImageModel();
                model.img = PointDefault.img_sharevideo_buttonshare;
                model.name = "step1";
                model.function = 1;
                list_detechimg.Add(model);
                bool sroll = true;
                int i = 0;
                Random rd = new Random();

                DetechModel data = new DetechModel();
                data.parent = "step1";
                data.content = "Share Button";
                data.text = "Share";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Add(data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "POST";
                data.text = "POST";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Add(data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "Share";
                data.text = "Share";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "In a group";
                data.text = "In a group";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Bảng tin";
                data.text = "Bảng tin";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                List<DetechModel> lsbangtin = new List<DetechModel>();
                lsbangtin.Add(data);

                data = new DetechModel();
                data.parent = "step1new";
                data.content = "CHIA SẺ";
                data.text = "CHIA SẺ";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "step1new";
                data.content = "share";
                data.text = "share";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Hãy nói gì đó";
                data.text = "Hãy nói gì đó";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Write a message";
                data.text = "Write a message";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Phiên đã hết hạn";
                data.text = "ĐỒNG Ý";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = -3;
                SettingTool.lang.list_sharevideowatch.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Share to a Group";
                data.text = "Share to a Group";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên một nhóm";
                data.text = "Chia sẻ lên một nhóm";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên một nhóm";
                data.text = "Chia sẻ lên một nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên một nhóm";
                data.text = "Chia sẻ lên một nhóm";
                data.node = "//node[contains(@class,'android.widget.ImageButton')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên nhóm";
                data.text = "Chia sẻ lên nhóm";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên nhóm";
                data.text = "Chia sẻ lên nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Chia sẻ lên nhóm";
                data.text = "Chia sẻ lên nhóm";
                data.node = "//node[contains(@class,'android.widget.ImageButton')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Share to a Group";
                data.text = "Share to a Group";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Facebook";
                data.text = "Facebook";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Trong nhóm";
                data.text = "Trong nhóm";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "clickShare";
                data.content = "CHIA SẺ NGAY";
                data.text = "CHIA SẺ NGAY";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

                data = new DetechModel();
                data.parent = "clickShare";
                data.content = "share now";
                data.text = "share now";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Insert(0, data);

            Lb_start:
                DetechModel kq = detechFunction(device, SettingTool.lang.list_sharevideowatch);

                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImages(device, list_detechimg);
                    if (kq_image.status)
                        kq = kq_image;
                }
                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            return count;
                        case -3:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                LoginPhienHetHan(u, acc, token);
                                break;
                            }
                        case 0:
                            return count;
                        case 1:
                            {

                                if (kq.text == "Trong nhóm" || kq.text == "Chia sẻ lên một nhóm" || kq.text == "Share to a Group")
                                {
                                    ClickOnLeapdroidPosition(device, kq.point);
                                    if (checkContentLD(device, "không có nhóm| no group"))
                                        return count;
                                    else
                                    {
                                        if (checkContentLD(device, "Viết tin nhắn"))
                                        {
                                            List<DetechModel> list_sharecaption = new List<DetechModel>();
                                            data = new DetechModel();
                                            data.parent = "";
                                            data.content = "Viết tin nhắn…";
                                            data.text = "Viết tin nhắn…";
                                            data.node = "//node[contains(@class,'android.widget.EditText')]";
                                            data.function = 1;
                                            list_sharecaption.Add(data);
                                            DetechModel kqcaption = detechFunction(device, list_sharecaption);
                                            if (kqcaption.status)
                                            {
                                                ClickOnLeapdroidPosition(device, kqcaption.point);
                                                Delay(0.5);
                                            }
                                            if (string.IsNullOrEmpty(content))
                                            {
                                                PressOnLeapdroid_vietnamese(device, " ");
                                            }
                                            else
                                            {
                                                string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                                if (content_split.Count() > 0)
                                                {
                                                    for (int v = 0; v < content_split.Count(); v++)
                                                    {
                                                        PressOnLeapdroid_vietnamese(device, content_split[v]);
                                                        Delay(1);
                                                    }
                                                }
                                            }
                                        }
                                        else
                                            choosegroupnotbuttonshare(device, content);
                                    }
                                }
                                else
                                {
                                    if (kq.parent == "share")
                                    {
                                        List<string> list_text = new List<string>();
                                        list_text.Add("chia sẻ");
                                        List<Point> list_point = FindByXpathDescList(device, "//node[contains(@class,'android.widget.Button')]", list_text);
                                        if (list_point.Count > 0)
                                        {
                                            Point p = list_point[rd.Next(0, list_point.Count)];
                                            ClickOnLeapdroidPosition(device, p);
                                            scroll_up_short(device);
                                            count++;
                                            if (numgroup <= count)
                                            {
                                                back(device, 1);
                                                return count;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (kq.parent == "đăng" || kq.parent == "post" || kq.parent == "clickShare")
                                        {
                                            ClickOnLeapdroidPosition(device, kq.point);
                                            count++;
                                            if (numgroup <= count)
                                            {
                                                back(device, 1);
                                                return count;
                                            }

                                        }
                                        else if (kq.parent == "step1")
                                        {
                                            sroll = false;
                                            ClickOnLeapdroidPosition(device, kq.point);
                                            Delay(3);
                                            kq = detechFunction(device, lsbangtin);
                                            if (kq.status)
                                                ClickOnLeapdroidPosition(device, kq.point);
                                            else
                                            {
                                                List<string> list_text = new List<string>();
                                                list_text.Add("chia sẻ");
                                                list_text.Add("share");
                                                List<Point> list_point = FindByXpathDescList(device, "//node[contains(@class,'android.widget.Button')]", list_text);
                                                if (list_point.Count > 0)
                                                {
                                                    Point p = list_point[rd.Next(0, list_point.Count)];
                                                    ClickOnLeapdroidPosition(device, p);
                                                    scroll_up_short(device);
                                                    count++;
                                                    if (numgroup <= count)
                                                    {
                                                        return count;
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            ClickOnLeapdroidPosition(device, kq.point);
                                            //if (kq.parent == "step1new")
                                            //    SettingTool.lang.list_sharevideowatch.Remove(kq);
                                            //scroll_up_mid(device);
                                        }

                                    }
                                }
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                Delay(1);
                                if (string.IsNullOrEmpty(content))
                                    content = " ";
                                string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int z = 0; z < content_split.Count(); z++)
                                    {
                                        PressOnLeapdroid_vietnamese(device, content_split[z]);
                                        Delay(1);
                                    }
                                }

                                break;
                            }

                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    if (sroll)
                        scroll_up_short(device);
                    i++;

                    if (i <= 5)
                    {
                        goto Lb_start;
                    }
                }
            }
            catch
            {
            }
            return count;
        }



        public string scrollSharePost(userLD u, Account acc, string Intpt, string app, int minlike, int maxlike, string content, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            int dem = 0;
            int max = 0;
            // OpenLink(Intpt, app, "fb://watch"); //share tren newfeed ma`

            try
            {
                while (dem < luot)
                {
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }

                    int int_dem = rd.Next(5, 10);
                    while (int_dem > 0)
                    {
                        scroll_up(Intpt);
                        int_dem--;
                    }

                    if (SharePostIntoNewfeed(Intpt, FunctionHelper.method_Spin(content), token))
                    {
                        dem++;
                        u.setStatusResult(dem);
                        max = 0;
                    }
                    else
                    {
                        max++;
                        if (max > 3)
                            return "| Share post complete:" + dem.ToString() + "/" + luot.ToString();
                        else
                        {
                            if (check_Facebook_has_stopped(u, Intpt, acc, token) == false)
                            {
                                return "| Share post complete:" + dem.ToString() + "/" + luot.ToString();
                            }
                        }
                    }
                }
            }
            catch
            { }
            return "| Share post complete:" + dem.ToString() + "/" + luot.ToString();
        }

        public bool SharePostIntoNewfeed(string device, string content, CancellationToken token)
        {
            List<DetechModel> list_write = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data.parent = "post";
            data.content = "something";
            data.text = "something";
            data.node = "//node[contains(@class,'android.widget.EditText')]";
            data.function = 2;
            list_write.Add(data);
            SettingTool.lang.list_shareposttonewfeed.Add(data);

            data = new DetechModel();
            data.parent = "post";
            data.content = "gì đó";
            data.text = "gì đó";
            data.node = "//node[contains(@class,'android.widget.EditText')]";
            data.function = 2;
            list_write.Add(data);
            SettingTool.lang.list_shareposttonewfeed.Add(data);

            data = new DetechModel();
            data.parent = "post";
            data.content = "share now";
            data.text = "share now";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            SettingTool.lang.list_shareposttonewfeed.Add(data);
            data = new DetechModel();
            data.parent = "post";
            data.content = "chia sẻ";
            data.text = "chia sẻ";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            SettingTool.lang.list_shareposttonewfeed.Add(data);

            data = new DetechModel();
            data.parent = "post";
            data.content = "chia sẻ";
            data.text = "chia sẻ";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            SettingTool.lang.list_shareposttonewfeed.Add(data);
            List<string> list_content = new List<string>();
            int step = 0;
            bool hasShare = false;
        Lb_start:
            if (token.IsCancellationRequested)
                return false;
            DetechModel kq = detechFunction(device, SettingTool.lang.list_shareposttonewfeed);
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case -2:
                        {
                            return false;
                        }
                    case -1:
                        {
                            Thread.Sleep(5000);
                            break;
                        }
                    case 0:
                        {
                            back(device, 1);
                            break;
                        }
                    case 1:
                        {
                            if (kq.point.X == 0)
                            {
                                scroll_up_mid(device);
                                scroll_up_mid(device);
                                goto Lb_start;
                            }

                            if (kq.point.Y < 100)
                            {

                                scroll_up(device);
                                goto Lb_start;
                            }


                            ClickOnLeapdroidPosition(device, kq.point);
                            if (kq.parent == "post")
                                return true;
                            Delay(1);
                            hasShare = true;
                            break;
                        }
                    case 2:
                        {
                            DetechModel kqwrite = RunDetechFunction(device, list_write);
                            if (kqwrite.status)
                            {
                                ClickOnLeapdroidPosition(device, kqwrite.point);
                                Thread.Sleep(1000);
                                string[] content_split = SplitByLength(content, 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int i = 0; i < content_split.Count(); i++)
                                    {
                                        PressOnLeapdroid_vietnamese(device, content_split[i]);
                                        Delay(1);
                                    }
                                }
                                PressOnLeapdroid(device, " ");
                                Delay(1);
                            }
                            //ClickOnLeapdroidPosition(device, kq.point);
                            //return true;
                            break;
                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step <= 5)
                {
                    scroll_up_mid(device);
                    goto Lb_start;
                }
            }
            //het
            return false;
        }

        public string viewAddFriendbyContact(DataGridViewRow dr, string ldID, string app, int num, int delay, CancellationToken token)
        {
            try
            {

                List<DetechModel> list_detech = new List<DetechModel>();
                DetechModel done = new DetechModel();
                done.parent = "";
                done.content = "File phương tiện và danh bạ";
                done.text = "File phương tiện và danh bạ";
                done.node = "//node[contains(@class,'android.widget.TextView')]";
                done.function = 1;
                list_detech.Add(done);

                done = new DetechModel();
                done.parent = "";
                done.content = "Media and Contacts";
                done.text = "Media and Contacts";
                done.node = "//node[contains(@class,'android.widget.TextView')]";
                done.function = 1;
                list_detech.Add(done);

                done = new DetechModel();
                done.parent = "";
                done.content = "Continuous Contacts Upload";
                done.text = "Continuous Contacts Upload";
                done.node = "//node[contains(@class,'android.widget.TextView')]";
                done.function = 1;
                SettingTool.lang.list_AddContact.Add(done);

                done = new DetechModel();
                done.parent = "clickStart";
                done.content = "PEOPLE YOU MAY KNOW";
                done.text = "PEOPLE YOU MAY KNOW";
                done.node = "//node[contains(@class,'android.view.View')]";
                done.function = 3;
                SettingTool.lang.list_AddContact.Add(done);

                done = new DetechModel();
                done.parent = "clickStart";
                done.content = "Stop continuously uploading your contacts";
                done.text = "Turn Off";
                done.node = "//node[contains(@class,'android.widget.Button')]";
                done.function = 1;
                SettingTool.lang.list_AddContact.Add(done);


                int dem = 0;
                Delay(1);
                OpenLink(ldID, "com.facebook.katana", "fb://settings");

                for (int i = 0; i < 6; i++)
                {
                    scroll_up(ldID);
                    Thread.Sleep(200);
                }
                int k = 3;
                while (k > 0)
                {
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();

                    DetechModel kq_contact1 = detechFunction(ldID, list_detech, 2);
                    if (kq_contact1.status)
                    {
                        ClickOnLeapdroidPosition(ldID, kq_contact1.point);
                        break;
                    }
                    else
                    {
                        k--;
                        scroll_up(ldID);
                        Thread.Sleep(200);
                    }
                }
                int j = 5;
                while (j > 0)
                {
                    DetechModel kq_contact = RunDetechFunction(ldID, SettingTool.lang.list_AddContact);
                    if (kq_contact.status)
                    {
                        switch (kq_contact.function)
                        {
                            case 1:
                                ClickOnLeapdroidPosition(ldID, kq_contact.point);
                                break;
                            case 2:
                                ClickOnLeapdroidPosition(ldID, kq_contact.point.X + 15, kq_contact.point.Y);
                                break;
                            case 3:
                                goto Lb_Finish;
                        }

                    }
                    else
                    {
                        j--;
                        Delay(1);
                        if (j <= 0)
                        {
                            goto Finish;
                        }
                    }
                }
            Lb_Finish:
                #region bat dau addfriend
                try
                {
                    list_detech = new List<DetechModel>();
                    done = new DetechModel();
                    done.parent = "";
                    done.content = "Thêm bạn bè";
                    done.text = "Thêm bạn bè";
                    done.node = "//node[contains(@class,'android.widget.TextView')]";
                    done.function = 1;
                    list_detech.Add(done);

                    done = new DetechModel();
                    done.parent = "";
                    done.content = "Add Friend";
                    done.text = "Add Friend";
                    done.node = "//node[contains(@class,'android.widget.TextView')]";
                    done.function = 1;
                    list_detech.Add(done);

                    int i = 0;

                    List<DetechImageModel> list_img = new List<DetechImageModel>();
                    DetechImageModel im = new DetechImageModel();
                    im.img = Properties.Resources._3x_addfriend_contact;
                    im.name = "add friend";
                    im.function = 1;
                    list_img.Add(im);
                Lb_start:
                    DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechaddfriensuggest);

                    if (kq.status)
                    {
                        if (token.IsCancellationRequested)
                        {
                            goto Finish;
                        }
                        i = 0;
                        switch (kq.function)
                        {
                            case -1:
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    if (SettingTool.configld.language == "English")
                                        return "| Add Friend not complete";
                                    else

                                        return "| Add Friend Không hoàn thành";
                                }
                            case 1:
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    break;
                                }
                            case 2:
                                {
                                    List<DetechModel> list_kq = detechFunctionListPoint(ldID, list_detech);
                                    if (list_kq.Count > 0)
                                    {
                                        Random rd = new Random();
                                        ClickOnLeapdroidPosition(ldID, list_kq[rd.Next(0, list_kq.Count)].point);
                                    }
                                    else
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq.point);
                                    }

                                    dem++;
                                    dr.Cells["clSuccess"].Value = dem;
                                    scroll_up_slow(ldID);
                                    if (dem >= num)
                                    {
                                        goto Finish;
                                    }
                                    else
                                    {
                                        Delay(delay);
                                    }

                                    break;
                                }
                            default:
                                break;
                        }
                        goto Lb_start;
                    }
                    else
                    {
                        kq = detechFunctionCatchImages(ldID, list_img);
                        if (kq.status)
                        {
                            goto Finish;
                        }

                        i++;
                        if (i <= 5)
                        {
                            goto Lb_start;
                        }
                    }
                }
                catch
                { }
                #endregion

            Finish:
                activeNewfeed(ldID, app);
                return "Add Friend complete: " + dem.ToString() + "/" + num.ToString();
            }
            catch
            {
                return "| Add Friend complete: " + "0/" + num.ToString();
            }
        }

        public string bat_2fa(string ldID, Account acc, string app, CancellationToken token)
        {
            OpenLink(ldID, "com.facebook.katana", "fb://account_settings");
            //Point pt_menu = intoMenu(ldID);
            //if (pt_menu.X > 0)
            //    ClickOnLeapdroidPosition(ldID, pt_menu);
            //else
            //    return "Bật 2fa không hoàn thành";
            Delay(5);
            //scroll_up(ldID);
            //scroll_up_mid(ldID);

            try
            {
                int step = 0;
                bool hasQr = false;
                int max_click = 0;
                int max_input = 0;
                step = 0;
                string qr_code = "";
                List<DetechImageModel> list_detech2fa = new List<DetechImageModel>();

                DetechImageModel detechimg = new DetechImageModel();
                detechimg.name = "input2fa";
                detechimg.function = 2;
                detechimg.img = PointDefault.img_2fa_input;
                list_detech2fa.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "2fa";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_2fa_2yeuto;
                list_detech2fa.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "setupaccount";
                detechimg.function = 1;
                detechimg.img = Properties.Resources._1_setupaccount;
                list_detech2fa.Add(detechimg);


                detechimg = new DetechImageModel();
                detechimg.name = "setupaccount";
                detechimg.function = 1;
                detechimg.img = Properties.Resources.sudung2yeuto;
                list_detech2fa.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "setupaccount";
                detechimg.function = 1;
                detechimg.img = Properties.Resources.caidat;
                list_detech2fa.Add(detechimg);

                int int_tieptuc = 0;
                bool has_menu = false;
                int inputpassMax = 0;
            Lb_start:
                // checkScreen2(ldID);
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                DetechModel kq = new DetechModel();

                kq = detechFunctionCatchImages(ldID, list_detech2fa);
                if (!kq.status)
                    kq = detechFunction(ldID, SettingTool.lang.list_2fa);

                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case -1:
                            {
                                return kq.content;

                            }
                        case 1:
                            {
                                max_click++;
                                if (max_click > 30)
                                    return "Bật 2fa không hoàn thành";
                                if (kq.content == "quyền riêng tư")
                                {
                                    if (has_menu == false)
                                    {
                                        has_menu = true;
                                        ClickOnLeapdroidPosition(ldID, kq.point);
                                    }
                                    else
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq.point2.X, kq.point2.Y);
                                        Delay(1);
                                    }
                                    break;
                                }
                                else
                                    ClickOnLeapdroidPosition(ldID, kq.point);

                                Delay(1);

                                if ((kq.content == "tiếp tục" || kq.content == "Continue") & !hasQr)
                                {
                                    Delay(3);
                                    Bitmap screen_qr = ScreenShoot(ldID);
                                    MessagingToolkit.QRCode.Codec.QRCodeDecoder decoder = new MessagingToolkit.QRCode.Codec.QRCodeDecoder();
                                    qr_code = decoder.Decode(new QRCodeBitmapImage((Bitmap)screen_qr));
                                    qr_code = FunctionHelper.smethod_6(qr_code, qr_code.IndexOf("secret=") + 7, "&");
                                    hasQr = true;

                                }

                                else if (kq.content == "Hoàn tất" || kq.content == "finish" || kq.content == "Done" || kq.content == "Xong")
                                {
                                    Delay(2);
                                    Data data = new Data();
                                    RequestParams para = new RequestParams();
                                    para["privatekey"] = qr_code;
                                    RequestParams where = new RequestParams();
                                    where["Id_account"] = acc.Id_account;
                                    data.update(para, "Account", where);
                                    activeNewfeed(ldID, "com.facebook.katana");
                                    return "Bật 2fa hoàn thành";
                                }
                                else if (kq.parent == "step1")
                                {
                                    DetechModel menusetup = detechFunctionCatchImages(ldID, list_detech2fa);
                                    if (menusetup.status)
                                        ClickOnLeapdroidPosition(ldID, menusetup.point);
                                }
                                else if (kq.parent == "2fa")
                                {
                                    scroll_up_2short(ldID);
                                }
                                else if (kq.content == "tiếp tục")
                                {
                                    if (int_tieptuc < 7)
                                    {
                                        int_tieptuc++;
                                    }
                                    else
                                    {
                                        return "Bật 2fa không hoàn thành";
                                    }
                                }
                                Delay(1);
                                break;
                            }
                        case 2:
                            {
                                max_input++;
                                if (max_input > 15)
                                    return "Bật 2fa không hoàn thành";

                                ClickOnLeapdroidPosition(ldID, kq.point.X + 10, kq.point.Y + 5);
                                Thread.Sleep(2000);
                                if (kq.parent == "inputPass")
                                {
                                    inputpassMax++;
                                    if (inputpassMax > 3)
                                        return "Bật 2fa không hoàn thành";
                                    PressOnLeapdroid_vietnamese(ldID, acc.Password.Trim());
                                    Delay(1);

                                    DetechModel kq_continue = RunDetechFunction(ldID, SettingTool.lang.list_2fa);
                                    if (kq_continue.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq_continue.point);
                                        int_tieptuc = 1;
                                    }

                                }
                                else
                                {
                                    CustomerController control = new CustomerController();
                                    TwoFaModel model = control.getCodeTwofa(acc.id.Trim(), qr_code);
                                    if (string.IsNullOrEmpty(model.message) == false)
                                    {
                                        PressOnLeapdroid(ldID, model.message);

                                    }
                                }

                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    Delay(15);
                    scroll_up_2short(ldID);
                    step++;
                    if (step <= 13)
                    {
                        goto Lb_start;
                    }
                }
            }
            catch
            { }
            return "Bật 2fa không hoàn thành";
        }
        public string addEmail10phut(string ldID, Account acc, string app, CancellationToken token)
        {
            OpenLink(ldID, "com.facebook.katana", "fb://account_settings");
            Delay(3);
            try
            {
                List<DetechModel> list_addemail = new List<DetechModel>();
                DetechModel done = new DetechModel();
                done.parent = "";
                done.content = "Cài đặt tài khoản";
                done.text = "Cài đặt tài khoản";
                done.node = "//node[contains(@class,'android.widget.TextView')]";
                done.function = 1;
                list_addemail.Add(done);

                done = new DetechModel();
                done.parent = "";
                done.content = "Địa chỉ email";
                done.text = "Địa chỉ email";
                done.node = "//node[contains(@class,'android.view.View')]";
                done.function = 1;
                list_addemail.Add(done);

                done = new DetechModel();
                done.parent = "";
                done.content = "Thêm địa chỉ email";
                done.text = "Thêm địa chỉ email";
                done.node = "//node[contains(@class,'android.view.View')]";
                done.function = 1;
                list_addemail.Add(done);

                DetechModel datafa = new DetechModel();
                datafa.parent = "inputEmail";
                datafa.content = "";
                datafa.text = "";
                datafa.node = "//node[contains(@class,'android.widget.EditText')]";
                datafa.function = 2;
                list_addemail.Add(datafa);

                datafa = new DetechModel();
                datafa.parent = "";
                datafa.content = "Xong";
                datafa.text = "Xong";
                datafa.node = "//node[contains(@class,'android.view.View')]";
                datafa.function = 1;
                list_addemail.Add(datafa);
                int step = 0;
                YahooController yahoo = new YahooController();
                string domain = yahoo.getDomain();
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(ldID, list_addemail);

                if (kq.status)
                {
                    switch (kq.function)
                    {
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                break;
                            }
                        case 2:
                            {

                                ClickOnLeapdroidPosition(ldID, kq.point.X + 10, kq.point.Y + 5);
                                Thread.Sleep(1000);
                                if (kq.parent == "inputEmail")
                                {

                                    string youremail = "nj" + FunctionHelper.RandomString1(10) + domain;
                                    PressOnLeapdroid_vietnamese(ldID, acc.Password.Trim());
                                    Delay(1);
                                    SettingTool.lang.list_2fa.Remove(datafa);
                                    DetechModel kq_continue = RunDetechFunction(ldID, SettingTool.lang.list_2fa);
                                    if (kq_continue.status)
                                        ClickOnLeapdroidPosition(ldID, kq_continue.point);
                                }


                                Delay(1);
                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    Delay(3);
                    scroll_up_short(ldID);
                    step++;
                    if (step <= 5)
                    {
                        goto Lb_start;
                    }
                }
            }
            catch
            { }


            return "Thêm email không thành công";
        }
        public string likecommentID(userLD u, Account acc, DataGridViewRow dr, string ldID, string app, int numlike, int numcommet, bool like, bool comment, List<string> lsID, string lsComment, int typeID, int delay, bool checkIdExit, CancellationToken token, int maxfail = 7, bool ckluot = false, int numluot = 1)
        {
            string message = "";
            List<GroupFB> ls_group = new List<GroupFB>();
            LDController controler = new LDController();
            List<string> ls_group_join = new List<string>();
            List<string> ls_group_match = new List<string>();
            if (checkIdExit & typeID == 2)
            {
                string access_token = controler.getToken(acc);
                Profile_Controller profile = new Profile_Controller();
                ls_group = profile.LoadInfoGroup(access_token, "", acc, null);

                if (ls_group.Count == 0)
                {
                    return "Chưa tham gia group nào hoặc sự cố lấy thông tin group";
                }

                foreach (GroupFB group in ls_group)
                {
                    ls_group_join.Add(group.id);
                }
                foreach (string gr in lsID)
                {
                    if (ls_group_join.Contains(gr))
                        ls_group_match.Add(gr);
                }
                if (ls_group_match.Count > 0)
                    lsID = ls_group_match;
                else
                    return "Chưa tham gia group nào trong list Id";
            }

            try
            {
                for (int i = 0; i < lsID.Count; i++)
                {
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    string result = "";

                    if (typeID == 1)
                        result = OpenLink(ldID, app, "fb://profile/" + lsID[i]);
                    else if (typeID == 2)
                        result = OpenLink(ldID, app, "fb://group/" + lsID[i]);
                    else
                    {
                        result = OpenLink(ldID, app, "fb://page/" + lsID[i]);
                        Delay(1);
                        scroll_up(ldID);
                        Delay(0.3);
                        scroll_up(ldID);
                        Delay(0.3);
                        scroll_up(ldID);
                        Delay(0.3);
                        scroll_up(ldID);
                        Delay(0.5);
                        scroll_up(ldID);

                    }
                    Delay(5);
                    if (!result.Contains("Error"))
                    {
                        dr.Cells["Message"].Value = "Lướt newfeed: " + lsID[i];
                        if (ckluot)
                        {
                            for (int n = 0; n < numluot; n++)
                            {
                                if (token.IsCancellationRequested)
                                {
                                    token.ThrowIfCancellationRequested();
                                }
                                scroll_up(ldID);
                                Delay(1);
                            }
                        }
                        dr.Cells["Message"].Value = "Tương tác ID: " + lsID[i];
                        message += scrollLikeCommentID(u, acc, ldID, app, numlike, numcommet, like, comment, lsComment, lsID[i], token, maxfail, delay);
                    }
                    dr.Cells["Message"].Value = "Delay " + delay.ToString() + " giây chuyển ID";
                    Delay(delay);
                }
                activeNewfeed(ldID, app);
            }
            catch
            {
            }
            return message;
        }
        private string scrollLikeCommentID(userLD u, Account acc, string device, string app, int numLike, int numComment, bool like, bool comment, string content, string gid, CancellationToken token, int maxfail = 7, int numdelay = 1)
        {
            int dem = 0;
            int max = 0;
            string mess = "";
            try
            {
                if (checkContentLD(device, "Trang này chưa thể hiển thị ngay", 3))
                    return " |" + gid + " Trang này chưa thể hiển thị";
                if (like & !comment)
                {
                    while (dem < numLike)
                    {
                        if (token.IsCancellationRequested)
                            token.ThrowIfCancellationRequested();
                        u.setStatus(device, "Like Group ID complete:" + dem.ToString() + "/" + numLike.ToString());
                        scroll_up_random(device, token);
                        if (likePost(acc, device, token))
                        {
                            dem++;
                            u.setStatus(device, "Like Group ID complete:" + dem.ToString() + "/" + numLike.ToString());
                            max = 0;

                        }
                        else
                            max++;
                        if (max >= maxfail)
                            break;
                    }
                    mess += "|" + gid + " like complete:" + dem.ToString() + "/" + numLike.ToString();

                }

                else if (!like & comment)
                {
                    while (dem < numComment)
                    {
                        if (token.IsCancellationRequested)
                            token.ThrowIfCancellationRequested();
                        scroll_up_random(device, token);
                        u.setStatus(device, "Comment Group ID complete:" + dem.ToString() + "/" + numComment.ToString());
                        if (commentPostGroup(u, acc, device, FunctionHelper.method_Spin(content), token))
                        {
                            dem++;
                            u.setStatus(device, "Comment Group ID complete:" + dem.ToString() + "/" + numComment.ToString());
                            max = 0;
                            Delay(numdelay);
                            back(device, 2);
                        }
                        else
                            max++;
                        if (max >= maxfail)
                            break;
                    }
                    mess += "|" + gid + " comment complete:" + dem.ToString() + "/" + numComment.ToString();
                }

                else
                {
                    int count_like = 0;
                    bool not_found = true;
                    while (true)
                    {
                        if (token.IsCancellationRequested)
                            token.ThrowIfCancellationRequested();
                        not_found = true;
                        scroll_up(device);

                        if (count_like < numLike)
                        {
                            u.setStatus(device, "Like Group ID complete:" + count_like.ToString() + "/" + numLike.ToString());
                            if (likePost(acc, device, token))
                            {
                                count_like++;
                                u.setStatus(device, "Like Group ID complete:" + count_like.ToString() + "/" + numLike.ToString());
                                Delay(1);
                                max = 0;
                                not_found = false;
                            }
                        }

                        if (dem < numComment)
                        {
                            u.setStatus(device, "Comment Group ID complete:" + dem.ToString() + "/" + numComment.ToString());
                            if (commentPostGroup(u, acc, device, FunctionHelper.method_Spin(content), token))
                            {
                                dem++;
                                u.setStatus(device, "Comment Group ID complete:" + dem.ToString() + "/" + numComment.ToString());
                                max = 0;
                                back(device, 2);
                                not_found = false;
                            }
                        }
                        if (count_like >= numLike & dem >= numComment)
                            break;
                        else
                        {
                            if (not_found)
                            {
                                max++;
                                if (max >= maxfail)
                                    break;
                            }

                        }

                    }
                    mess += "|" + gid + " compelte: like " + count_like.ToString() + "/" + numLike.ToString() + " comment " + dem.ToString() + "/" + numComment.ToString();
                }
            }
            catch
            { }
            return mess;
        }
        public string PostImagesGroup(userLD u, Account acc, string ldID, string content, List<string> list_file, CancellationToken token, bool removepic = true)
        {
            List<string> list_photo = new List<string>();
            List<string> list_photoCopy = new List<string>();
            string cmd = "";

            try
            {
                if (list_file.Count > 0)
                {

                    string path = string.Format("c:\\test\\{0}\\pictures\\temp\\", ldID);
                    List<string> list_pic = System.IO.Directory.GetFiles(path, "*.jpg").ToList();
                    foreach (string str in list_pic)
                    {
                        try
                        {
                            File.Delete(str);
                        }
                        catch
                        { }
                    }
                    if (SettingTool.configld.versionld == "3.x")
                    {
                        deleteFolder2(ldID, "/storage/emulated/legacy/pictures/temp");
                        createFolder2(ldID, "/storage/emulated/legacy/pictures/temp");
                        runAdb(ldID, "shell  rm -r storage/emulated/legacy/launcher/ad");//delete
                    }
                    else
                    {
                        deleteFolder2(ldID, "/storage/emulated/0/dcim");
                        createFolder2(ldID, "/storage/emulated/0/dcim");
                    }

                    foreach (string filePath in list_file)
                    {
                        string fileName = Path.GetFileName(filePath);
                        string filePathCopy = path + fileName;
                        System.IO.File.Copy(filePath, filePathCopy);
                        list_photo.Add(filePathCopy);

                    }
                    cmd = "shell am broadcast -a android.intent.action.MEDIA_MOUNTED -d file:///storage/emulated/0/dcim";
                    runAdb(ldID, cmd);

                }

                int step = 0;

                bool postVideo = false;

                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
                DetechImageModel detechimg = new DetechImageModel();
                detechimg.name = "postimage";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_group_postimg;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "postimage";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_group_postimg_en;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "postThaoluan";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_group_thaoluan;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "postimage";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_group_postimg_new;
                list_detechimg.Add(detechimg);

                DetechModel data = new DetechModel();
                data.parent = "";
                data.content = "Nói gì đó";
                data.text = "Nói gì đó";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 3;
                SettingTool.lang.list_detechpost.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Discussion";
                data.text = "Discussion";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_detechpost.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Bắt đầu cuộc thảo";
                data.text = "Bắt đầu cuộc thảo";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 3;
                SettingTool.lang.list_detechpost.Add(data);

            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechpost);

                if (kq.status == false)
                {
                    DetechModel kq_image = detechFunctionCatchImages(ldID, list_detechimg);

                    if (kq_image.status)
                        kq = kq_image;
                }

                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case -1:
                            {
                                Thread.Sleep(5000);
                                break;
                            }
                        case 0:
                            {
                                back(ldID, 1);
                                break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                if (kq.parent == "gia")
                                    PressOnLeapdroid(ldID, "1");
                                if (kq.parent == "tieude")
                                    PressOnLeapdroid(ldID, "Sale");
                                if (kq.parent == "mota")
                                {
                                    string[] content_split = SplitByLength(content, 150);
                                    if (content_split.Count() > 0)
                                    {
                                        for (int i = 0; i < content_split.Count(); i++)
                                        {
                                            PressOnLeapdroid_vietnamese(ldID, content_split[i]);
                                            Delay(1);
                                        }
                                    }
                                    PressEnter(ldID);
                                }

                                if (kq.parent == "finish")
                                {
                                    List<string> ls_desc = new List<string>();
                                    ls_desc.Add("ProgressBar");
                                    if (checkListContent(ldID, ls_desc) != null)
                                    {
                                        Delay(6);
                                    }
                                    if (SettingTool.configld.language == "English")
                                        return "Post successful!";
                                    else
                                        return "Đăng bài thành công";
                                }
                                Delay(1);
                                break;
                            }
                        case 2:
                            {
                                List<Point> ls_point = new List<Point>();
                                List<Point> ls_point_button = new List<Point>();
                                List<string> ls_desc = new List<string>();
                                ls_desc.Add("ảnh");
                                ls_desc.Add("Video");
                                ls_point = FindByXpathDescList(ldID, "//node[contains(@class,'android.view.View')]", ls_desc);
                                if (ls_point.Count() == 0)
                                    ls_point_button = FindByXpathDescList(ldID, "//node[contains(@class,'android.widget.FrameLayout')]", ls_desc);

                                if (ls_point.Count > 0)
                                {
                                    ls_point = ls_point.GroupBy(item => new { item.X, item.Y }).Select(group => group.First()).ToList();

                                    for (int i = 0; i < ls_point.Count; i++)
                                    {
                                        ClickOnLeapdroidPosition(ldID, ls_point[i]);
                                        Delay(0.3);
                                    }
                                }
                                else if (ls_point_button.Count > 0)
                                {
                                    for (int i = 0; i < ls_point_button.Count; i++)
                                    {
                                        ClickOnLeapdroidPosition(ldID, ls_point_button[i]);
                                    }
                                }

                                //// point video
                                //List<Point> ls_point_video = new List<Point>();

                                //ls_point_video = FindByXpathTree(ldID, "//node[contains(@class,'androidx.recyclerview.widget.RecyclerView')]", "//node[contains(@class,'android.widget.FrameLayout')]");
                                //if (ls_point_video.Count > 0)
                                //{
                                //    postVideo = true;
                                //    for (int i = 0; i < ls_point_video.Count; i++)
                                //    {
                                //        ClickOnLeapdroidPosition(ldID, ls_point_video[i]);
                                //    }
                                //}
                                break;
                            }
                        case 3:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                string[] content_split = SplitByLength(content, 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int i = 0; i < content_split.Count(); i++)
                                    {
                                        PressOnLeapdroid_vietnamese(ldID, content_split[i]);
                                        Delay(1);
                                    }
                                }
                                PressEnter(ldID);

                                Delay(1);
                                step = 0;
                            Lb_Send:
                                DetechModel kqsend = detechFunction(ldID, SettingTool.lang.list_buttonpost);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    Thread.Sleep(5000);
                                    if (removepic)
                                    {
                                        foreach (string pathPhoto in list_photo)
                                        {
                                            File.Delete(pathPhoto);
                                        }
                                    }
                                    List<string> ls_desc = new List<string>();
                                    ls_desc.Add("đang được tải lên");

                                    while (checkListContent(ldID, ls_desc) != null)
                                    {
                                        Delay(10);
                                    }

                                    if (postVideo)
                                        Delay(15);

                                    if (SettingTool.configld.language == "English")
                                        return "Post successful!";
                                    else
                                        return "Đăng bài thành công";
                                }
                                else
                                {
                                    step++;
                                    if (step <= 5)
                                        goto Lb_Send;
                                }

                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    step++;
                    if (step <= 5)
                    {
                        if (check_Facebook_has_stopped(u, ldID, acc, token) == false)
                        {
                            return " Đăng bài lỗi";
                        }
                        goto Lb_start;
                    }

                }
            }
            catch
            { }
            if (SettingTool.configld.language == "English")
                return "Post fail!";
            else

                return " Đăng bài lỗi";
        }
        public string PostImagesGroup(string ldID, string app, string content, List<string> list_file, int numPhoto, CancellationToken token, bool removepic = true)
        {
            List<string> list_photo = new List<string>();
            List<string> list_photoCopy = new List<string>();
            string cmd = "";
            app = "com.facebook.katana";
            Delay(3);
            try
            {
                if (list_file.Count > 0)
                {

                    string path = string.Format("c:\\test\\{0}\\pictures\\temp\\", ldID);
                    List<string> list_pic = System.IO.Directory.GetFiles(path, "*.jpg").ToList();
                    foreach (string str in list_pic)
                    {
                        try
                        {
                            File.Delete(str);
                        }
                        catch
                        { }
                    }
                    if (SettingTool.configld.versionld == "3.x")
                    {
                        deleteFolder2(ldID, "/storage/emulated/legacy/pictures/temp");
                        createFolder2(ldID, "/storage/emulated/legacy/pictures/temp");
                        runAdb(ldID, "shell  rm -r storage/emulated/legacy/launcher/ad");//delete
                    }
                    else
                    {
                        deleteFolder2(ldID, "/storage/emulated/0/dcim");
                        createFolder2(ldID, "/storage/emulated/0/dcim");
                    }

                    for (int i = 0; i < numPhoto; i++)
                    {
                        if (list_file.Count > 0)
                        {
                            Random rd = new Random();
                            string filePath = list_file[rd.Next(0, list_file.Count)];
                            list_photo.Add(filePath);
                            list_file.Remove(filePath);
                            string fileName = Path.GetFileName(filePath);

                            string filePathCopy = path + fileName;
                            System.IO.File.Copy(filePath, filePathCopy);
                            list_photoCopy.Add(filePathCopy);

                            if (SettingTool.configld.versionld == "3.x")
                            {
                                // cmd = string.Format(" shell mv -i storage/emulated/legacy/pictures/temp/{0} sdcard/dcim/", fileNameCopy);

                            }
                            else
                                cmd = string.Format(" shell mv -i storage/emulated/0/pictures/temp/{0} sdcard/dcim/", fileName);
                            //string output = runAdb(ldID, cmd);

                            //runAdb(ldID, String.Format("shell am broadcast -a android.intent.action.MEDIA_SCANNER_SCAN_FILE -d file:////storage/emulated/0/dcim/{0}", fileNameCopy));
                            /// list_photo.Add(filePath);
                        }
                        else
                            break;

                    }
                    cmd = "shell am broadcast -a android.intent.action.MEDIA_MOUNTED -d file:///storage/emulated/0/dcim";
                    runAdb(ldID, cmd);
                    ////xoa file o folder test
                    //foreach (string file in list_photoCopy)
                    //{
                    //    System.IO.File.Delete(file);
                    //}
                }

                int step = 0;

                bool postVideo = false;

                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
                DetechImageModel detechimg = new DetechImageModel();
                detechimg.name = "postimage";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_group_postimg;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "postimage";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_group_postimg_en;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "postimage";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_group_postimg_new;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "postThaoluan";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_group_thaoluan;
                list_detechimg.Add(detechimg);

                DetechModel data = new DetechModel();
                data.parent = "";
                data.content = "Nói gì đó";
                data.text = "Nói gì đó";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 3;
                SettingTool.lang.list_detechpost.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Discussion";
                data.text = "Discussion";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_detechpost.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Đã hiểu";
                data.text = "Đã hiểu";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_detechpost.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Gallery";
                data.text = "Gallery";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 2;
                SettingTool.lang.list_detechpost.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "next";
                data.text = "next";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                SettingTool.lang.list_detechpost.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Bạn viết gì đi";
                data.text = "Bạn viết gì đi";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_detechpost.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Ảnh/Video";
                data.text = "Ảnh/Video";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_detechpost.Insert(0, data);

                int max = 0;
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechpost);


                if (kq.status == false || kq.desc == "phát trực tiếp")
                {
                    kq = detechFunctionCatchImages(ldID, list_detechimg);

                }

                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case -1:
                            {
                                Thread.Sleep(5000);
                                break;
                            }
                        case 0:
                            {
                                back(ldID, 1);
                                break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                if (kq.parent == "finish")
                                {
                                    List<string> ls_desc = new List<string>();
                                    ls_desc.Add("ProgressBar");
                                    if (checkListContent(ldID, ls_desc) != null)
                                    {
                                        Delay(6);
                                    }

                                    if (SettingTool.configld.language == "English")
                                        return "Post successful!";
                                    else
                                        return " Đăng bài thành công";
                                }
                                max++;
                                if (max > 15)
                                    return " Đăng bài không thành công";
                                // Delay(1);
                                break;
                            }
                        case 2:
                            {
                                List<Point> ls_point = new List<Point>();
                                List<Point> ls_point_button = new List<Point>();
                                List<string> ls_desc = new List<string>();
                                ls_desc.Add("ảnh");
                                ls_desc.Add("photo");
                                ls_desc.Add("Video");
                                ls_point = FindByXpathDescList(ldID, "//node[contains(@class,'android.view.View')]", ls_desc);
                                if (ls_point.Count() == 0)
                                    ls_point_button = FindByXpathDescList(ldID, "//node[contains(@class,'android.widget.FrameLayout')]", ls_desc);

                                if (ls_point.Count > 0)
                                {
                                    ls_point = ls_point.GroupBy(item => new { item.X, item.Y }).Select(group => group.First()).ToList();
                                    for (int i = 0; i < ls_point.Count; i++)
                                    {
                                        ClickOnLeapdroidPosition(ldID, ls_point[i]);
                                        Delay(1);
                                    }
                                }
                                else if (ls_point_button.Count > 0)
                                {
                                    for (int i = 0; i < ls_point_button.Count; i++)
                                    {
                                        ClickOnLeapdroidPosition(ldID, ls_point_button[i]);
                                    }
                                }

                                if (checkContent(ldID, "Bạn không có bất kỳ ảnh"))
                                    return "Bạn không có ảnh. Đăng bài không thành công";

                                // point video
                                //List<Point> ls_point_video = new List<Point>();

                                //ls_point_video = FindByXpathTree(ldID, "//node[contains(@class,'androidx.recyclerview.widget.RecyclerView')]", "//node[contains(@class,'android.widget.FrameLayout')]");
                                //if (ls_point_video.Count > 0)
                                //{
                                //    postVideo = true;
                                //    for (int i = 0; i < ls_point_video.Count; i++)
                                //    {
                                //        ClickOnLeapdroidPosition(ldID, ls_point_video[i]);
                                //    }
                                //}

                                break;
                            }
                        case 3:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                string[] content_split = SplitByLength(content, 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int i = 0; i < content_split.Count(); i++)
                                    {
                                        PressOnLeapdroid_vietnamese(ldID, content_split[i]);
                                        Delay(1);
                                    }
                                }
                                PressEnter(ldID);
                                //   Delay(1);
                                step = 0;
                            Lb_Send:
                                DetechModel kqsend = detechFunction(ldID, SettingTool.lang.list_buttonpost);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    Thread.Sleep(5000);
                                    if (removepic)
                                    {
                                        foreach (string pathPhoto in list_photo)
                                        {
                                            File.Delete(pathPhoto);
                                        }
                                    }
                                    List<string> ls_desc = new List<string>();
                                    ls_desc.Add("đang được tải lên");

                                    while (checkListContent(ldID, ls_desc) != null)
                                    {
                                        Delay(10);
                                    }

                                    if (postVideo)
                                        Delay(15);

                                    if (SettingTool.configld.language == "English")
                                        return "Post successful!";
                                    else
                                        return " Đăng bài thành công";
                                }
                                else
                                {
                                    step++;
                                    if (step <= 5)
                                        goto Lb_Send;
                                }

                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    step++;
                    if (step <= 5)
                    {
                        goto Lb_start;
                    }

                }
            }
            catch
            { }
            if (SettingTool.configld.language == "English")
                return "Post fail!";
            else
                return " Đăng bài không thành công";
        }
        public bool checkAppCurrentMess(Account acc)
        {
            string path = string.Format("{0}\\LD\\{1}_mess.ninja", Application.StartupPath, acc.ldid);
            if (File.Exists(path))
            {
                try
                {
                    string uid = File.ReadAllText(path);
                    if (uid == acc.Id_account.ToString())
                    {
                        return true;
                    }
                    else
                    {
                        if (string.IsNullOrEmpty(uid) == false)
                        {
                            backupAccountMess(acc.ldid, "accMess" + uid);

                        }
                    }
                }
                catch { }
            }
            return false;
        }
        public void backupAccountMess(string ldID, string folder)
        {
            try
            {
                killApp(ldID, "com.facebook.orca");
                deleteFolder(ldID, folder);
                string cmd = String.Format("shell mv data/data/com.facebook.orca data/data/android/{0} && shell mkdir data/data/com.facebook.orca", folder);
                string html = runAdb(ldID, cmd);
            }
            catch { }
        }
        public void restoreAccountMess(string ldID, Account acc)
        {
            try
            {
                killApp(ldID, "com.facebook.orca");
                deleteFolderFacebook(ldID, "com.facebook.orca");
                string cmd = String.Format("shell mv data/data/android/{0} data/data/com.facebook.orca", "accMess" + acc.Id_account);
                string html = runAdb(ldID, cmd);
                File.WriteAllText(String.Format("{0}\\LD\\{1}_mess.ninja", Application.StartupPath, ldID), acc.Id_account.ToString());
                if (html.Contains("No such file or directory"))
                {
                    createFolder(ldID, "com.facebook.orca");
                }

            }
            catch { }
        }
        public bool loginMess(Account acc, CancellationToken token)
        {
            int i = 0;
            try
            {
                DetechModel modelde = new DetechModel();
                modelde.parent = "b6";
                modelde.content = "Find your phone contacts";
                modelde.text = "TURN ON";
                modelde.node = "//node[contains(@class,'android.view.View')]";
                modelde.function = 1;
                SettingTool.lang.list_openMess.Add(modelde);

                modelde = new DetechModel();
                modelde.parent = "";
                modelde.content = "Cho phép Messenger truy cập";
                modelde.text = "Cho phép";
                modelde.node = "//node[contains(@class,'android.widget.Button')]";
                modelde.function = 1;
                SettingTool.lang.list_openMess.Add(modelde);

                modelde = new DetechModel();
                modelde.parent = "";
                modelde.content = "Cho phép Messenger truy cập";
                modelde.text = "Cho phép";
                modelde.node = "//node[contains(@class,'android.widget.Button')]";
                modelde.function = 1;
                SettingTool.lang.list_openMess.Add(modelde);

                modelde = new DetechModel();
                modelde.parent = "";
                modelde.content = "TIẾP TỤC DƯỚI TÊN";
                modelde.text = "TIẾP TỤC DƯỚI TÊN";
                modelde.node = "//node[contains(@class,'android.view.View')]";
                modelde.function = 1;
                SettingTool.lang.list_openMess.Insert(0, modelde);

                modelde = new DetechModel();
                modelde.parent = "";
                modelde.content = "Chat";
                modelde.text = "Chat";
                modelde.node = "//node[contains(@class,'android.view.View')]";
                modelde.function = 3;
                SettingTool.lang.list_openMess.Add(modelde);

                modelde = new DetechModel();
                modelde.parent = "FbStop";
                modelde.content = "Mở lại ứng dụng";
                modelde.text = "Mở lại ứng dụng";
                modelde.node = "//node[contains(@class,'android.widget.Button')]";
                modelde.function = 1;
                SettingTool.lang.list_openMess.Add(modelde);

                modelde = new DetechModel();
                modelde.parent = "closeFb";
                modelde.content = "Đóng ứng dụng";
                modelde.text = "Đóng ứng dụng";
                modelde.node = "//node[contains(@class,'android.widget.Button')]";
                modelde.function = -2;
                SettingTool.lang.list_openMess.Add(modelde);


            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(acc.ldid, SettingTool.lang.list_openMess);
                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -2:
                            {
                                if (kq.parent == "closeFb")
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    deleteFolderFacebook(acc.ldid, "com.facebook.orca");
                                    createFolder(acc.ldid, "com.facebook.orca");
                                    runApp(acc.ldid, "com.facebook.orca");
                                }
                                break;
                            }
                        case -1:
                            {
                                acc.Thongbao = kq.text;
                                return false;
                            }
                        case 0:
                            {
                                back(acc.ldid, 1);
                                break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);

                                if (kq.parent == "2fa")
                                {
                                    runAdb(acc.ldid, "shell input keyevent 66");
                                    CustomerController control = new CustomerController();
                                    TwoFaModel model = control.getCodeTwofa(acc.email.Trim(), acc.privatekey);
                                    if (string.IsNullOrEmpty(model.message) == false)
                                    {
                                        for (int n = 0; n < model.message.Length; n++)
                                            PressOnLeapdroid(acc.ldid, model.message.Substring(n, 1));
                                    }
                                    else
                                    {
                                        acc.TrangThai = "Authentication Error";
                                        return false;
                                    }
                                }
                                Delay(1);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                if (kq.parent == "b2")
                                {
                                    if (acc.email != "")
                                        PressOnLeapdroid(acc.ldid, acc.email.Trim());
                                    else
                                        PressOnLeapdroid(acc.ldid, acc.id.Trim());
                                    Thread.Sleep(3000);


                                    List<DetechModel> list_pass = new List<DetechModel>();
                                    DetechModel data = new DetechModel();
                                    data.parent = "b3";
                                    data.content = "Mật khẩu";
                                    data.text = "Mật khẩu";
                                    data.node = "//node[contains(@class,'android.widget.EditText')]";
                                    data.function = 2;
                                    list_pass.Add(data);

                                    data = new DetechModel();
                                    data.parent = "b3";
                                    data.content = "Password";
                                    data.text = "Password";
                                    data.node = "//node[contains(@class,'android.widget.EditText')]";
                                    data.function = 2;
                                    list_pass.Add(data);

                                    kq = RunDetechFunction(acc.ldid, list_pass, 3);
                                    if (kq.status)
                                    {

                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                        Delay(1);
                                        PressOnLeapdroid_vietnamese(acc.ldid, acc.Password.Trim());
                                        Delay(1);
                                        List<DetechModel> list_login = new List<DetechModel>();
                                        data = new DetechModel();
                                        data.parent = "b4";
                                        data.content = "ĐĂNG NHẬP";
                                        data.text = "ĐĂNG NHẬP";
                                        data.node = "//node[contains(@class,'android.view.View')]";
                                        data.function = 1;
                                        list_login.Add(data);

                                        data = new DetechModel();
                                        data.parent = "b3";
                                        data.content = "Log In";
                                        data.text = "Log In";
                                        data.node = "//node[contains(@class,'android.view.View')]";
                                        data.function = 1;
                                        list_login.Add(data);

                                        kq = RunDetechFunction(acc.ldid, list_login, 3);

                                        if (kq.status)
                                        {
                                            ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                            Delay(5);
                                        }
                                    }
                                }

                                Delay(1);
                                break;
                            }

                        case 3:
                            {
                                return true;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    i++;
                    Delay(2);
                    if (i <= 10)
                    {
                        goto Lb_start;
                    }
                }
            }
            catch
            { }
            return false;
        }
        public bool checkIsLoginMess(Account acc)
        {
            try
            {
                int i = 5;
                string data = "Chat|danh bạ";
                while (i > 0)
                {

                    if (checkContentLD(acc.ldid, data))
                        return true;
                    else
                    {
                        Delay(1);
                        i--;
                    }
                }

            }
            catch
            {
            }
            return false;

        }
        public string reactionMessengerFriend(string ldId, Account acc, string app, string comment, int numLike, int delay, CancellationToken token)
        {
            string message = "";
            int done = 0;
            int count = 0;

            message = reactionMessengerOnline(ldId, app, comment, numLike, delay, ref done, token);
            if (done == 0)
                message = "";
            if (done >= numLike)
            {
                return message;
            }
            int Like = numLike;
            numLike = numLike - done;
            try
            {

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources._1_onlinemessenger);
                ls_name.Add("1_onlinemessenger");

                //ls_image.Add(Properties.Resources._1_onlinemessenger_3x);
                //ls_name.Add("1_onlinemessenger");
                //ls_image.Add(Properties.Resources._1_onlinemessenger_3x_en);
                //ls_name.Add("1_onlinemessenger");

                ls_image.Add(Properties.Resources._1_contactmessenger);
                ls_name.Add("1_contactmessenger");


                List<DetechModel> list_Chat = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "b1";
                data.content = "Chat";
                data.text = "Chat";
                data.node = "//node[contains(@class,'android.widget.ImageView')]";
                data.function = 1;
                list_Chat.Add(data);
                // backHomeMessenger(ldId);
                DetechModel kq = new DetechModel();
                kq = RunDetechFunction(ldId, list_Chat, 10);
                if (kq.status)
                    ClickOnLeapdroidPosition(ldId, kq.point);

                int max = 0;

                Delay(3);
            //scroll_up(ldId);
            //scroll_up_mid(ldId);
            lb_loop:
                scroll_up_mid(ldId);
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                List<Point> ls_point = new List<Point>();

                ls_point = FindByXpathTree(ldId, "(//node[contains(@class,'androidx.recyclerview.widget.RecyclerView')])", "(//node[contains(@class,'android.widget.ImageView')])");
                if (ls_point.Count == 0)
                    ls_point = FindByXpathTree(ldId, "(//node[contains(@class,'androidx.recyclerview.widget.RecyclerView')])", "(//node[contains(@class,'android.widget.FrameLayout')])");

                if (ls_point.Count() > 0)
                {
                    for (int n = 0; n < ls_point.Count(); n++)
                    {
                        if (ls_point[n].Y > 65)
                        {
                            ClickOnLeapdroidPosition(ldId, ls_point[n]);
                            if (reactionMesse(ldId, FunctionHelper.method_Spin(comment)))
                            {
                                max = 0;
                                count++;

                                Delay(1);
                                back(ldId, 2);
                                // backHomeMessenger(ldId);
                                if (count >= numLike)
                                    return message + " Tương tác gần đây hoàn hành: " + count.ToString() + "/" + Like;
                                //  scroll_up(ldId);
                                //scroll_up_mid(ldId);

                            }
                            else
                            {
                                //backHomeMessenger(ldId);
                                max++;
                                if (max >= 4)
                                    return message + " Tương tác gần đây hoàn hành: " + count.ToString() + "/" + Like;
                                scroll_up(ldId);
                                goto lb_loop;
                            }
                        }

                    }
                    goto lb_loop;
                }
            }
            catch
            { }
            return message + " Tương tác gần đây hoàn hành: " + count.ToString() + "/" + Like;
        }
        public string reactionMessengerOnline(string ldId, string app, string comment, int numLike, int delay, ref int done, CancellationToken token)
        {
            int max = 0;
            int i = 0;
            int count = 0;
            List<int> ls_point_done = new List<int>();

            List<Bitmap> ls_image = new List<Bitmap>();
            List<string> ls_name = new List<string>();

            ls_image.Add(Properties.Resources._1_onlinemessenger);
            ls_name.Add("1_onlinemessenger");

            ls_image.Add(Properties.Resources.active_messenger);
            ls_name.Add("1_onlinemessenger");

            ls_image.Add(Properties.Resources._1_contactmessenger);
            ls_name.Add("1_contactmessenger");

            ls_image.Add(Properties.Resources._1_onlinemessenger_3x);
            ls_name.Add("1_onlinemessenger");

            //ls_image.Add(Properties.Resources._1_onlinemessenger_3x_en);
            //ls_name.Add("1_onlinemessenger");

            ls_image.Add(Properties.Resources._1_contactmessenger_3x);
            ls_name.Add("1_contactmessenger");

            List<DetechModel> list_Chat = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data.parent = "onlinemessenger";
            data.content = "ACTIVE";
            data.text = "ACTIVE";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_Chat.Add(data);

        Lb_start:
            if (token.IsCancellationRequested)
                token.ThrowIfCancellationRequested();

            DetechModel kq = detechFunction(ldId, list_Chat);
            if (!kq.status)
                kq = detechFunctionCatchImage(ldId, ls_image, ls_name);
            if (kq.status)
            {
                i = 0;
                switch (kq.function)
                {
                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldId, kq.point);
                            Delay(1);

                            if (kq.parent == "onlinemessenger")
                            {
                                max = 0;
                            lb_loop:
                                scroll_up_mid(ldId);
                                List<Point> ls_point = new List<Point>();
                                ls_point = FindByXpathTree(ldId, "(//node[contains(@class,'androidx.recyclerview.widget.RecyclerView')])", "(//node[contains(@class,'android.widget.ImageView')])");
                                if (ls_point.Count == 0)
                                    ls_point = FindByXpathTree(ldId, "(//node[contains(@class,'androidx.recyclerview.widget.RecyclerView')])", "(//node[contains(@class,'android.view.View')])");
                                if (ls_point.Count() > 0)
                                {
                                    for (int n = 0; n < ls_point.Count(); n++)
                                    {
                                        if (ls_point[n].Y > 20 && !ls_point_done.Contains(ls_point[n].Y))
                                        {
                                            ClickOnLeapdroidPosition(ldId, ls_point[n]);
                                            ls_point_done.Add(ls_point[n].Y);
                                            if (reactionMesse(ldId, FunctionHelper.method_Spin(comment)))
                                            {
                                                max = 0;
                                                count++;
                                                back(ldId, 2);
                                                // backHomeMessenger(ldId);
                                                if (count >= numLike)
                                                {
                                                    done = count;
                                                    return "inbox Online complete: " + count.ToString() + "/" + numLike;
                                                }
                                            }
                                            else
                                            {
                                                backHomeMessenger(ldId);
                                                max++;
                                                if (max >= 10)
                                                {
                                                    done = count;
                                                    return "Inbox Online complete: " + count.ToString() + "/" + numLike;
                                                }
                                            }

                                        }
                                        else
                                        {
                                            max++;
                                            if (max >= 10)
                                            {
                                                done = count;
                                                return "Inbox Online complete: " + count.ToString() + "/" + numLike;
                                            }
                                        }

                                    }
                                    goto lb_loop;
                                }
                                else
                                {
                                    done = count;
                                    return "Inbox Online complete: " + count.ToString() + "/" + numLike;

                                }
                            }
                            break;
                        }

                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                i++;
                if (i <= 6)
                {
                    Delay(1);
                    goto Lb_start;
                }
            }
            done = count;
            return "Inbox Online complete: " + count.ToString() + "/" + numLike;
        }
        private bool reactionMesse(string ldId, string comment)
        {
            List<DetechModel> list_Discover = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data.parent = "b1";
            data.content = "NHẮN TIN";
            data.text = "NHẮN TIN";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_Discover.Add(data);

            data = new DetechModel();
            data.parent = "b1";
            data.content = "GỬI TIN NHẮN";
            data.text = "GỬI TIN NHẮN";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_Discover.Add(data);

            data = new DetechModel();
            data.parent = "b1";
            data.content = "Messenger";
            data.text = "Messenger";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_Discover.Add(data);

            data = new DetechModel();
            data.parent = "b1";
            data.content = "Aa";
            data.text = "Aa";
            data.node = "//node[contains(@class,'android.widget.EditText')]";
            data.function = 2;
            list_Discover.Add(data);

            data = new DetechModel();
            data.parent = "ok";
            data.content = "send";
            data.text = "send";
            data.node = "//node[contains(@class,'android.widget.ImageView')]";
            data.function = 1;
            list_Discover.Add(data);

            data = new DetechModel();
            data.parent = "ok";
            data.content = "gửi";
            data.text = "gửi";
            data.node = "//node[contains(@class,'android.widget.ImageView')]";
            data.function = 1;
            list_Discover.Add(data);
            scroll_up_mid(ldId);
            int i = 0;
        Lb_start:
            DetechModel kq = detechFunction(ldId, list_Discover);
            if (kq.status)
            {
                i = 0;
                switch (kq.function)
                {
                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldId, kq.point);
                            if (kq.parent == "ok")
                            {
                                return true;
                            }
                            break;
                        }
                    case 2:
                        {
                            ClickOnLeapdroidPosition(ldId, kq.point);
                            Delay(1);
                            string[] content_split = SplitByLength(comment, 150);
                            if (content_split.Count() > 0)
                            {
                                for (int n = 0; n < content_split.Count(); n++)
                                {
                                    PressOnLeapdroid_vietnamese(ldId, content_split[n]);
                                    Delay(1);
                                }
                            }
                            break;
                        }

                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                i++;
                if (i <= 4)
                {
                    Delay(1);
                    goto Lb_start;
                }
            }
            return false;
        }

        public string seachLikePage(userLD u, string device, Account acc, int minlike, int maxlike, string pathFile, CancellationToken token)
        {
            int dem = 0;
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            try
            {
                StringBuilder list_history = new StringBuilder();
                string path = "";
                string uid = "";
                if (string.IsNullOrEmpty(acc.email))
                    path = String.Format("{0}\\logs\\{1}_likePage.txt", Application.StartupPath, acc.id.Trim());
                else
                    path = String.Format("{0}\\logs\\{1}_likePage.txt", Application.StartupPath, acc.email.Trim());

                string historyadd = "";

                if (File.Exists(path))
                    historyadd = File.ReadAllText(path);

                List<string> ls_idPage = File.ReadAllLines(pathFile).ToList().Distinct().ToList();

            Lb_Start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                if (ls_idPage.Count <= 0)
                {
                    File.AppendAllText(path, list_history.ToString());
                    if (SettingTool.configld.language == "English")
                        return "| Not avaiable ID Page , Like page complete: " + dem.ToString() + "/" + luot.ToString();
                    else
                        return "| Hết ID trang , thích trang hoàn thành: " + dem.ToString() + "/" + luot.ToString();
                }
                lock (syncObjUID)
                {
                    uid = ls_idPage[0];
                    ls_idPage.Remove(uid);
                }

                if (historyadd.Contains(uid))
                {
                    goto Lb_Start;
                }

                while (dem < luot)
                {
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();

                    if (likePage(device, uid))
                    {

                        dem++;
                        Delay(1);
                        list_history.AppendLine(uid);
                        u.setStatusResult(dem);
                        if (dem > luot)
                        {
                            File.AppendAllText(path, list_history.ToString());
                            if (SettingTool.configld.language == "English")
                                return "| Like,follow page complete: " + dem.ToString() + "/" + luot.ToString();
                            else
                                return "| Thích trang hoàn thành: " + dem.ToString() + "/" + luot.ToString();
                        }

                        else
                            goto Lb_Start;
                    }
                    else
                    {
                        //list_history.AppendLine(uid);
                        if (check_Facebook_has_stopped(u, device, acc, token) == false)
                        {
                            return "| Thích trang hoàn thành: " + dem.ToString() + "/" + luot.ToString();
                        }
                        goto Lb_Start;
                    }
                }
                activeNewfeed(device, acc.app);
                File.AppendAllText(path, list_history.ToString());
            }
            catch
            { }
            if (SettingTool.configld.language == "English")
                return "| Like,follow page complete: " + dem.ToString() + "/" + luot.ToString();
            return "| Thích trang hoàn thành: " + dem.ToString() + "/" + luot.ToString(); ;
        }
        public bool likePage(string device, string idPage)
        {
            try
            {
                string result = OpenLink(device, "com.facebook.katana", "fb://page/" + idPage);
                if (result.Contains("Error"))
                    return false;
                Delay(2);
                int max = 0;
                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources.likePage);
                ls_name.Add("1_likepage");
                ls_image.Add(Properties.Resources.likepage_3x);
                ls_name.Add("1_likepage");
                ls_image.Add(Properties.Resources.likepage_3x_299);
                ls_name.Add("1_likepage");


                ls_image.Add(Properties.Resources._1_followed);
                ls_name.Add("1_followed");

                ls_image.Add(Properties.Resources._3x_follow_page_299);
                ls_name.Add("1_followed");

                ls_image.Add(Properties.Resources._1_followpage);
                ls_name.Add("1_followpage");

                ls_image.Add(Properties.Resources._1_morePage);
                ls_name.Add("1_menupage");
                ls_image.Add(Properties.Resources._1_morepage_3x);
                ls_name.Add("1_menupage");

                List<DetechModel> ls_detecth = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "followed";
                data.content = "Đang theo dõi";
                data.text = "Đang theo dõi";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "follow";
                data.content = "Theo dõi";
                data.text = "Theo dõi";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "follow";
                data.content = "Follow";
                data.text = "Follow";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                ls_detecth.Add(data);

            Lb_start:
                DetechModel kq = detechFunctionCatchImage(device, ls_image, ls_name);

                if (kq.status)
                {

                    if (kq.parent == "followpage" || kq.parent == "likepage")
                    {
                        ClickOnLeapdroidPosition(device, kq.point.X + 5, kq.point.Y + 3);
                        return true;
                    }

                    else if (kq.parent == "followed")
                        return false;
                    else
                    {
                        ClickOnLeapdroidPosition(device, kq.point.X, kq.point.Y);
                        Delay(1);
                        kq = RunDetechFunction(device, ls_detecth, 2);
                        if (kq.status)
                        {
                            if (kq.parent == "follow")
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                return true;
                            }
                            else
                            {
                                back(device, 1);
                                return false;
                            }
                        }

                        else
                        {
                            kq = detechFunctionCatchImage(device, ls_image, ls_name);
                            if (kq.status)
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                return true;
                            }
                            return false;
                        }

                    }
                }
                else
                {
                    max++;
                    Delay(1);
                    if (max <= 3)
                        goto Lb_start;
                }
            }
            catch
            { }
            return false;
        }
        public bool check_Facebook_has_stopped(userLD u, string device, Account acc, CancellationToken token)
        {
            List<DetechModel> ls_detech = new List<DetechModel>();
            DetechModel detech = new DetechModel();
            detech.parent = "";
            detech.content = "Phiên đã hết hạn";
            detech.text = "ĐỒNG Ý";
            detech.node = "//node[contains(@class,'android.widget.Button')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Facebook hiện không phản hồi";
            detech.text = "Đợi";
            detech.node = "//node[contains(@class,'android.widget.Button')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Facebook isn't responding.";
            detech.text = "OK";
            detech.node = "//node[contains(@class,'android.widget.Button')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Session";
            detech.text = "OK";
            detech.node = "//node[contains(@class,'android.widget.Button')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Meet up with friends";
            detech.text = "Not Now";
            detech.node = "//node[contains(@class,'android.widget.Button')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "";
            detech.content = "Meet up with friends";
            detech.text = "Not Now";
            detech.node = "//node[contains(@class,'android.widget.Button')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "loginavatar";
            detech.content = "menu";
            detech.text = "menu";
            detech.node = "//node[contains(@class,'android.widget.Button')]";
            detech.function = 1;
            ls_detech.Add(detech);

            detech = new DetechModel();
            detech.parent = "loginavatar";
            detech.content = "đã dừng lại";
            detech.text = "Ok";
            detech.node = "//node[contains(@class,'android.widget.Button')]";
            detech.function = 1;
            ls_detech.Add(detech);


            DetechModel kq = detechFunction(device, ls_detech);
            if (kq.status)
            {
                ClickOnLeapdroidPosition(device, kq.point);
                return loginFacebookTuongTac(u, acc, token);
            }
            else
            {
                string data = "không thể kết nối|Can't Connect";

                if (checkContentLD(acc.ldid, data))
                {
                    //close app
                    killApp(acc.ldid, "com.facebook.katana");
                    runAdb(acc.ldid, "shell pm clear com.facebook.katana");
                    runApp(acc.ldid, "com.facebook.katana");
                    return loginFacebookTuongTac(u, acc, token);
                }
            }
            return true;
        }

        public List<PositionLD> GetPosition(int thread, int widthFormm, int heighForm)
        {
            List<PositionLD> lsPosition = new List<PositionLD>();
            int x = 0;
            int y = 0;
            int h = 480;
            int w = 270;
            int numLD = thread;
            int rows = 0;
            int cols = 0;
            int formWidth = widthFormm;
            int formHeigh = heighForm;
            int setParents = 0;
            rows = formHeigh / h;
            cols = (formWidth / w);

            while (numLD > rows * (cols))
            {
                h = Convert.ToInt16(h * 0.8);
                w = Convert.ToInt16(w * 0.8);
                rows = formHeigh / h;
                cols = (formWidth / w);
            }

            for (int r = 0; r < rows; r++)
            {
                x = 0;
                for (int cl = 0; cl < cols; cl++)
                {

                    if (setParents < numLD)
                    {
                        //setParent(x, y, w, h, "index = " + setParents.ToString());
                        PositionLD position = new PositionLD();
                        position.X = x;
                        position.Y = y;
                        position.Heigh = h;
                        position.Width = w;

                        lsPosition.Add(position);
                        setParents++;
                    }

                    else
                        break;

                    x += w + 15;
                }
                if (setParents >= numLD)
                    break;
                else
                    y += h + 15;
            }
            return lsPosition;
        }
        [DllImport("user32.dll")]
        static extern IntPtr SetParent(IntPtr hWndChild, IntPtr hWndNewParent);

        [DllImport("USER32.dll")]

        static extern bool MoveWindow(IntPtr hwnd, int x, int y, int cx, int cy, bool repaint);

        [DllImport("user32.dll")]
        static extern int SetWindowLong(IntPtr hWnd, int nIndex, uint dwNewLong);

        //public void launchSetPosion(string ldID, runLDs formLD)
        //{
        //    try
        //    {
        //        string index = "index = " + ldID;
        //        string path = SettingTool.configld.pathLD;
        //        Process p = Process.Start(path + "\\dnplayer.exe", index);
        //        //const int GWL_STYLE = (-16);
        //        //const UInt32 WS_VISIBLE = 0x10000000;
        //        //  Process p = Process.Start("notepad.exe");
        //        Thread.Sleep(15000);
        //        autoRunLDSetPosition(ldID);
        //        SetParent(p.MainWindowHandle, formLD.pnLD.Handle);
        //     //   MoveWindow(p.MainWindowHandle, position.X, position.Y, position.Width, position.Heigh, true);
        //        MoveWindow(p.MainWindowHandle, 0, 0, 300, 400, true);
        //        //  SetWindowLong(p.MainWindowHandle, GWL_STYLE, (WS_VISIBLE));
        //        // p.WaitForInputIdle();
        //    }
        //    catch
        //    {
        //        //Process[] lsLD = Process.GetProcessesByName("dnplayer");
        //        //foreach (Process prs in lsLD)
        //        //{
        //        //    if(prs.MainWindowTitle.Contains(ldID))
        //        //    {
        //        //        prs.Kill();

        //        //    }
        //        //}
        //    }
        //}
        public void launchSetPosion(string ldID, PositionLD position, Form formLD)
        {
            try
            {
                string index = "index = " + ldID;
                string path = SettingTool.configld.pathLD;
                Process p = Process.Start(path + "\\dnplayer.exe", index);
                Thread.Sleep(1000);
                IsFinishLD(ldID);
                Delay(SettingTool.configld.numRunLD);
                if (!SettingTool.configld.has_quitLD)
                {
                    SetParent(p.MainWindowHandle, formLD.Handle);
                }

                MoveWindow(p.MainWindowHandle, position.X, position.Y, position.Width, position.Heigh, true);
            }
            catch
            {
            }
        }
        public bool launchSetPosion(string ldID, userLD form, CancellationToken token)
        {
            try
            {
                int i = 60;
                settingLD(ldID);
                int max_restart = 0;
                string index = "index = " + ldID;
            Lb_Start:

                if (form.p == null)
                {
                    string path = SettingTool.configld.pathLD;
                    form.p = Process.Start(path + "\\dnplayer.exe", index);
                }
                else
                {
                    if (form.p.HasExited == true)
                    {
                        string path = SettingTool.configld.pathLD;
                        form.p = Process.Start(path + "\\dnplayer.exe", index);

                    }
                    else
                    {
                        //   MessageBox.Show(form.p.MainWindowHandle.ToString());
                    }
                }
                Delay(3);
                IntPtr intProcess = form.p.MainWindowHandle;
                if ((int)intProcess > 0)
                {
                    lock (syncObjUID)
                    {
                        Delay(1);
                        SetParent(form.p.MainWindowHandle, form.Handle);
                        MoveWindow(form.p.MainWindowHandle, -5, -36, SettingTool.configld.sizeldwidth, SettingTool.configld.sizeldheight, true);
                    }
                }
                else
                {
                    max_restart++;
                    if (max_restart < 3)
                    {
                        quit(ldID);
                        Delay(1);
                        form.p = null;
                        goto Lb_Start;
                    }
                    lock (syncObjUID)
                    {
                        Delay(1);
                        SetParent(form.p.MainWindowHandle, form.Handle);
                        MoveWindow(form.p.MainWindowHandle, -5, -36, SettingTool.configld.sizeldwidth, SettingTool.configld.sizeldheight, true);
                    }

                }
                if (form.p == null || form.p.HasExited == true)
                    Delay(SettingTool.configld.numRunLD);

                while (i > 0)
                {
                    i--;
                    if (token.IsCancellationRequested)
                        return false;
                    if (checkIsFinishLD(ldID))
                    {
                        runAdb(ldID, " shell settings put global heads_up_notifications_enabled 0");
                        return true;
                    }
                    else
                    {
                        Thread.Sleep(1000);
                    }
                }

            }
            catch (Exception ex)
            {
                // quit(ldID);

                form.p = null;
                //File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + ": LD - " + ldID + " " + ex.Message + "\n");
            }
            //runAdb(ldID, " shell settings put global heads_up_notifications_enabled 0");
            return false;
        }
        public void SeachInfo(userLD u, Account acc, string ldid, string app, string keyword, int delay, CancellationToken token)
        {
            try
            {
                int loop = 0;

                if (token.IsCancellationRequested)
                {
                    token.ThrowIfCancellationRequested();
                }
                // OpenLink(ldid, app, "fb://groups/gridtab");
                //  Delay(3);
                List<DetechModel> detechsearch = new List<DetechModel>();

                DetechModel model = new DetechModel();
                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Tìm kiếm trên Facebook";
                model.text = "Tìm kiếm trên Facebook";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;
                detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Tìm kiếm trên Facebook";
                model.text = "Tìm kiếm trên Facebook";
                model.node = "//node[contains(@class,'android.widget.ImageView')]";
                model.function = 1;
                detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Tìm kiếm Facebook";
                model.text = "Tìm kiếm Facebook";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;
                detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Search Facebook";
                model.text = "Search Facebook";
                model.node = "//node[contains(@class,'android.widget.ImageView')]";
                model.function = 1;
                detechsearch.Add(model);

            lb_loop:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = RunDetechFunction(ldid, detechsearch);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(ldid, kq.point);
                    Delay(1);
                    PressOnLeapdroid_vietnamese(ldid, FunctionHelper.method_Spin(keyword));
                    Delay(1);
                    PressEnter(ldid);
                    Delay(1);
                    scroll_up_random(ldid, token);
                    Delay(2);
                }
                else
                {
                    loop++;
                    if (loop <= 6)
                    {
                        goto lb_loop;
                    }
                    else
                    {
                        if (check_Facebook_has_stopped(u, ldid, acc, token) == false)
                        {
                            goto lb_loop;
                        }
                    }

                }
                activeNewfeed(ldid, app);
                Delay(2);

            }
            catch
            { }
        }
        public bool clickXpath(string ldid, string node, string datatext, int loop = 5, int delay = 100)
        {
            string html = "";
            Point point = new Point();
            try
            {
                node = node.ToLower();
                List<string> list_data = new List<string>();
                if (datatext.Contains("|"))
                {
                    list_data = datatext.ToLower().Split('|').ToList();
                }
                else
                {
                    list_data.Add(datatext);
                }
                while (loop > 0)
                {
                    string cmdCommand = "shell uiautomator dump";
                    string data = runAdb(ldid, cmdCommand);
                    html = readFile(ldid, "/sdcard/window_dump.xml").ToLower();
                    HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                    document.LoadHtml(html);

                    foreach (string content in list_data)
                    {
                        if (html.Contains(content.ToLower()))
                        {
                            HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(node);
                            if (nodes != null)
                            {
                                foreach (HtmlNode n in nodes)
                                {
                                    string enable = n.Attributes["enabled"].Value.ToString();
                                    if (enable == "true")
                                    {
                                        try
                                        {
                                            string text = n.Attributes["text"].Value.ToString();
                                            string desc = n.Attributes["content-desc"].Value.ToString();
                                            if (text.Contains(content) || desc.Contains(content))
                                            {
                                                string bound = n.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                                string[] arr = bound.Split(']');
                                                if (arr.Length > 0)
                                                {

                                                    string[] arr1 = arr[0].Split(',');
                                                    point.X = Convert.ToInt32(arr1[0]);
                                                    point.Y = Convert.ToInt32(arr1[1]);
                                                    ClickOnLeapdroidPosition(ldid, point);
                                                    Thread.Sleep(delay);
                                                    return true;
                                                }
                                            }
                                        }
                                        catch
                                        {

                                        }

                                    }

                                }
                            }


                        }
                    }
                    loop--;
                    Thread.Sleep(100);

                }//endwhile

            }
            catch (Exception exx) { exx.ToString(); }

            return false;
        }
        public bool checkContentLD(string ldid, string datatext, int loop = 1, int delay = 100)
        {
            try
            {
                List<string> list_data = new List<string>();
                if (datatext.Contains("|"))
                {
                    list_data = datatext.ToLower().Split('|').ToList();
                }
                else
                {
                    list_data.Add(datatext);
                }
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";

                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldid, cmdCommand);
                string html = readFile(ldid, filename).ToLower();
                while (loop > 0)
                {
                    foreach (string content in list_data)
                    {
                        if (html.Contains(content.ToLower()))
                        {
                            return true;
                        }
                    }
                    loop--;


                }//endwhile

            }
            catch (Exception exx) { exx.ToString(); }

            return false;
        }
        public bool loginFacebookLDImage(Account acc, CancellationToken token)
        {

            int i = 0;
            List<Bitmap> ls_image = new List<Bitmap>();
            List<string> ls_name = new List<string>();

            ls_image.Add(Properties.Resources._2_inputid_sodienthoai);
            ls_name.Add("2_inputid_sodienthoai");
            ls_image.Add(Properties.Resources._1_phoneEmail);
            ls_name.Add("2_inputid_sodienthoai");
            ls_image.Add(Properties.Resources._4x_phoneEmail);
            ls_name.Add("2_inputid_sodienthoai");
            ls_image.Add(Properties.Resources._2_inputid_sodienthoai_3x);
            ls_name.Add("2_inputid_sodienthoai");

            ls_image.Add(Properties.Resources._2_inputpass_matkhau);
            ls_name.Add("2_inputpass_matkhau");
            ls_image.Add(Properties.Resources._2_inputpass_matkhau_win7);
            ls_name.Add("2_inputpass_matkhau");
            ls_image.Add(Properties.Resources._2_inputpass_matkhau_3x);
            ls_name.Add("2_inputpass_matkhau");
            ls_image.Add(Properties.Resources._1_password);
            ls_name.Add("2_inputpass_matkhau");
            ls_image.Add(Properties.Resources._4x_inputpass_matkhau);
            ls_name.Add("2_inputpass_matkhau");

            ls_image.Add(Properties.Resources._1_dangnhap);
            ls_name.Add("1_login_dangnhap");

            ls_image.Add(Properties.Resources._1_login1);
            ls_name.Add("1_login_dangnhap");

            ls_image.Add(Properties.Resources._1_login_dangnhap);
            ls_name.Add("1_login_dangnhap");

            ls_image.Add(Properties.Resources._1_login_dangnhap_3x);
            ls_name.Add("1_login_dangnhap");
            ls_image.Add(Properties.Resources._1_login);
            ls_name.Add("1_login_dangnhap");
            ls_image.Add(Properties.Resources._4x_login);
            ls_name.Add("1_login_dangnhap");

            //int max = 0;
        Lb_start:
            if (token.IsCancellationRequested)
                return false;
            //  MessageBox.Show("chinh:" + i.ToString());
            DetechModel kq = detechFunctionCatchImage(acc.ldid, ls_image, ls_name);

            if (kq.status)
            {
                //max++;
                //if (max > 10)
                //    return false;
                i = 0;
                //  MessageBox.Show(kq.parent);
                switch (kq.function)
                {

                    case -1:
                        {
                            acc.Thongbao = kq.text;
                            return false;
                        }
                    case 1:
                        {
                            if (kq.parent == "login")
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                return true;
                            }
                            break;
                        }
                    case 2:
                        {
                            ClickOnLeapdroidPosition(acc.ldid, kq.point);

                            if (kq.parent == "inputid")
                            {
                                //Thread.Sleep(1000);
                                if (acc.id == null || acc.id == "")
                                    PressOnLeapdroid(acc.ldid, acc.email.Trim());
                                else
                                    PressOnLeapdroid(acc.ldid, acc.id.Trim());
                                Delay(1);
                                if (SettingTool.configld.versionld == "3.x")
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point.X + 200, kq.point.Y + 10);
                                else
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point.X + 600, kq.point.Y);

                                //List<Bitmap> ls_imagepass = new List<Bitmap>();
                                //List<string> ls_namepass = new List<string>();

                                //ls_imagepass.Add(Properties.Resources._2_inputpass_matkhau);
                                //ls_namepass.Add("2_inputpass_matkhau");

                                //ls_imagepass.Add(Properties.Resources._2_inputpass_matkhau_3x);
                                //ls_namepass.Add("2_inputpass_matkhau");

                                //ls_imagepass.Add(Properties.Resources._1_password);
                                //ls_namepass.Add("2_inputpass_matkhau");

                                //ls_imagepass.Add(Properties.Resources._4x_inputpass_matkhau);
                                //ls_namepass.Add("2_inputpass_matkhau");

                                //DetechModel kqpasss = detechFunctionCatchImage(acc.ldid, ls_imagepass, ls_namepass);
                                //if (kqpasss.status)
                                //{
                                //    // Delay(1);
                                //    ClickOnLeapdroidPosition(acc.ldid, kqpasss.point.X + 10, kqpasss.point.Y);
                                //    Delay(1);
                                //    PressOnLeapdroid_vietnamese(acc.ldid, acc.Password.Trim());
                                //    Delay(2);
                                //}
                                //else
                                //{
                                //    //tab xuong dang nhap                              
                                //    runAdb(acc.ldid, "shell input keyevent 61");
                                //    // ClickOnLeapdroidPosition(acc.ldid, PointDefault.p_login_password);
                                //    Delay(1);
                                //    //Delay(1);
                                //    PressOnLeapdroid_vietnamese(acc.ldid, acc.Password.Trim());
                                //    Delay(2);

                                //}
                                //runAdb(acc.ldid, "shell input keyevent 61");

                            }
                            else
                            {
                                if (kq.parent == "inputpass")
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point.X + 10, kq.point.Y + 10);
                                    Delay(1);
                                    PressOnLeapdroid_vietnamese(acc.ldid, acc.Password.Trim());
                                }
                            }
                            break;
                        }

                    case 3:
                        {
                            return true;
                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                i++;
                if (i <= 5)
                {
                    Delay(1);
                    goto Lb_start;
                }

            }
            return false;
        }
        public DetechModel detechFunctionCatchImage(string ldID, DetechImageModel model)
        {
            DetechModel kq = new DetechModel();
            try
            {
                var screen = ScreenShoot(ldID);
                Point point = ImageScanOpenCV.FindOutPoint(screen, model.img);
                if (point.X == 0 & point.Y == 0)
                {
                    Rectangle location = new Rectangle();
                    location = searchBitmap(screen, model.img, 0.2);
                    if (location.X > 0 & location.Y > 20)
                    {
                        point.X = location.X;
                        point.Y = location.Y;
                    }
                }
                if (point.X > 0 & point.Y > 0)
                {
                    kq.point = new Point(point.X, point.Y);
                    kq.parent = model.name;
                    kq.function = model.function;
                    kq.status = true;
                    kq.text = "";
                    kq.content = "";
                    return kq;
                }
            }
            catch (Exception err)
            {
                File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + ": LD - " + ldID + " " + err.Message + "\n");
            }

            return kq;
        }
        public DetechModel detechFunctionCatchImages(string ldID, List<DetechImageModel> list_detech)
        {
            DetechModel kq = new DetechModel();
            try
            {
                var screen = ScreenShoot(ldID);
                foreach (DetechImageModel model in list_detech)
                {
                    try
                    {
                        model.img.Save("c:\\" + model.name.ToString() + ".png");
                        var point = ImageScanOpenCV.FindOutPoint(screen, model.img);
                        if (point.X == 0 & point.Y == 0)
                        {
                            Rectangle location = new Rectangle();
                            location = searchBitmap(screen, model.img, 0.2);
                            if (location.X > 0 & location.Y > 60)
                            {
                                point.X = location.X;
                                point.Y = location.Y;
                                // screen.Save("d:\\s.png");
                                // model.img.Save("d:\\l.png");
                            }
                        }

                        if (point.X > 0 & point.Y > 0)
                        {
                            kq.point = new Point(point.X, point.Y);
                            kq.parent = model.name;
                            kq.function = model.function;
                            kq.status = true;
                            kq.text = "";
                            kq.content = "";
                            return kq;
                        }
                    }
                    catch (Exception err)
                    {
                        File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + ": LD - " + ldID + " " + err.Message + "\n");
                    }


                }
            }
            catch (Exception err)
            {

                File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + ": LD - " + ldID + " " + err.Message + "\n");
            }

            return kq;
        }

        public DetechModel detechFunctionCatchImagesExact(string ldID, List<DetechImageModel> list_detech)
        {
            DetechModel kq = new DetechModel();
            try
            {
                var screen = ScreenShoot(ldID);
                // screen.Save("C:\\1.png");
                foreach (DetechImageModel model in list_detech)
                {
                    try
                    {
                        //  model.img.Save("c:\\2.png");
                        var point = ImageScanOpenCV.FindOutPoint(screen, model.img, 0.99);

                        if (point.X > 0 & point.Y > 0)
                        {
                            //  model.img.Save("c:\\2.png");
                            kq.point = new Point(point.X, point.Y);
                            kq.parent = model.name;
                            kq.function = model.function;
                            kq.status = true;
                            kq.text = "";
                            kq.content = "";
                            return kq;
                        }
                    }
                    catch (Exception err)
                    {
                        File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + ": LD - " + ldID + " " + err.Message + "\n");
                    }


                }
            }
            catch (Exception err)
            {

                File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + ": LD - " + ldID + " " + err.Message + "\n");
            }

            return kq;
        }
        public List<DetechModel> detechFunctionCatchImagesListPoint(string ldID, List<DetechImageModel> list_detech)
        {
            List<DetechModel> list_kq = new List<DetechModel>();
            try
            {
                var screen = ScreenShoot(ldID);

                foreach (DetechImageModel model in list_detech)
                {
                    try
                    {
                        Point point = ImageScanOpenCV.FindOutPoint(screen, model.img);
                        if (point.X == 0 & point.Y == 0)
                        {
                            Rectangle location = new Rectangle();
                            location = searchBitmap(screen, model.img, 0.2);
                            if (location.X > 0 & location.Y > 20)
                            {
                                point.X = location.X;
                                point.Y = location.Y;
                            }
                        }

                        if (point.X > 0 & point.Y > 0)
                        {
                            DetechModel kq = new DetechModel();
                            kq.point = new Point(point.X, point.Y);
                            kq.parent = model.name;
                            kq.function = model.function;
                            kq.status = true;
                            kq.text = "";
                            kq.content = "";
                            list_kq.Add(kq);
                        }
                    }
                    catch (Exception err)
                    {
                        File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + ": LD - " + ldID + " " + err.Message + "\n");
                    }

                }
            }
            catch (Exception err)
            {

                File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + ": LD - " + ldID + " " + err.Message + "\n");
            }

            return list_kq;
        }
        public DetechModel detechFunctionCatchImage(string ldID, List<Bitmap> list_detech, List<string> list_nameDetech)
        {
            DetechModel kq = new DetechModel();
            try
            {
                Bitmap screen = ScreenShoot(ldID);
                // screen.Save(Application.StartupPath + "\\logs\\screen.png" );
                //   MessageBox.Show(list_detech.Count.ToString());
                for (int i = 0; i < list_detech.Count; i++)
                {
                    // MessageBox.Show(i.ToString());
                    try
                    {
                        string name = list_nameDetech[i];
                        Bitmap like = list_detech[i];
                        //   like.Save(Application.StartupPath + "\\logs\\" + i.ToString() +"_" +name + ".png");
                        Point point = ImageScanOpenCV.FindOutPoint(screen, like);
                        if (point.X == 0 & point.Y == 0)
                        {
                            Rectangle location = new Rectangle();
                            location = searchBitmap(screen, like, 0.2);
                            if (location.X > 0 & location.Y > 20)
                            {
                                point.X = location.X;
                                point.Y = location.Y;
                                // screen.Save("d:\\s.png");
                                //like.Save("d:\\l.png");
                            }
                        }

                        if (point.X > 0 & point.Y > 0)
                        {
                            kq.point = new Point(point.X, point.Y);
                            kq.parent = FunctionHelper.smethod_6(name, 2, "_");
                            kq.function = Convert.ToInt32(name.Substring(0, 1));
                            kq.status = true;
                            kq.text = "";
                            kq.content = "";
                            return kq;
                        }
                    }
                    catch (Exception err)
                    {
                        File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + ": LD - " + ldID + " " + err.Message + "\n");
                    }
                }
            }
            catch (Exception err)
            {
                File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + ": LD - " + ldID + " " + err.Message + "\n");
            }
            return kq;
        }
        public void copyfileToken(string ldID)
        {
            string cmd = "";
            if (SettingTool.configld.versionld == "3.x")
            {
                cmd = String.Format("shell su -c 'cp  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/authentication  storage/emulated/legacy/pictures/temp/{0}'", ldID + ".txt");
            }
            else
            {
                cmd = String.Format("shell su -c 'cp  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/authentication  storage/emulated/0/pictures/temp/{0}'", ldID + ".txt");
            }

            string html = runAdb(ldID, cmd);
        }
        public bool checkIsFinishLD(string ldID)
        {
            try
            {
                //string cmd = String.Format("isrunning --index {0}", ldID);
                //string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);

                //   string html = runAdb(ldID, "shell pm list package");
                string html = "";
                // if (html.Contains("com.android"))
                if (checkScreen(ldID, "com.android"))
                    return true;
                else if (checkScreen(ldID, "com.facebook"))
                    return true;
                else
                {
                    //  if (html.Contains("cannot connect to daemon") || html.Contains("device not found"))
                    {
                        string port = checkPortLD(ldID);
                        if (port != null)
                        {
                            runAdb(ldID, string.Format("disconnect 127.0.0.1:{0}", port));
                            html = runAdb(ldID, string.Format("connect 127.0.0.1:{0}", port));
                            if (html.Contains("already connected"))//
                            {
                                return true;
                            }
                            else
                            {
                                if (html.Contains("unable to connect"))
                                {
                                    //Process[] processesByName = Process.GetProcessesByName("adb");
                                    //foreach (Process p in processesByName)
                                    //{
                                    //    try
                                    //    {
                                    //        p.Kill();
                                    //    }
                                    //    catch
                                    //    { }
                                    //}
                                    //runAdb(ldID, string.Format("connect 127.0.0.1:{0}", port));
                                }
                            }
                        }

                        //ninjaDroidHelper droid = new ninjaDroidHelper();
                        //droid.startAdbserver("adb kill-server && adb start-server");
                        //droid.startAdbserver("adb devices");

                    }
                    //  File.AppendAllText(Application.StartupPath + "\\logs\\" + ldID + ".txt", DateTime.Now.ToString() + " " + ldID + " : " + html + "\n");

                    return false;
                }

            }
            catch { }
            return false;
        }
        public string checkPortLD(string ldid)
        {
            string pathjson = string.Format("{0}\\vms\\leidian{1}\\leidian.vbox", SettingTool.pathfolderld, ldid);
            if (File.Exists(pathjson))
            {
                string data = File.ReadAllText(pathjson);
                if (data.Contains("hostport"))
                {
                    string value2 = Regex.Match(data, "hostport=\"(\\d+)").Groups[1].Value;
                    if (!string.IsNullOrEmpty(value2))
                    {
                        return value2;
                    }
                }
            }
            return null;
        }

        public string InviteLivesteam(string device, SettingTuongTac setTuongtac, string link, List<string> list_message, decimal num, string app, int i_delay, CancellationToken token)
        {
            string message = "";
            try
            {
                if (link != "")
                {

                    app = "com.facebook.katana";
                    DetechModel model = new DetechModel();
                    List<DetechModel> list_shareprofile = new List<DetechModel>();
                    model.parent = "";
                    model.content = "ĐÓNG";
                    model.text = "ĐÓNG";
                    model.node = "//node[contains(@class,'android.widget.TextView')]";
                    model.function = 1;
                    list_shareprofile.Add(model);

                    model = new DetechModel();
                    model.parent = "";
                    model.content = "CHIA SẺ";
                    model.text = "CHIA SẺ";
                    model.node = "//node[contains(@class,'android.view.View')]";
                    model.function = 1;
                    list_shareprofile.Add(model);

                    model = new DetechModel();
                    model.parent = "sharetofriend";
                    model.content = "Chia sẻ với bạn bè";
                    model.text = "Chia sẻ với bạn bè";
                    model.node = "//node[contains(@class,'android.widget.ImageButton')]";
                    model.function = 1;
                    list_shareprofile.Add(model);

                    model = new DetechModel();
                    model.parent = "";
                    model.content = "Mới! Lệnh chat";
                    model.text = "Đóng";
                    model.node = "//node[contains(@class,'android.widget.TextView')]";
                    model.function = 1;
                    list_shareprofile.Add(model);

                    model = new DetechModel();
                    model.parent = "Search";
                    model.content = "Search";
                    model.text = "Search";
                    model.node = "//node[contains(@class,'android.widget.EditText')]";
                    model.function = 1;
                    list_shareprofile.Add(model);

                    int step = 0;
                    string[] ls_link = link.Split(',');
                    List<string> list_content = new List<string>();
                    list_content.Add("Send");
                    list_content.Add("Gửi");

                    List<Bitmap> ls_image = new List<Bitmap>();
                    List<string> ls_name = new List<string>();

                    ls_image.Add(Properties.Resources._1_sharelive);
                    ls_name.Add("1_sharelive");
                    ls_image.Add(Properties.Resources._1_sharelive_3x);
                    ls_name.Add("1_sharelive");

                    ls_image.Add(Properties.Resources._1_sharelive_3xEn);
                    ls_name.Add("1_sharelive");


                    int count = 0;


                Lb_start:
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();
                    DetechModel kq = detechFunction(device, list_shareprofile);
                    if (!kq.status)
                    {
                        DetechModel kq_image = detechFunctionCatchImage(device, ls_image, ls_name);
                        if (kq_image.status)
                            kq = kq_image;
                    }
                    if (kq.status)
                    {
                        step = 0;
                        switch (kq.function)
                        {
                            case -2:
                                {
                                    if (SettingTool.configld.language == "English")
                                        return "| Invite friend not complete";
                                    else
                                        return "| Mời bạn bè không hoàn thành";
                                }
                            case -1:
                                {
                                    Thread.Sleep(5000);
                                    break;
                                }
                            case 0:
                                {
                                    back(device, 1);
                                    break;
                                }
                            case 1:
                                {
                                    ClickOnLeapdroidPosition(device, kq.point);
                                    Delay(1);
                                    if (kq.parent == "sharetofriend" || kq.parent == "Search")
                                    {
                                    lb_send:
                                        scroll_up_livestream(device);
                                        List<Point> ls_point = new List<Point>();
                                        ls_point = FindByXpathList(device, "//node[contains(@class,'android.widget.Button')]", list_content);
                                        if (ls_point.Count > 0)
                                        {
                                            for (int n = 0; n < ls_point.Count; n++)
                                            {
                                                ClickOnLeapdroidPosition(device, ls_point[n]);
                                                Delay(1);
                                                count++;
                                                if (count >= num)
                                                {

                                                    activeNewfeed(device, app);
                                                    if (SettingTool.configld.language == "English")
                                                        return "|Invite friend complete:" + count.ToString() + "/" + num.ToString();
                                                    else
                                                        return "|Mời bạn bè hoàn thành:" + count.ToString() + "/" + num.ToString();

                                                }
                                            }
                                            goto lb_send;
                                        }
                                        //else
                                        //    activeNewfeed(device, app);
                                    }

                                    break;
                                }
                            default:
                                break;
                        }
                        goto Lb_start;
                    }
                    else
                    {
                        step++;
                        if (step <= 5)
                        {
                            if (step == 2)
                            {
                                //ClickOnLeapdroidPosition(device, 300, 300);
                                //Delay(1);
                                //ClickOnLeapdroidPosition(device, 300, 300);
                            }
                            goto Lb_start;
                        }
                        if (SettingTool.configld.language == "English")
                            message += "|Invite friend complete:" + count.ToString() + "/" + num.ToString();
                        else
                            message += "|Mời bạn bè hoàn thành:" + count.ToString() + "/" + num.ToString();
                    }

                }
                if (message == "")
                {
                    if (SettingTool.configld.language == "English")
                        message = "Invite friend watch livestream fail";
                    else
                        message = "mời bạn bè không hoàn thành";
                }

            }
            catch
            { }
            return message;

        }
        public void scroll_up_livestream(string device)
        {
            //Point point = new Point();
            //point = ninjaadb.GetScreenResolution(device.ToString());
            //s.Swipe(device.Serial, 300, point.Y - 200, 300, point.Y - 1000, 500);



            if (SettingTool.configld.versionld == "4.x")
            {
                string cmd = "shell input swipe 300  1700  300 1000";

                runAdb(device, cmd);
            }
            else
            {
                string cmd = "shell input swipe 250 450 250 200";

                runAdb(device, cmd);
            }


        }


        public void SaveTokenCookies(Account acc)
        {
            string token = "";
            string path = string.Format("c:\\test\\{0}\\pictures\\temp\\{0}.txt", acc.ldid);
            copyfileToken(acc.ldid);
            //  string cmd = String.Format("pull \"/storage/emulated/0/authentication\" \"{0}\"", path);
            //string kq = runAdb(acc.ldid, cmd);
            if (File.Exists(path))
            {
                string html = File.ReadAllText(path);
                string uid = FunctionHelper.smethod_6(html, html.IndexOf("EAAAAUa"), "\\").Trim();
                token = Regex.Match(uid, @"([A-Z])\w+").Value;
                File.AppendAllText(path, uid + "\n");
                if (!string.IsNullOrEmpty(token))
                    acc.token = token;

                string[] arr = html.Split('[');
                if (arr.Length > 1)
                {
                    string data = "[" + arr[1];
                    JArray jarr = JArray.Parse(data);
                    string cookie = "";
                    foreach (var item in jarr)
                    {
                        cookie = String.Format("{0};{1}={2}", cookie, item["name"].ToString(), item["value"].ToString());
                    }
                    cookie = cookie.Remove(0, 1);
                    if (!string.IsNullOrEmpty(cookie))
                        acc.cookies = cookie;
                }


                NguoiDung_Bll nguoidung = new NguoiDung_Bll();
                if (acc.id.Contains('@'))
                {
                    string[] cokie = acc.cookies.Split(';');
                    acc.email = acc.id;
                    acc.id = FunctionHelper.smethod_6(cokie[0], cokie[0].IndexOf("user=") + 5, "");
                    //if (!string.IsNullOrEmpty(acc.id))
                    //    nguoidung.updateuidEmail(acc);
                }
                //if (acc.cookies.Contains(acc.id))
                //{
                // File.AppendAllText(path, token + "\n" + acc.cookies);

                //nguoidung.updateTokenCookie(acc);
                // }
                File.Delete(path);
            }
        }
        private void resetFacebook(Account acc, Point pt, CancellationToken token)
        {
            ClickOnLeapdroidPosition(acc.ldid, pt);
            Delay(2);
            loginAvatarLD(acc);
            // loginFacebookLD(u,acc, token);
        }

        public string scrollLikeNewFeedWatch(userLD u, Account acc, string device, string app, int minlike, int maxlike, SettingTuongTac tuongtac, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            string message = "";
            int dem = 0;
            try
            {
                OpenLink(device, acc.app, "fb://watch");
                Delay(2);
                scroll_down(device);
                int max = 0;
                Delay(1);
                while (dem < luot)
                {
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    scroll_up_random(device, token);
                    Delay(1);
                    if (seedingLikeVideo(device, token))
                    {
                        max = 0;
                        dem++;
                        u.setStatusResult(dem);
                    }
                    else
                    {
                        Delay(1);
                        max++;
                        if (max >= 6)
                            return message = "| Like newfeed watch complete:" + dem.ToString() + "/" + luot;
                        else
                        {
                            if (check_Facebook_has_stopped(u, device, acc, token) == false)
                            {
                                return message = "| Like newfeed watch complete:" + dem.ToString() + "/" + luot;
                            }
                        }
                    }

                }
            }
            catch
            { }
            return message = "| Like newfeed complete:" + dem.ToString() + "/" + luot; ;
        }


        public void scrollNewfeedMarketplace(userLD u, string device, Account acc, int min, int max, CancellationToken token)
        {
            try
            {
                OpenLink(device, acc.app, "fb://marketplace");

                scroll_down(device);
                Random rd = new Random();
                int luot = rd.Next(min, max);
                u.setStatusSum(luot);
                int int_check = 1;
                for (int i = 0; i < luot; i++)
                {
                    int_check++;
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    if (i % 5 == 0)
                    {
                        if (check_newfeed_marketplace(device))
                        {
                            break;
                        }
                    }
                    if (i == 8)
                    {
                        load_more_newfeed_marketplace(device);
                    }
                    if (int_check % 10 == 0)
                    {
                        if (check_Facebook_has_stopped(u, acc.ldid, acc, token) == false)
                        {
                            u.setStatus(acc.ldid, "Lỗi đăng nhập Facebook");
                            break;
                        }

                    }

                    scroll_up(device);
                    u.setStatusResult(i);
                    Thread.Sleep(1000);

                }
            }
            catch
            { }

        }
        public bool check_newfeed_marketplace(string device)
        {
            List<DetechModel> ls_detech = new List<DetechModel>();
            DetechModel detech = new DetechModel();
            detech.parent = "";
            detech.content = "Bạn không dùng được Marketplace";
            detech.text = "Bạn không dùng được Marketplace";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls_detech.Add(detech);
            DetechModel kq = detechFunction(device, ls_detech);
            if (kq.status)
            {
                return true;

            }
            else
                return false;
        }

        public bool load_more_newfeed_marketplace(string device)
        {
            List<DetechModel> ls_detech = new List<DetechModel>();
            DetechModel detech = new DetechModel();
            detech.parent = "";
            detech.content = "Xem tất cả";
            detech.text = "Xem tất cả";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls_detech.Add(detech);
            DetechModel kq = detechFunction(device, ls_detech);
            if (kq.status)
            {
                ClickOnLeapdroidPosition(device, kq.point);
                return true;

            }
            else
                return false;
        }

        public string getUserAgentLD(string ldid)
        {
            string useragent = "[FBAN/FB4A;FBAV/251.0.0.31.111;FBBV/188827990;FBDM/{density=3.0,width=1080,height=1920};FBLC/vi_VN;FBRV/0;FBCR/Viettel Telecom;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-G965N;FBSV/7.1.2;FBOP/1;FBCA/x86:armeabi-v7a;]";

            Newtonsoft.Json.Linq.JObject jobject = new Newtonsoft.Json.Linq.JObject();
            string pathjson = string.Format("{0}\\vms\\config\\leidian{1}.config", SettingTool.pathfolderld, ldid);
            if (File.Exists(pathjson))
            {
                try
                {
                    string json = File.ReadAllText(pathjson);
                    jobject = Newtonsoft.Json.Linq.JObject.Parse(json);
                }
                catch
                {
                }

                useragent = "[FBAN/FB4A;FBAV/251.0.0.31.111;FBBV/188827990;FBDM/{density=3.0,width=1080,height=1920};FBLC/vi_VN;FBRV/0;FBCR/Viettel Telecom;FBMF/" + jobject["propertySettings.phoneManufacturer"].ToString() + ";FBBD/" + jobject["propertySettings.phoneManufacturer"].ToString() + ";FBPN/com.facebook.katana;FBDV/" + jobject["propertySettings.phoneModel"].ToString() + ";FBSV/7.1.2;FBOP/1;FBCA/x86:armeabi-v7a;]";

            }

            return useragent;
        }
        public string getToken(Account acc)
        {
            string token = "";
            try
            {
                string path = string.Format("c:\\test\\{0}\\pictures\\temp\\{0}.txt", acc.ldid);
                copyfileToken(acc.ldid);
                //string cmd = String.Format("pull \"/storage/emulated/0/authentication\" \"{0}\"", path);
                //string kq = runAdb(acc.ldid, cmd);
                if (File.Exists(path))
                {
                    string html = File.ReadAllText(path);
                    string uid = FunctionHelper.smethod_6(html, html.IndexOf("EAAAAUa"), "\\").Trim();
                    token = Regex.Match(uid, @"([A-Z])\w+").Value;

                    if (!string.IsNullOrEmpty(token))
                    {
                        acc.token = token;

                    }

                    File.Delete(path);
                }
            }
            catch
            { }
            return token;
        }
        public string scrollLikeNewFeedGroup(userLD u, Account acc, string device, string app, int minlike, int maxlike, SettingTuongTac tuongtac, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            string message = "";
            int dem = 0;
            try
            {
                OpenLink(device, acc.app, "fb://groups/gridtab");
                Delay(3);
                List<DetechModel> lsdetech = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "group";
                data.content = "Nhóm của bạn";
                data.text = "Nhóm của bạn";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                lsdetech.Add(data);

                DetechModel kq = detechFunction(acc.ldid, lsdetech);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                }
                lsdetech = new List<DetechModel>();
                data = new DetechModel();
                data.parent = "group";
                data.content = "Nút";
                data.text = "Nút";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                lsdetech.Add(data);
            lb_loop:
                if (token.IsCancellationRequested)
                {
                    token.ThrowIfCancellationRequested();
                }
                scroll_up(acc.ldid);
                List<DetechModel> list_kq = detechFunctionListPoint(acc.ldid, lsdetech);
                if (list_kq.Count > 0)
                {
                    ClickOnLeapdroidPosition(acc.ldid, list_kq[rd.Next(0, list_kq.Count)].point);

                    int max = 0;
                    Delay(3);
                    // intoyourgroup(device, token);
                    while (dem < luot)
                    {
                        if (token.IsCancellationRequested)
                        {
                            token.ThrowIfCancellationRequested();
                        }
                        scroll_up_random(device, token);
                        Delay(1);
                        if (likePostNewfeed(acc, device, tuongtac, token))
                        {
                            max = 0;
                            dem++;
                            u.setStatusResult(dem);
                            back(device, 1);
                            goto lb_loop;
                        }
                        else
                        {
                            Delay(1);
                            //if (checkContent(device, "Gỡ khỏi thanh lối tắt"))
                            back(device, 1);

                            max++;
                            if (max >= 6)
                                return message = "| Like post complete:" + dem.ToString() + "/" + luot;
                            else
                            {
                                if (check_Facebook_has_stopped(u, device, acc, token) == false)
                                {
                                    return message = "| Like post complete:" + dem.ToString() + "/" + luot;
                                }
                            }
                            goto lb_loop;
                        }

                    }
                }


            }
            catch
            { }
            return message = "| Like post complete:" + dem.ToString() + "/" + luot; ;
        }

        public string getcookie(Account acc)
        {
            string result = "";
            string token = "";
            //   string path = string.Format("{0}\\XuanZhi\\Pictures\\temp\\{1}", SettingTool.pathdocument, acc.ldid + ".txt");
            string path = string.Format("c:\\test\\{0}\\pictures\\temp\\{0}.txt", acc.ldid);
            copyfileToken(acc.ldid);
            //  string cmd = String.Format("pull \"/storage/emulated/0/authentication\" \"{0}\"", path);
            //string kq = runAdb(acc.ldid, cmd);
            if (File.Exists(path))
            {
                string html = File.ReadAllText(path);
                string uid = FunctionHelper.smethod_6(html, html.IndexOf("EAAAAUa"), "\\").Trim();
                token = Regex.Match(uid, @"([A-Z])\w+").Value;
                File.AppendAllText(path, uid + "\n");
                if (!string.IsNullOrEmpty(token))
                    acc.token = token;
                string[] arr = html.Split('[');
                if (arr.Length > 1)
                {
                    string data = "[" + arr[1];
                    JArray jarr = JArray.Parse(data);
                    string cookie = "";
                    foreach (var item in jarr)
                    {
                        cookie = String.Format("{0};{1}={2}", cookie, item["name"].ToString(), item["value"].ToString());
                    }
                    cookie = cookie.Remove(0, 1);
                    if (!string.IsNullOrEmpty(cookie))
                        acc.cookies = cookie;
                }

                File.Delete(path);
                //if (acc.cookies.Contains(acc.id))
                //{
                // File.AppendAllText(path, token + "\n" + acc.cookies);
                result = acc.cookies;
                // }

            }
            return result;
        }

        public bool setProxyAdb(string ldid, string proxy)
        {
            try
            {
                string cmd = "shell settings put global http_proxy :0";
                string html = runAdb(ldid, cmd);
                cmd = "shell settings put global http_proxy " + proxy.Trim();
                html = runAdb(ldid, cmd);
                return true;
            }
            catch
            { }
            return false;
        }
        private string createconfig()
        {

            StringBuilder str = new StringBuilder();
            str.AppendLine("<?xml version='1.0' encoding='utf-8' standalone='yes' ?>");
            str.AppendLine("<map>");
            str.AppendLine("    <string name=\"password\">3333</string>");
            str.AppendLine("    <string name=\"host\">1.1.1.1</string>");
            str.AppendLine("    <string name=\"ssid\"></string>");
            str.AppendLine("    <string name=\"profileValues\">1|0</string>");
            str.AppendLine("    <string name=\"profile\">1</string>");
            str.AppendLine("    <boolean name=\"isConnecting\" value=\"false\" />");
            str.AppendLine("    <boolean name=\"isPAC\" value=\"false\" />");
            str.AppendLine("    <boolean name=\"settings_key_notif_vibrate\" value=\"true\" />");
            str.AppendLine("    <string name=\"user\">abcd</string>");
            str.AppendLine("    <boolean name=\"isAuth\" value=\"true\" />");
            str.AppendLine("    <boolean name=\"isBypassApps\" value=\"false\" />");
            str.AppendLine("    <string name=\"port\">2222</string>");
            str.AppendLine("    <string name=\"excludedSsid\"></string>");
            str.AppendLine("    <boolean name=\"isAutoSetProxy\" value=\"true\" />");
            str.AppendLine("    <string name=\"proxyType\">http</string>");
            str.AppendLine("    <boolean name=\"isRunning\" value=\"false\" />");
            str.AppendLine("    <string name=\"profileEntries\">Profile 1|New Profile</string>");
            str.AppendLine("    <boolean name=\"2.7.7\" value=\"true\" />");
            str.AppendLine("</map>");
            return str.ToString();
        }
        private string createconfigNouser()
        {
            StringBuilder str = new StringBuilder();
            str.AppendLine("<?xml version='1.0' encoding='utf-8' standalone='yes' ?>");
            str.AppendLine("<map>");
            str.AppendLine("    <string name=\"password\">3333</string>");
            str.AppendLine("    <string name=\"host\">1.1.1.1</string>");
            str.AppendLine("    <string name=\"ssid\"></string>");
            str.AppendLine("    <string name=\"profileValues\">1|0</string>");
            str.AppendLine("    <string name=\"profile\">1</string>");
            str.AppendLine("    <boolean name=\"isConnecting\" value=\"false\" />");
            str.AppendLine("    <boolean name=\"isPAC\" value=\"false\" />");
            str.AppendLine("    <boolean name=\"settings_key_notif_vibrate\" value=\"true\" />");
            str.AppendLine("    <string name=\"user\">abcd</string>");
            str.AppendLine("    <boolean name=\"isAuth\" value=\"false\" />");
            str.AppendLine("    <boolean name=\"isBypassApps\" value=\"false\" />");
            str.AppendLine("    <string name=\"port\">2222</string>");
            str.AppendLine("    <string name=\"excludedSsid\"></string>");
            str.AppendLine("    <boolean name=\"isAutoSetProxy\" value=\"true\" />");
            str.AppendLine("    <string name=\"proxyType\">http</string>");
            str.AppendLine("    <boolean name=\"isRunning\" value=\"false\" />");
            str.AppendLine("    <string name=\"profileEntries\">Profile 1|New Profile</string>");
            str.AppendLine("    <boolean name=\"2.7.7\" value=\"true\" />");
            str.AppendLine("</map>");
            return str.ToString();
        }

        private bool onoffproxydroid(string ldid)
        {
            runApp(ldid, "org.proxydroid");
            Delay(3);
            List<DetechModel> list_next = new List<DetechModel>();
            DetechModel done = new DetechModel();
            int i = 0;

            done = new DetechModel();
            done.parent = "";
            done.content = "TẮT";
            done.text = "TẮT";
            done.node = "//node[contains(@class,'android.widget.Switch')]";
            done.function = 1;
            list_next.Add(done);

            done = new DetechModel();
            done.parent = "";
            done.content = "OFF";
            done.text = "OFF";
            done.node = "//node[contains(@class,'android.widget.Switch')]";
            done.function = 1;
            list_next.Add(done);

            done = new DetechModel();
            done.parent = "remember";
            done.content = "";
            done.text = "Remember choice forever";
            done.node = "//node[contains(@resource-id,'com.android.settings:id/remember_forever')]";
            done.function = 1;
            list_next.Add(done);

            done = new DetechModel();
            done.parent = "";
            done.content = "OK, I know";
            done.text = "OK, I know";
            done.node = "//node[contains(@class,'android.widget.Button')]";
            done.function = 1;
            list_next.Add(done);

            done = new DetechModel();
            done.parent = "done";
            done.content = "BẬT";
            done.text = "BẬT";
            done.node = "//node[contains(@class,'android.widget.Switch')]";
            done.function = 1;
            list_next.Add(done);
            done = new DetechModel();
            done.parent = "done";
            done.content = "ON";
            done.text = "ON";
            done.node = "//node[contains(@class,'android.widget.Switch')]";
            done.function = 1;
            list_next.Add(done);

        Lb_start:
            DetechModel kq = detechFunction(ldid, list_next);
            if (kq.status)
            {

                if (kq.parent == "done")
                {
                    Delay(1);
                    return true;
                }
                else
                {
                    ClickOnLeapdroidPosition(ldid, kq.point);
                    Delay(1);
                    if (kq.parent == "remember")
                    {
                        Delay(3);
                        List<DetechModel> list_allow = new List<DetechModel>();
                        done = new DetechModel();
                        done.parent = "";
                        done.content = "Allow";
                        done.text = "Allow";
                        done.node = "//node[contains(@resource-id,'com.android.settings:id/allow')]";
                        done.function = 1;
                        list_allow.Add(done);
                        kq = detechFunction(ldid, list_allow);
                        ClickOnLeapdroidPosition(ldid, kq.point);
                    }
                    goto Lb_start;
                }
            }
            else
            {
                i++;
                Delay(1);
                if (i < 10)
                {
                    Thread.Sleep(1000);
                    goto Lb_start;
                }

            }
            return false;
        }
        public bool setProxyAuthentica(string ldid, string proxy, CancellationToken token)
        {
            try
            {

                string[] arr = proxy.Split(':');
                if (arr.Length > 2)
                {
                    if (checkApp(ldid, "com.cell47.College_Proxy") == false)
                    {
                        string path = Application.StartupPath + "\\app\\Proxy.apk";
                        if (File.Exists(path))
                        {

                            installApp(ldid, path);
                            int int_proxy = 100;
                            while (int_proxy > 0)
                            {
                                int_proxy--;
                                if (checkApp(ldid, "com.cell47.College_Proxy"))
                                {
                                    break;
                                }
                                else
                                {
                                    Thread.Sleep(1000);
                                }

                            }
                            Thread.Sleep(3000);
                        }
                    }
                    string pathproxy = String.Format("c:\\test\\{0}\\pictures", ldid);
                    if (Directory.Exists(pathproxy) == false)
                    {
                        Directory.CreateDirectory(pathproxy);
                    }
                    StringBuilder builder = new StringBuilder();
                    builder.AppendLine("<?xml version='1.0' encoding='utf-8' standalone='yes' ?>");
                    builder.AppendLine("<map>");
                    builder.AppendLine("<string name=\"Successful_Connection\">Yes</string>");
                    builder.AppendLine("<string name=\"Port\">" + arr[1].Trim() + "</string>");
                    builder.AppendLine("<string name=\"User\">" + arr[2].Trim() + "</string>");
                    builder.AppendLine("<string name=\"Address\">" + arr[0].Trim() + "</string>");
                    builder.AppendLine("<string name=\"Pass\">" + arr[3].Trim() + "</string>");
                    builder.AppendLine("</map>");
                    File.WriteAllText(pathproxy + "\\Main_Activity.xml", builder.ToString());

                    createFolder2(ldid, "/data/data/com.cell47.College_Proxy/shared_prefs");

                    string cmd = "";
                    if (SettingTool.configld.versionld == "3.x")
                        cmd = String.Format("shell mv  storage/emulated/legacy/pictures/Main_Activity.xml /data/data/com.cell47.College_Proxy/shared_prefs");
                    else
                        cmd = String.Format("shell mv  storage/emulated/0/pictures/Main_Activity.xml /data/data/com.cell47.College_Proxy/shared_prefs");

                    runAdb(ldid, cmd);

                    runApp(ldid, "com.cell47.College_Proxy");

                    List<DetechModel> list_next = new List<DetechModel>();
                    DetechModel model = new DetechModel();
                    model.parent = "ip";
                    model.content = "";
                    model.text = "";
                    model.node = "//node[contains(@resource-id,'com.cell47.College_Proxy:id/editText_address')]";
                    model.function = 1;
                    list_next.Add(model);

                    model = new DetechModel();
                    model.parent = "done";
                    model.content = "";
                    model.text = "STOP PROXY SERVICE";
                    model.node = "//node[contains(@class,'android.widget.Button')]";
                    model.function = 2;
                    list_next.Add(model);

                    model = new DetechModel();
                    model.parent = "start";
                    model.content = "";
                    model.text = "START PROXY SERVICE";
                    model.node = "//node[contains(@class,'android.widget.Button')]";
                    model.function = 1;
                    list_next.Add(model);

                    model = new DetechModel();
                    model.parent = "ad";
                    model.content = "ok";
                    model.text = "ok";
                    model.node = "//node[contains(@class,'android.widget.Button')]";
                    model.function = 1;
                    list_next.Add(model);

                    model = new DetechModel();
                    model.parent = "";
                    model.content = "ok";
                    model.text = "ok";
                    model.node = "//node[contains(@class,'android.widget.TextView')]";
                    model.function = 1;
                    list_next.Add(model);

                    model = new DetechModel();
                    model.parent = "ad";
                    model.content = "Not Now";
                    model.text = "Not Now";
                    model.node = "//node[contains(@class,'android.widget.Button')]";
                    model.function = 1;
                    list_next.Add(model);
                    int i = 0;

                Lb_start:
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();
                    DetechModel kq = detechFunction(ldid, list_next);
                    if (kq.status)
                    {
                        if (kq.function == 1)
                        {
                            ClickOnLeapdroidPosition(ldid, kq.point);

                            if (kq.parent == "ip")
                            {
                                if (string.IsNullOrEmpty(kq.data))
                                    //truong hop lan dau tien ip emty
                                    inputproxyCollege(ldid, proxy, token);
                                list_next.RemoveAt(0);
                            }

                            Thread.Sleep(1000);

                            if (kq.parent == "start")
                            {
                                Thread.Sleep(5000);
                            }
                            else
                            {
                                Thread.Sleep(2000);
                            }

                            goto Lb_start;
                        }
                        else
                        {
                            if (kq.function == 2)
                            {
                                return true;

                            }
                        }
                    }
                    else
                    {
                        i++;
                        if (i < 7)
                        {
                            Thread.Sleep(1000);
                            goto Lb_start;
                        }

                    }
                }

            }
            catch
            { }
            return false;
        }

        public bool inputproxyCollege(string ldid, string proxy, CancellationToken token)
        {
            try
            {
                string[] arr = proxy.Split(':');
                if (arr.Length > 2)
                {

                    List<DetechModel> list_next = new List<DetechModel>();
                    DetechModel model = new DetechModel();
                    model.parent = "";
                    model.content = "";
                    model.text = "";
                    model.node = "//node[contains(@resource-id,'com.cell47.College_Proxy:id/editText_address')]";
                    model.function = 1;
                    list_next.Add(model);
                    int i = 0;

                Lb_start:
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();
                    DetechModel kq = detechFunction(ldid, list_next);
                    if (kq.status)
                    {
                        DetechModel kqemail = new DetechModel();
                        List<DetechModel> list_email = new List<DetechModel>();
                        if (arr[0].Trim() != kq.data)
                        {
                            ClickOnLeapdroidPosition(ldid, kq.point);
                            if (kq.data.Length > 0)
                            {
                                runAdb(ldid, "shell input keyevent KEYCODE_MOVE_END");
                                for (int j = 0; j < kq.data.Length; j++)
                                {
                                    runAdb(ldid, "shell input keyevent KEYCODE_DEL");
                                }
                            }
                            PressOnLeapdroid_vietnamese(ldid, arr[0].Trim());

                            model = new DetechModel();
                            model.parent = "";
                            model.content = "";
                            model.text = "";
                            model.node = "//node[contains(@resource-id,'com.cell47.College_Proxy:id/editText_port')]";
                            model.function = 1;
                            list_email.Add(model);

                            kqemail = detechFunction(ldid, list_email);
                            if (kqemail.status)
                            {
                                ClickOnLeapdroidPosition(ldid, kqemail.point);
                                if (kqemail.data.Length > 0)
                                {
                                    runAdb(ldid, "shell input keyevent KEYCODE_MOVE_END");
                                    for (int j = 0; j < kqemail.data.Length; j++)
                                    {
                                        runAdb(ldid, "shell input keyevent KEYCODE_DEL");
                                    }
                                }
                                //  PressOnLeapdroid(acc.ldid, acc.first_name);
                                PressOnLeapdroid_vietnamese(ldid, arr[1].Trim());
                            }
                            if (arr.Length > 2)
                            {
                                list_email = new List<DetechModel>();
                                model = new DetechModel();
                                model.parent = "";
                                model.content = "";
                                model.text = "";
                                model.node = "//node[contains(@resource-id,'com.cell47.College_Proxy:id/editText_username')]";
                                model.function = 1;
                                list_email.Add(model);

                                kqemail = detechFunction(ldid, list_email);
                                if (kqemail.status)
                                {
                                    ClickOnLeapdroidPosition(ldid, kqemail.point);
                                    Delay(1);
                                    if (kqemail.data.Length > 0)
                                    {
                                        runAdb(ldid, "shell input keyevent KEYCODE_MOVE_END");
                                        for (int j = 0; j < kqemail.data.Length; j++)
                                        {
                                            runAdb(ldid, "shell input keyevent KEYCODE_DEL");
                                        }
                                    }

                                    //  PressOnLeapdroid(acc.ldid, acc.first_name);
                                    PressOnLeapdroid_vietnamese(ldid, arr[2].Trim());
                                }
                                list_email = new List<DetechModel>();
                                model = new DetechModel();
                                model.parent = "";
                                model.content = "";
                                model.text = "";
                                model.node = "//node[contains(@resource-id,'com.cell47.College_Proxy:id/editText_password')]";
                                model.function = 1;
                                list_email.Add(model);

                                kqemail = detechFunction(ldid, list_email);
                                if (kqemail.status)
                                {
                                    ClickOnLeapdroidPosition(ldid, kqemail.point);
                                    Delay(1);
                                    if (kqemail.data.Length > 0)
                                    {
                                        runAdb(ldid, "shell input keyevent KEYCODE_MOVE_END");
                                        for (int j = 0; j < kqemail.data.Length; j++)
                                        {
                                            runAdb(ldid, "shell input keyevent KEYCODE_DEL");
                                        }
                                    }


                                    //  PressOnLeapdroid(acc.ldid, acc.first_name);
                                    PressOnLeapdroid_vietnamese(ldid, arr[3].Trim());
                                }
                            }
                        }
                        list_email = new List<DetechModel>();
                        model = new DetechModel();
                        model.parent = "";
                        model.content = "";
                        model.text = "";
                        model.node = "//node[contains(@resource-id,'com.cell47.College_Proxy:id/proxy_start_button')]";
                        model.function = 1;
                        list_email.Add(model);

                        //kqemail = detechFunction(ldid, list_email);
                        //if (kqemail.status)
                        //{

                        //    ClickOnLeapdroidPosition(ldid, kqemail.point);
                        //    Delay(5);

                        //    list_email = new List<DetechModel>();
                        //    model = new DetechModel();
                        //    model.parent = "";
                        //    model.content = "";
                        //    model.text = "";
                        //    model.node = "//node[contains(@resource-id,'android:id/button1')]";
                        //    model.function = 1;
                        //    list_email.Add(model);

                        //    kqemail = detechFunction(ldid, list_email);
                        //    if (kqemail.status)
                        //    {
                        //        ClickOnLeapdroidPosition(ldid, kqemail.point);
                        //    }
                        //    return true;
                        //}

                    }
                    else
                    {
                        i++;
                        if (i < 10)
                        {
                            Thread.Sleep(1000);
                            goto Lb_start;
                        }

                    }
                }

            }
            catch
            { }
            return false;
        }

        public bool setVPN1111(string ldid)
        {
            try
            {

                List<DetechModel> list_next = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "";
                model.text = "";
                model.node = "//node[contains(@resource-id,'com.cloudflare.onedotonedotonedotone:id/connectionStateTv')]";
                model.function = 1;
                list_next.Add(model);
                int i = 0;

            Lb_start:
                DetechModel kq = detechFunction(ldid, list_next);
                if (kq.status)
                {
                    List<DetechModel> list_email = new List<DetechModel>();
                    model = new DetechModel();
                    model.parent = "";
                    model.content = "";
                    model.text = "";
                    model.node = "//node[contains(@resource-id,'com.cloudflare.onedotonedotonedotone:id/launchSwitch')]";
                    model.function = 1;
                    list_email.Add(model);

                    DetechModel kqemail = detechFunction(ldid, list_email);

                    if (kq.data == "disconnected")
                    {

                        if (kqemail.status)
                        {
                            ClickOnLeapdroidPosition(ldid, kqemail.point);
                            Delay(5);
                            return true;
                        }

                    }
                    else
                    {
                        if (kq.data == "paused")
                        {
                            if (kqemail.status)
                            {
                                //stop
                                ClickOnLeapdroidPosition(ldid, kqemail.point);
                                Delay(1);
                                ClickOnLeapdroidPosition(ldid, kqemail.point);
                                Delay(5);
                                return true;
                            }

                        }
                        else
                        {
                            if (kqemail.status)
                            {
                                ClickOnLeapdroidPosition(ldid, kqemail.point);
                                Delay(3);
                                List<DetechModel> list_open = new List<DetechModel>();
                                model = new DetechModel();
                                model.parent = "";
                                model.content = "";
                                model.text = "Until I turn it back on";
                                model.node = "//node[contains(@resource-id,'com.cloudflare.onedotonedotonedotone:id/title')]";
                                model.function = 1;
                                list_open.Add(model);
                                DetechModel kqback = detechFunction(ldid, list_open);
                                if (kqback.status)
                                {
                                    ClickOnLeapdroidPosition(ldid, kqback.point);
                                    Delay(1);

                                }
                                ClickOnLeapdroidPosition(ldid, kqemail.point);
                                Delay(5);
                                return true;
                            }
                        }
                    }
                }
                else
                {
                    i++;
                    if (i < 10)
                    {
                        Thread.Sleep(1000);
                        goto Lb_start;
                    }

                }


            }
            catch
            { }
            return false;
        }

        public bool setKeyVPN1111(string ldid, string key)
        {
            try
            {

                int i = 0;

            Lb_start:
                DetechModel kq = RunDetechFunction(ldid, SettingTool.lang.list_keyvpn);
                if (kq.status)
                {
                    switch (kq.function)
                    {
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldid, kq.point);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(ldid, kq.point);
                                Delay(1);
                                PressOnLeapdroid_vietnamese(ldid, key);
                                List<DetechModel> list_email = new List<DetechModel>();
                                DetechModel model = new DetechModel();
                                model.parent = "";
                                model.content = "";
                                model.text = "";
                                model.node = "//node[contains(@resource-id,'com.cloudflare.onedotonedotonedotone:id/addBtn')]";
                                model.function = 1;
                                list_email.Add(model);
                                DetechModel kqemail = detechFunction(ldid, list_email);

                                if (kqemail.status)
                                {
                                    ClickOnLeapdroidPosition(ldid, kqemail.point);
                                    Delay(5);
                                    return true;
                                }
                                break;
                            }
                    }
                    goto Lb_start;
                }
                else
                {
                    i++;
                    if (i < 10)
                    {
                        Thread.Sleep(1000);
                        goto Lb_start;
                    }

                }


            }
            catch
            { }
            return false;
        }
        public bool checkAppProxy(string ldID)
        {
            try
            {
                string html = runAdb(ldID, "shell pm list packages -3");

                if (html.Contains("com.cell47.College_Proxy"))
                    return true;

                else
                    return false;
            }
            catch { }
            return false;
        }
        public bool checkApp(string ldID, string package)
        {
            string html = null;
            int i = 0;
            try
            {
            loops:
                html = runAdb(ldID, "shell pm list packages -3");
                if (string.IsNullOrEmpty(html))
                {
                    i++;
                    if (i < 3)
                    {
                        Delay(1);
                        goto loops;
                    }

                }

                if (html.Contains(package))
                    return true;
                else
                {
                    if (html.Contains("device not found") || html.Contains("Command Line Management"))
                    {
                        return true;
                    }
                    else
                    {
                        File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + " check app L1 " + html);
                        return false;
                    }
                }

            }
            catch (Exception ex)
            {
                File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + " check app L2 " + html);
                File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + " check app ex " + ex.ToString());
            }
            if (string.IsNullOrEmpty(html))
                return true;
            else
            {
                File.AppendAllText(String.Format("{0}\\logs\\{1}.txt", Application.StartupPath, ldID), DateTime.Now.ToString() + " check app L3" + html);
                return false;
            }

        }
        public DetechModel detechFunctiondesc(string ldID, List<DetechModel> list_detech, int vitri = 1)
        {
            DetechModel kq = new DetechModel();
            string html = "";
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);

                html = readFile(ldID, filename).ToLower();
                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                document.LoadHtml(html);
                int i = 0;
                foreach (DetechModel model in list_detech)
                {
                    if (html.Contains(model.content.ToLower()))
                    {
                        if (String.IsNullOrEmpty(model.node))
                        {
                            kq = model;
                            kq.status = true;
                            kq.function = model.function;
                            kq.point = point;
                            kq.parent = model.parent;
                            return kq;
                        }
                        else
                        {
                            HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(model.node.ToLower());
                            if (nodes != null)
                            {
                                foreach (HtmlNode node in nodes)
                                {
                                    string enable = node.Attributes["enabled"].Value.ToString();
                                    if (enable == "true")
                                    {
                                        try
                                        {

                                            string text = node.Attributes["text"].Value.ToString();
                                            string desc = node.Attributes["content-desc"].Value.ToString();
                                            if (text.Contains(model.text.ToLower()) || desc.Contains(model.text.ToLower()))
                                            {
                                                i++;
                                                if (i == vitri)
                                                {
                                                    string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                                    string[] arr = bound.Split(']');
                                                    if (arr.Length > 0)
                                                    {
                                                        kq = model;
                                                        string[] arr1 = arr[0].Split(',');
                                                        point.X = Convert.ToInt32(arr1[0]);
                                                        point.Y = Convert.ToInt32(arr1[1]);
                                                        kq.status = true;
                                                        kq.function = model.function;
                                                        kq.point = point;
                                                        kq.parent = model.parent;
                                                        kq.data = node.Attributes["content-desc"].Value.ToString();

                                                        return kq;
                                                    }
                                                }
                                            }

                                        }
                                        catch
                                        {

                                        }

                                    }

                                }
                            }

                        }
                    }
                }

            }
            catch (Exception exx) { exx.ToString(); }

            return kq;
        }
        public string deleteDevices(string ldID, Account acc, string app, CancellationToken token)
        {
            OpenLink(ldID, "com.facebook.katana", "fb://account_settings");
            Delay(3);
            try
            {
                int step = 0;
                List<DetechModel> ls_detech = new List<DetechModel>();
                DetechModel done = new DetechModel();
                done.parent = "view";
                done.content = "Xem tất cả";
                done.text = "Xem tất cả";
                done.node = "//node[contains(@class,'android.widget.TextView')]";
                done.function = 1;
                ls_detech.Add(done);

                done = new DetechModel();
                done.parent = "";
                done.content = "Bảo mật và đăng nhập";
                done.text = "Bảo mật và đăng nhập";
                done.node = "//node[contains(@class,'android.widget.Button')]";
                done.function = 1;
                ls_detech.Add(done);

                done = new DetechModel();
                done.parent = "";
                done.content = "Đăng xuất khỏi tất cả";
                done.text = "Đăng xuất khỏi tất cả";
                done.node = "//node[contains(@class,'android.widget.Button')]";
                done.function = 1;
                ls_detech.Add(done);

                done = new DetechModel();
                done.parent = "done";
                done.content = "Đăng xuất khỏi tất cả";
                done.text = "Đăng xuất";
                done.node = "//node[contains(@class,'android.widget.Button')]";
                done.function = 1;
                ls_detech.Add(done);

                //4x
                done = new DetechModel();
                done.parent = "logout";
                done.content = "Đăng xuất";
                done.text = "Đăng xuất";
                done.node = "//node[contains(@class,'android.view.View')]";
                done.function = 1;
                ls_detech.Add(done);

                done = new DetechModel();
                done.parent = "";
                done.content = "Tùy chọn đăng nhập";
                done.text = "Tùy chọn đăng nhập";
                done.node = "//node[contains(@class,'android.widget.Button')]";
                done.function = 1;
                ls_detech.Add(done);

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources._1_logout_alldevices);
                ls_name.Add("1_logoutall");

                ls_image.Add(Properties.Resources._1_logoutdone_3x);
                ls_name.Add("1_done");

                ls_image.Add(Properties.Resources._1_logout);
                ls_name.Add("1_logout");

                ls_image.Add(Properties.Resources._1_more_device_3x);
                ls_name.Add("1_view");

                ls_image.Add(Properties.Resources._1_moredevices_4x);
                ls_name.Add("1_view");

                step = 0;
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                DetechModel kq = new DetechModel();
                kq = detechFunction(ldID, ls_detech);

                if (!kq.status)
                    kq = detechFunctionCatchImage(ldID, ls_image, ls_name);

                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                if (kq.parent == "logout")
                                {
                                    Delay(3);
                                    scroll_up(ldID);
                                    scroll_up(ldID);
                                }

                                if (kq.parent == "done")
                                {
                                    if (SettingTool.configld.language == "English")
                                        return "logout all devices complete";
                                    else
                                        return "Đăng xuất khỏi các thiết bị thành công";
                                }
                                break;
                            }
                        case 2:
                            {

                                Delay(1);
                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    Delay(1);
                    //scroll_up_short(ldID);
                    step++;
                    if (step <= 5)
                    {
                        goto Lb_start;
                    }
                }
            }
            catch
            { }
            if (SettingTool.configld.language == "English")
                return "logout all devices fail";
            else
                return "Đăng xuất khỏi các thiết bị không thành công";
        }
        public void ganFacebookLD(Account acc)
        {
            File.WriteAllText(String.Format("{0}\\LD\\{1}.ninja", Application.StartupPath, acc.ldid), acc.Id_account.ToString());
        }

        public bool disableNotificationFacebook(string ldid)
        {
            //
            try
            {
                string cmd = "shell am start -a android.settings.APPLICATION_SETTINGS";
                runAdb(ldid, cmd);

                List<DetechModel> ls_detech = new List<DetechModel>();
                DetechModel done = new DetechModel();

                done = new DetechModel();
                done.parent = "";
                done.content = "";
                done.text = "Hiển thị thông báo";
                done.node = "//node[contains(@resource-id,'com.android.settings:id/notification_switch')]";
                done.function = 1;
                ls_detech.Add(done);

                done = new DetechModel();
                done.parent = "";
                done.content = "";
                done.text = "Facebook";
                done.node = "//node[contains(@resource-id,'com.android.settings:id/app_name')]";
                done.function = 1;
                ls_detech.Add(done);



                done = new DetechModel();
                done.parent = "";
                done.content = "";
                done.text = "OK";
                done.node = "//node[contains(@class,'android.widget.Button')]";
                done.function = 2;
                ls_detech.Add(done);
                int step = 0;
            Lb_start:
                DetechModel kq = new DetechModel();
                kq = detechFunction(ldid, ls_detech);

                if (kq.status)
                {

                    switch (kq.function)
                    {
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldid, kq.point);

                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(ldid, kq.point);
                                return true;
                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    Delay(1);
                    //scroll_up_short(ldID);
                    step++;
                    if (step <= 5)
                    {
                        goto Lb_start;
                    }
                }
            }
            catch
            {

            }
            return true;
        }
        public string removeGroup(userLD u, Account acc, SettingTuongTac tuongtac, CancellationToken token)
        {
            #region bat dau rời nhóm


            acc.app = "com.facebook.katana";


            LDController controler = new LDController();
            string access_token = getToken(acc);
            Profile_Controller profile = new Profile_Controller();
            string userAgent = getUserAgentLD(acc.ldid);
            List<GroupFB> ls_group = profile.LoadInfoGroup(access_token, "", acc, userAgent);
            int count = 0;

            if (ls_group.Count() > 0)
            {
                int dem = 0;
                u.setStatusSum(tuongtac.numremovegroup_min);
                foreach (GroupFB grId in ls_group)
                {

                    if (token.IsCancellationRequested)
                        break;
                    if (tuongtac.remove_choduyet)
                    {
                        if (grId.status == "CAN_POST_AFTER_APPROVAL")
                        {
                            if (LeaveGroup(acc.ldid, "com.facebook.katana", grId.id, token))
                            {
                                dem++;
                                goto Lb_Next;
                            }
                        }
                    }
                    if (tuongtac.remove_thanhvien)
                    {
                        if (grId.member < tuongtac.remove_num_thanhvien)
                        {
                            if (LeaveGroup(acc.ldid, "com.facebook.katana", grId.id, token))
                            {
                                dem++;
                                goto Lb_Next;
                            }
                            else
                            {
                                if (check_Facebook_has_stopped(u, acc.ldid, acc, token) == false)
                                {
                                    return string.Format("Đã rời nhóm {0}/{1}", dem, tuongtac.numremovegroup_min);
                                }
                            }
                        }
                    }
                    if (tuongtac.remove_post)
                    {

                        int totalpost = profile.countPostToday(SettingTool.configld.cookies, grId.id);
                        if (tuongtac.remove_num_post > totalpost && totalpost > 0)
                        {
                            if (LeaveGroup(acc.ldid, "com.facebook.katana", grId.id, token))
                            {
                                dem++;
                                goto Lb_Next;
                            }

                        }
                    }
                Lb_Next:
                    u.setStatusResult(dem);
                    if (dem >= tuongtac.numremovegroup_min)
                    {
                        break;
                    }
                    else
                    {
                        Random rd = new Random();
                        int delay = rd.Next(tuongtac.delaymin, tuongtac.delaymax);
                        Thread.Sleep(delay * 1000);
                    }

                }
                return string.Format("Đã rời nhóm {0}/{1}", dem, tuongtac.numremovegroup_min);
            }
            else
            {
                return "Tài khoản chưa tham gia nhóm";
            }
            #endregion
        }

        public string postGroup(userLD u, Account acc, SettingTuongTac tuongtac, List<string> list_pathpost, int maxpost, CancellationToken token)
        {
            #region bắt đầu đăng bài

            acc.app = "com.facebook.katana";


            LDController controler = new LDController();
            string access_token = getToken(acc);
            Profile_Controller profile = new Profile_Controller();
            string userAgent = getUserAgentLD(acc.ldid);
            List<GroupFB> ls_group = profile.LoadInfoGroup(access_token, "", acc, userAgent);
            ls_group = ls_group.OrderBy(a => Guid.NewGuid()).ToList();
            if (ls_group.Count() > 0)
            {
                int dem = 0;


                foreach (GroupFB grId in ls_group)
                {

                    if (token.IsCancellationRequested)
                        break;
                    if (grId.status == "CAN_POST_WITHOUT_APPROVAL")
                    {
                        Random rd = new Random();

                        string pathpost = "";
                        if (tuongtac.postgrouprandompost)
                        {
                            pathpost = list_pathpost[rd.Next(0, list_pathpost.Count)];
                        }
                        else
                        {
                            pathpost = list_pathpost[0];
                        }

                        string data = File.ReadAllText(pathpost);

                        JObject jobj = JObject.Parse(data);
                        string mess = jobj["message"].ToString();
                        List<string> list_pic = new List<string>();
                        try
                        {
                            foreach (var item in jobj["list_path"])
                            {
                                string linkpic = item.ToString();
                                if (linkpic.StartsWith("http") && linkpic.Contains(".jpg"))
                                {
                                    System.Drawing.Image image = null;
                                    try
                                    {
                                        System.Net.HttpWebRequest webRequest = (System.Net.HttpWebRequest)System.Net.HttpWebRequest.Create(linkpic);
                                        webRequest.AllowWriteStreamBuffering = true;
                                        webRequest.Timeout = 30000;

                                        System.Net.WebResponse webResponse = webRequest.GetResponse();
                                        System.IO.Stream stream = webResponse.GetResponseStream();
                                        image = System.Drawing.Image.FromStream(stream);
                                        webResponse.Close();
                                    }
                                    catch (Exception ex)
                                    {
                                        return null;
                                    }
                                    if (image != null)
                                    {
                                        linkpic = Application.StartupPath + "\\picture\\" + rd.Next(10000) + ".jpg";
                                        image.Save(linkpic);
                                    }

                                }
                                if (File.Exists(linkpic))
                                {
                                    list_pic.Add(linkpic);
                                }
                            }
                        }
                        catch
                        { }
                        string result = OpenLink(acc.ldid, "com.facebook.katana", "fb://group/" + grId.id);
                        Thread.Sleep(4000);
                        if (!result.Contains("Error"))
                        {
                            if (list_pic.Count > 0)
                            {
                                #region dang bai kem anh
                                string status = PostImagesGroup(u, acc, acc.ldid, mess, list_pic, token, false);
                                if (status.Contains("thành công") || status.Contains("successful"))
                                {
                                    dem++;
                                    maxpost = maxpost + 1;
                                    string pathlogfile = string.Format("{0}\\logs\\{1}\\PostGroup_{2}.txt", Application.StartupPath, acc.id.Trim(), DateTime.Now.ToString("MM-dd-yy"));
                                    File.WriteAllText(pathlogfile, maxpost.ToString());
                                    //xoa bài viết
                                    string filename = DateTime.Now.ToString("dd-MM-yy-hh-mm");
                                    string pathloggroup = string.Format("{0}\\logs\\{1}\\PostGroup", Application.StartupPath, acc.id.Trim());
                                    if (Directory.Exists(pathloggroup) == false)
                                    {
                                        Directory.CreateDirectory(pathloggroup);
                                    }
                                    try
                                    {
                                        File.Move(pathpost, string.Format("{0}\\{1}.txt", pathloggroup, filename));
                                    }
                                    catch
                                    { }

                                }
                                #endregion
                            }
                            else
                            {
                                #region dang bai status
                                string status = PostContent(u, acc, acc.ldid, "com.facebook.katana", mess, false, token);
                                if (status.Contains("thành công") || status.Contains("successful"))
                                {
                                    dem++;
                                    maxpost = maxpost + 1;
                                    string pathlogfile = string.Format("{0}\\logs\\{1}\\PostGroup_{2}.txt", Application.StartupPath, acc.id.Trim(), DateTime.Now.ToString("MM-dd-yy"));
                                    File.WriteAllText(pathlogfile, maxpost.ToString());
                                    //xoa bài viết
                                    string filename = DateTime.Now.ToString("dd-MM-yy-hh-mm");
                                    string pathloggroup = string.Format("{0}\\logs\\{1}\\PostGroup", Application.StartupPath, acc.id.Trim());
                                    if (Directory.Exists(pathloggroup) == false)
                                    {
                                        Directory.CreateDirectory(pathloggroup);
                                    }

                                    File.Move(pathpost, string.Format("{0}\\{1}.txt", pathloggroup, filename));
                                }
                                #endregion

                            }
                            if (dem >= tuongtac.postgroup_minday)
                            {
                                break;
                            }
                            if (maxpost >= tuongtac.postgroup_maxday)
                            {
                                break;
                            }

                            int delay = rd.Next(tuongtac.delaymin, tuongtac.delaymax);
                            Thread.Sleep(delay * 1000);
                        }

                    }

                }
                return string.Format("Post group complete {0}/{1}", dem, tuongtac.postgroup_minday);
            }
            else
            {
                if (SettingTool.configld.language == "English")
                    return "account fb haven't group";
                else
                    return "Tài khoản chưa tham gia nhóm";
            }
            #endregion
        }

        public string postProfile(userLD u, Account acc, SettingTuongTac tuongtac, List<string> list_pathpost, int maxpost, CancellationToken token)
        {
            #region bắt đầu đăng bài

            acc.app = "com.facebook.katana";


            LDController controler = new LDController();

            Profile_Controller profile = new Profile_Controller();

            int dem = 0;
            Random rd = new Random();
            string pathpost = "";
            if (tuongtac.postprofile_randompost)
            {
                pathpost = list_pathpost[rd.Next(0, list_pathpost.Count)];
            }
            else
            {
                pathpost = list_pathpost[0];
            }

            string data = File.ReadAllText(pathpost);

            JObject jobj = JObject.Parse(data);
            string mess = jobj["message"].ToString();
            List<string> list_pic = new List<string>();
            try
            {
                foreach (var item in jobj["list_path"])
                {
                    string linkpic = item.ToString();
                    if (linkpic.StartsWith("http") && linkpic.Contains(".jpg"))
                    {
                        System.Drawing.Image image = null;
                        try
                        {
                            System.Net.HttpWebRequest webRequest = (System.Net.HttpWebRequest)System.Net.HttpWebRequest.Create(linkpic);
                            webRequest.AllowWriteStreamBuffering = true;
                            webRequest.Timeout = 30000;

                            System.Net.WebResponse webResponse = webRequest.GetResponse();
                            System.IO.Stream stream = webResponse.GetResponseStream();
                            image = System.Drawing.Image.FromStream(stream);
                            webResponse.Close();
                        }
                        catch (Exception ex)
                        {
                            return null;
                        }
                        if (image != null)
                        {
                            linkpic = Application.StartupPath + "\\picture\\" + rd.Next(10000) + ".jpg";
                            image.Save(linkpic);
                        }

                    }
                    if (File.Exists(linkpic))
                    {
                        list_pic.Add(linkpic);
                    }
                }
            }
            catch
            { }
            if (list_pic.Count > 0)
            {
                #region dang bai kem anh
                string status = PostImages(u, acc, acc.ldid, acc.app, mess, list_pic, list_pic.Count, token, false, false);
                if (status.Contains("thành công") || status.Contains("successful"))
                {
                    dem++;
                    maxpost = maxpost + 1;
                    string pathlogfile = string.Format("{0}\\logs\\{1}\\PostProfile_{2}.txt", Application.StartupPath, acc.id.Trim(), DateTime.Now.ToString("MM-dd-yy"));
                    File.WriteAllText(pathlogfile, maxpost.ToString());
                    //xoa bài viết
                    string filename = DateTime.Now.ToString("dd-MM-yy-hh-mm");
                    string pathloggroup = string.Format("{0}\\logs\\{1}\\PostProfile", Application.StartupPath, acc.id.Trim());
                    if (Directory.Exists(pathloggroup) == false)
                    {
                        Directory.CreateDirectory(pathloggroup);
                    }
                    try
                    {
                        File.Move(pathpost, string.Format("{0}\\{1}.txt", pathloggroup, filename));
                    }
                    catch
                    { }

                }
                #endregion
            }
            else
            {
                #region dang bai status
                string status = PostContent(u, acc, acc.ldid, "com.facebook.katana", mess, false, token);
                if (status.Contains("thành công") || status.Contains("successful"))
                {
                    dem++;
                    maxpost = maxpost + 1;
                    string pathlogfile = string.Format("{0}\\logs\\{1}\\PostProfile_{2}.txt", Application.StartupPath, acc.id.Trim(), DateTime.Now.ToString("MM-dd-yy"));
                    File.WriteAllText(pathlogfile, maxpost.ToString());
                    //xoa bài viết
                    string filename = DateTime.Now.ToString("dd-MM-yy-hh-mm");
                    string pathloggroup = string.Format("{0}\\logs\\{1}\\PostProfile", Application.StartupPath, acc.id.Trim());
                    if (Directory.Exists(pathloggroup) == false)
                    {
                        Directory.CreateDirectory(pathloggroup);
                    }

                    File.Move(pathpost, string.Format("{0}\\{1}.txt", pathloggroup, filename));
                }
                #endregion

            }

            int delay = rd.Next(tuongtac.delaymin, tuongtac.delaymax);
            Thread.Sleep(delay * 1000);

            return string.Format("Post profile complete {0}/{1}", dem, tuongtac.postgroup_minday);

            #endregion
        }

        public bool unlockNgaySinh(userLD u, Account acc, DataGridViewRow dr, string newpass, CancellationToken token)
        {
            try
            {

                DateTime ngaysinh = DateTime.ParseExact(acc.birthday, "MM/dd/yyyy", System.Globalization.CultureInfo.InvariantCulture);
                int ngay = ngaysinh.Day;
                int thang = ngaysinh.Month;
                int nam = ngaysinh.Year;
                Bitmap img_ngay = null;
                Bitmap img_thang = null;
                Bitmap img_nam = null;

                u.setStatus(acc.ldid, "Birthday : " + acc.birthday);
                #region ngay
                switch (ngay)
                {
                    case 1:
                        img_ngay = Properties.Resources._3x_ngay_sinh_1;
                        break;
                    case 2:
                        img_ngay = Properties.Resources._3x_ngay_sinh_2;
                        break;
                    case 3:
                        img_ngay = Properties.Resources._3x_ngay_sinh_3;
                        break;
                    case 4:
                        img_ngay = Properties.Resources._3x_ngay_sinh_4;
                        break;
                    case 5:
                        img_ngay = Properties.Resources._3x_ngay_sinh_5;
                        break;
                    case 6:
                        img_ngay = Properties.Resources._3x_ngay_sinh_6;
                        break;
                    case 7:
                        img_ngay = Properties.Resources._3x_ngay_sinh_7;
                        break;
                    case 8:
                        img_ngay = Properties.Resources._3x_ngay_sinh_8;
                        break;
                    case 9:
                        img_ngay = Properties.Resources._3x_ngay_sinh_9;
                        break;
                    case 10:
                        img_ngay = Properties.Resources._3x_ngay_sinh_10;
                        break;
                    case 11:
                        img_ngay = Properties.Resources._3x_ngay_sinh_11;
                        break;
                    case 12:
                        img_ngay = Properties.Resources._3x_ngay_sinh_12;
                        break;
                    case 13:
                        img_ngay = Properties.Resources._3x_ngay_sinh_13;
                        break;
                    case 14:
                        img_ngay = Properties.Resources._3x_ngay_sinh_14;
                        break;
                    case 15:
                        img_ngay = Properties.Resources._3x_ngay_sinh_15;
                        break;
                    case 16:
                        img_ngay = Properties.Resources._3x_ngay_sinh_16;
                        break;
                    case 17:
                        img_ngay = Properties.Resources._3x_ngay_sinh_17;
                        break;
                    case 18:
                        img_ngay = Properties.Resources._3x_ngay_sinh_18;
                        break;
                    case 19:
                        img_ngay = Properties.Resources._3x_ngay_sinh_19;
                        break;
                    case 20:
                        img_ngay = Properties.Resources._3x_ngay_sinh_20;
                        break;
                    case 21:
                        img_ngay = Properties.Resources._3x_ngay_sinh_21;
                        break;
                    case 22:
                        img_ngay = Properties.Resources._3x_ngay_sinh_22;
                        break;
                    case 23:
                        img_ngay = Properties.Resources._3x_ngay_sinh_23;
                        break;
                    case 24:
                        img_ngay = Properties.Resources._3x_ngay_sinh_24;
                        break;
                    case 25:
                        img_ngay = Properties.Resources._3x_ngay_sinh_25;
                        break;
                    case 26:
                        img_ngay = Properties.Resources._3x_ngay_sinh_26;
                        break;
                    case 27:
                        img_ngay = Properties.Resources._3x_ngay_sinh_27;
                        break;
                    case 28:
                        img_ngay = Properties.Resources._3x_ngay_sinh_28;
                        break;
                    case 29:
                        img_ngay = Properties.Resources._3x_ngay_sinh_29;
                        break;
                    case 30:
                        img_ngay = Properties.Resources._3x_ngay_sinh_30;
                        break;
                    case 31:
                        img_ngay = Properties.Resources._3x_ngay_sinh_31;
                        break;

                }
                #endregion
                #region thang
                switch (thang)
                {
                    case 1:
                        img_thang = Properties.Resources._3x_ngay_sinh_thang_1;
                        break;
                    case 2:
                        img_thang = Properties.Resources._3x_ngay_sinh_thang_2;
                        break;
                    case 3:
                        img_thang = Properties.Resources._3x_ngay_sinh_thang_3;
                        break;
                    case 4:
                        img_thang = Properties.Resources._3x_ngay_sinh_thang_4;
                        break;
                    case 5:
                        img_thang = Properties.Resources._3x_ngay_sinh_thang_5;
                        break;
                    case 6:
                        img_thang = Properties.Resources._3x_ngay_sinh_thang_6;
                        break;
                    case 7:
                        img_thang = Properties.Resources._3x_ngay_sinh_thang_7;
                        break;
                    case 8:
                        img_thang = Properties.Resources._3x_ngay_sinh_thang_8;
                        break;
                    case 9:
                        img_thang = Properties.Resources._3x_ngay_sinh_thang_9;
                        break;
                    case 10:
                        img_thang = Properties.Resources._3x_ngay_sinh_thang_10;
                        break;
                    case 11:
                        img_thang = Properties.Resources._3x_ngay_sinh_thang_11;
                        break;
                    case 12:
                        img_thang = Properties.Resources._3x_ngay_sinh_thang_12;
                        break;
                }
                #endregion
                #region nam
                switch (nam)
                {
                    case 1960:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1960;
                        break;
                    case 1961:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1961;
                        break;
                    case 1962:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1962;
                        break;
                    case 1963:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1963;
                        break;
                    case 1964:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1964;
                        break;
                    case 1965:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1965;
                        break;
                    case 1966:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1966;
                        break;
                    case 1967:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1967;
                        break;
                    case 1968:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1968;
                        break;
                    case 1969:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1969;
                        break;
                    case 1970:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1970;
                        break;
                    case 1971:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1971;
                        break;
                    case 1972:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1972;
                        break;
                    case 1973:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1973;
                        break;
                    case 1974:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1974;
                        break;
                    case 1975:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1975;
                        break;
                    case 1976:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1976;
                        break;
                    case 1977:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1977;
                        break;
                    case 1978:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1978;
                        break;
                    case 1979:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1979;
                        break;
                    case 1980:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1980;
                        break;
                    case 1981:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1981;
                        break;
                    case 1982:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1982;
                        break;
                    case 1983:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1983;
                        break;
                    case 1984:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1984;
                        break;
                    case 1985:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1985;
                        break;
                    case 1986:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1986;
                        break;
                    case 1987:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1987;
                        break;
                    case 1988:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1988;
                        break;

                    case 1989:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1989;
                        break;
                    case 1990:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1990;
                        break;
                    case 1991:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1991;
                        break;
                    case 1992:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1992;
                        break;
                    case 1993:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1993;
                        break;
                    case 1994:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1994;
                        break;
                    case 1995:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1995;
                        break;
                    case 1996:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1996;
                        break;
                    case 1997:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1997;
                        break;
                    case 1998:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1998;
                        break;
                    case 1999:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_1999;
                        break;
                    case 2000:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_2000;
                        break;
                    case 2001:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_2001;
                        break;
                    case 2002:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_2002;
                        break;
                    case 2003:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_2003;
                        break;
                    case 2004:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_2004;
                        break;
                    case 2005:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_2005;
                        break;
                    case 2006:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_2006;
                        break;
                    case 2007:
                        img_nam = Properties.Resources._3x_ngay_sinh_nam_2007;
                        break;
                }
                #endregion

                int step = 0;
                bool has_clickbirthday = false;
                bool has_finish = false;

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources._3x_checkpoint_tiep_tuc);
                ls_name.Add("1_tieptuc");

            Lb_start:
                if (token.IsCancellationRequested)
                    return false;
                DetechModel kq = new DetechModel();
                kq = RunDetechFunction(acc.ldid, SettingTool.lang.list_checkpoint);

                if (!kq.status)
                {
                    kq = detechFunctionCatchImage(acc.ldid, ls_image, ls_name);
                }

                if (kq.status)
                {
                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                    //check co phai tam khoa hay khong
                    List<DetechImageModel> ls_images = new List<DetechImageModel>();
                    DetechImageModel image = new DetechImageModel();
                    image.name = "step1";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_tam_khoa;
                    ls_images.Add(image);

                    image = new DetechImageModel();
                    image.name = "step1";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_tam_khoa_1;
                    ls_images.Add(image);

                    image = new DetechImageModel();
                    image.name = "step2";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_select;
                    ls_images.Add(image);


                    image = new DetechImageModel();
                    image.name = "step3";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_ngay_sinh;
                    ls_images.Add(image);


                    image = new DetechImageModel();
                    image.name = "step4";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_nhap_ngay_sinh;
                    ls_images.Add(image);


                    image = new DetechImageModel();
                    image.name = "newpass";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_new_pass;
                    ls_images.Add(image);

                    image = new DetechImageModel();
                    image.name = "boqua";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_bo_qua;
                    ls_images.Add(image);

                    image = new DetechImageModel();
                    image.name = "tennguoidung";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_gui;
                    ls_images.Add(image);

                    image = new DetechImageModel();
                    image.name = "tennguoidung";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_gui2;
                    ls_images.Add(image);

                    image = new DetechImageModel();
                    image.name = "theodoi";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_step6_nguoi_theo_doi;
                    ls_images.Add(image);

                    image = new DetechImageModel();
                    image.name = "baove";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_bao_ve_tai_khoan;
                    ls_images.Add(image);

                    image = new DetechImageModel();
                    image.name = "gotonewfeed";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_di_toi_bang_tin;
                    ls_images.Add(image);

                    image = new DetechImageModel();
                    image.name = "finish";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_ok;
                    ls_images.Add(image);

                    image = new DetechImageModel();
                    image.name = "loi";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_ngay_sinh_loi;
                    ls_images.Add(image);

                    List<DetechImageModel> ls_typecheckpoint = new List<DetechImageModel>();
                    image = new DetechImageModel();
                    image.name = "CP ảnh";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_hinh_anh_ban_be;
                    ls_typecheckpoint.Add(image);

                    image = new DetechImageModel();
                    image.name = "CP ngày sinh";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_ngay_sinh;
                    ls_typecheckpoint.Add(image);

                    image = new DetechImageModel();
                    image.name = "CP Email";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_yeu_cau_email;
                    ls_typecheckpoint.Add(image);

                    List<DetechImageModel> ls_next = new List<DetechImageModel>();
                    image = new DetechImageModel();
                    image.name = "next";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_tiep_tuc;
                    ls_next.Add(image);

                    image = new DetechImageModel();
                    image.name = "next";
                    image.function = 1;
                    image.img = Properties.Resources._3x_checkpoint_tiep_tuc2;
                    ls_next.Add(image);

                    image = new DetechImageModel();
                    image.name = "next";
                    image.function = 1;
                    image.img = Properties.Resources._3x_xoabl;
                    ls_next.Add(image);

                    image = new DetechImageModel();
                    image.name = "notContinue";
                    image.function = 1;
                    image.img = Properties.Resources.zl_noti_red;
                    ls_images.Insert(0, image);

                    List<string> list_pic = System.IO.Directory.GetFiles("C:\\Test", "*.png").ToList();

                    int int_file = list_pic.Count;
                    int int_dem = 30;
                    while (int_dem > 0)
                    {
                        if (token.IsCancellationRequested)
                        {
                            return false;
                        }
                        kq = detechFunctionCatchImages(acc.ldid, ls_images);
                        if (!kq.status)
                            kq = detechFunctionCatchImages(acc.ldid, ls_next);
                        if (kq.status)
                        {
                            var screen = ScreenShoot(acc.ldid);
                            // screen.Save("C:\\Test\\" + int_file + ".png");
                            int_file++;
                            switch (kq.parent)
                            {
                                case "notContinue":
                                    {
                                        NguoiDung_Bll nguoidung_bll = new NguoiDung_Bll();
                                        acc.Thongbao = "Ngày sinh không đúng";
                                        nguoidung_bll.updateStatus(acc);
                                        return false;
                                    }
                                case "next":
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                        Delay(2);
                                        break;
                                    }

                                case "step1":
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, 155, 265);
                                        Delay(2);
                                        //kiem tra loai checkpoint 
                                        break;
                                    }
                                case "step2":
                                    {
                                        List<DetechModel> list_kqcheckpoint = detechFunctionCatchImagesListPoint(acc.ldid, ls_typecheckpoint);
                                        if (list_kqcheckpoint.Count > 0)
                                        {
                                            string type = "";

                                            foreach (DetechModel kqcheckpoint in list_kqcheckpoint)
                                            {
                                                type = string.Format("{0} {1}", type, kqcheckpoint.parent);

                                            }
                                            dr.Cells["Message"].Value = type;

                                            NguoiDung_Bll nguoidung_bll = new NguoiDung_Bll();
                                            acc.Thongbao = type;
                                            nguoidung_bll.updateStatus(acc);
                                            if (type.Contains("CP ngày sinh") == false)
                                            {
                                                return false;
                                            }
                                            else
                                            {
                                                if (string.IsNullOrEmpty(acc.birthday))
                                                {
                                                    dr.Cells["Message"].Value = "Tài khoản chưa có ngày sinh";
                                                    return false;
                                                }
                                                else
                                                {
                                                    List<DetechImageModel> ls_ngaysinh = new List<DetechImageModel>();
                                                    image = new DetechImageModel();
                                                    image.name = "step3";
                                                    image.function = 1;
                                                    image.img = Properties.Resources._3x_checkpoint_ngay_sinh;
                                                    ls_ngaysinh.Add(image);
                                                    //Delay(10);
                                                    kq = detechFunctionCatchImages(acc.ldid, ls_ngaysinh);
                                                    if (kq.status)
                                                    {
                                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                                        kq = detechFunctionCatchImages(acc.ldid, ls_next);
                                                        if (kq.status)
                                                        {
                                                            ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                                            Delay(3);
                                                        }
                                                    }

                                                }

                                            }
                                        }
                                        else
                                        {
                                            return false;
                                        }
                                        break;
                                    }
                                case "step3":
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                        kq = detechFunctionCatchImages(acc.ldid, ls_next);
                                        if (kq.status)
                                        {
                                            ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                            Delay(1);
                                        }
                                        break;
                                    }
                                case "step4":
                                    {
                                        if (has_clickbirthday == false)
                                        {

                                            dr.Cells["Message"].Value = "Chọn ngày sinh";
                                            #region bat dau mo ngay sinh
                                            List<DetechImageModel> ls_ngay = new List<DetechImageModel>();
                                            image = new DetechImageModel();
                                            image.name = "ngay";
                                            image.function = 1;
                                            image.img = img_ngay;

                                            ls_ngay.Add(image);
                                            int int_loop = 5;
                                            bool has_ngay = false;
                                            while (int_loop > 0)
                                            {
                                                kq = detechFunctionCatchImagesExact(acc.ldid, ls_ngay);
                                                if (kq.status)
                                                {
                                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                                    has_ngay = true;
                                                    break;
                                                }
                                                else
                                                {
                                                    scroll_up_checkpoint(acc.ldid);
                                                    int_loop--;
                                                    Delay(1);
                                                }
                                            }
                                            if (has_ngay)
                                            {
                                                Delay(2);
                                                scroll_down(acc.ldid);
                                                int_loop = 3;
                                                bool has_thang = false;
                                                List<DetechImageModel> ls_thang = new List<DetechImageModel>();
                                                image = new DetechImageModel();
                                                image.name = "thang";
                                                image.function = 1;
                                                image.img = img_thang;
                                                ls_thang.Add(image);

                                                //Delay(10);
                                                while (int_loop > 0)
                                                {
                                                    kq = detechFunctionCatchImagesExact(acc.ldid, ls_thang);
                                                    if (kq.status)
                                                    {
                                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                                        has_thang = true;
                                                        break;
                                                    }
                                                    else
                                                    {
                                                        scroll_up_checkpoint(acc.ldid);
                                                        int_loop--;
                                                        Delay(5);
                                                    }
                                                }
                                                if (has_thang)
                                                {
                                                    int_loop = 5;
                                                    scroll_down(acc.ldid);
                                                    Delay(3);
                                                    bool has_nam = false;
                                                    List<DetechImageModel> ls_nam = new List<DetechImageModel>();
                                                    image = new DetechImageModel();
                                                    image.name = "nam";
                                                    image.function = 1;
                                                    image.img = img_nam;
                                                    ls_nam.Add(image);
                                                    while (int_loop > 0)
                                                    {
                                                        kq = detechFunctionCatchImagesExact(acc.ldid, ls_nam);
                                                        if (kq.status)
                                                        {
                                                            ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                                            has_nam = true;
                                                            break;
                                                        }
                                                        else
                                                        {
                                                            scroll_up_checkpoint(acc.ldid);
                                                            int_loop--;
                                                            Delay(2);
                                                        }
                                                    }
                                                    if (has_nam)
                                                    {
                                                        kq = detechFunctionCatchImages(acc.ldid, ls_next);
                                                        if (kq.status)
                                                        {
                                                            ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                                            Delay(3);
                                                            has_clickbirthday = true;
                                                        }
                                                    }

                                                }
                                            }

                                        }
                                            #endregion
                                        break;
                                    }
                                case "loi":
                                    {
                                        NguoiDung_Bll nguoidung_bll = new NguoiDung_Bll();
                                        acc.Thongbao = "Lỗi mở checkpoint ngày sinh";
                                        nguoidung_bll.updateStatus(acc);
                                        break;
                                    }
                                case "newpass":
                                    {
                                        u.setStatus(acc.ldid, "Change Password");
                                        Thread.Sleep(2000);
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point.X + 20, kq.point.Y + 35);
                                        Thread.Sleep(1000);
                                        PressOnLeapdroid_vietnamese(acc.ldid, newpass);
                                        kq = detechFunctionCatchImages(acc.ldid, ls_next);
                                        if (kq.status)
                                        {
                                            ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                            string path = Application.StartupPath + "\\logpass.txt";

                                            StringBuilder builder = new StringBuilder();
                                            builder.AppendLine(acc.id.Trim() + "|" + newpass + "|" + acc.Password);
                                            File.AppendAllText(path, builder.ToString());
                                            NguoiDung_Bll nguoidung_bll = new NguoiDung_Bll();
                                            acc.Password = newpass;
                                            nguoidung_bll.updatePassword(acc);
                                        }
                                        //List<DetechImageModel> ls_newpass = new List<DetechImageModel>();
                                        //image = new DetechImageModel();
                                        //image.name = "nam";
                                        //image.function = 1;
                                        //image.img = Properties.Resources._3x_checkpoint_new_pass;
                                        //ls_newpass.Add(image);
                                        //kq = detechFunctionCatchImages(acc.ldid, ls_newpass);
                                        // if (kq.status)
                                        // {

                                        // }

                                        break;
                                    }
                                case "boqua":
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    break;
                                case "tennguoidung":
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    break;
                                case "theodoi":
                                    {
                                        List<DetechImageModel> ls_boqua = new List<DetechImageModel>();
                                        image = new DetechImageModel();
                                        image.name = "boqua";
                                        image.function = 1;
                                        image.img = Properties.Resources._3x_checkpoint_bo_qua;
                                        ls_boqua.Add(image);
                                        u.setStatus(acc.ldid, "Skip Follow");

                                        for (int i = 0; i < 50; i++)
                                        {
                                            scroll_up(acc.ldid);
                                            if (i % 5 == 0)
                                            {
                                                kq = detechFunctionCatchImages(acc.ldid, ls_boqua);
                                                if (kq.status)
                                                {
                                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                                    break;
                                                }
                                            }

                                        }

                                        break;
                                    }
                                case "baove":
                                    {
                                        kq = detechFunctionCatchImages(acc.ldid, ls_next);
                                        if (kq.status)
                                        {
                                            ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                            break;
                                        }
                                        break;
                                    }
                                case "gotonewfeed":
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    u.setStatus(acc.ldid, "Goto Newfeeds");
                                    has_finish = true;
                                    Delay(5);
                                    break;
                                case "finish":
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                        u.setStatus(acc.ldid, "Save Account");
                                        dr.Cells["Message"].Value = "Mở checkpoint thành công";
                                        return true;
                                    }


                            }
                            if (has_finish)
                            {
                                kq = checkOpenFacebookFinish(u, acc.ldid);
                                if (kq.status)
                                {
                                    switch (kq.parent)
                                    {
                                        case "loginsucess":
                                            {
                                                dr.Cells["Message"].Value = "Đăng nhập thành công";
                                                u.setStatus(acc.ldid, " Đăng nhập thành công...");
                                                return true;
                                            }
                                    }

                                }
                                return true;
                            }
                        }
                        else
                        {
                            scroll_up(acc.ldid);
                            int_dem--;
                            Delay(1);
                        }
                    }
                }
                else
                {
                    Delay(1);
                    scroll_up_mid(acc.ldid);
                    step++;
                    if (step <= 10)
                    {
                        goto Lb_start;
                    }
                }

            }
            catch
            { }
            return false;
        }
        private void changeLanguage(string ldid)
        {
            try
            {
                Newtonsoft.Json.Linq.JObject jobject = new Newtonsoft.Json.Linq.JObject();
                string pathjson = string.Format("{0}\\vms\\config\\leidians.config", SettingTool.pathfolderld);
                if (File.Exists(pathjson))
                {
                    try
                    {
                        string json = File.ReadAllText(pathjson);
                        jobject = Newtonsoft.Json.Linq.JObject.Parse(json);
                    }
                    catch
                    {
                    }

                    if (SettingTool.configld.language == "English")
                        jobject["languageId"] = "en_US";
                    else
                        jobject["languageId"] = "vi_VN";
                    File.WriteAllText(pathjson, jobject.ToString());
                }

            }
            catch
            {
            }
        }
        public bool khangSpam(Account acc, CancellationToken token)
        {
            try
            {
                string device = acc.ldid;
                Point pt_menu = intoMenu(device);
                if (pt_menu.X > 0)
                    ClickOnLeapdroidPosition(device, pt_menu);
                else
                    return false;
                Delay(1);
                scroll_up(device);

                Delay(3);

                Random rd = new Random();
                List<DetechImageModel> list_images = new List<DetechImageModel>();

                DetechImageModel detechimg = new DetechImageModel();
                detechimg.name = "xemhanhdong";
                detechimg.function = 1;
                detechimg.img = Properties.Resources._3x_khang_spam_1;
                list_images.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "khongphaispam";
                detechimg.function = 1;
                detechimg.img = Properties.Resources._3x_khang_spam_11;
                list_images.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "xemhanhdong";
                detechimg.function = 1;
                detechimg.img = Properties.Resources._3x_khang_spam_5;
                list_images.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "trogiup";
                detechimg.function = 1;
                detechimg.img = Properties.Resources._3x_khang_spam_0;
                list_images.Add(detechimg);

                List<DetechImageModel> list_next = new List<DetechImageModel>();

                detechimg = new DetechImageModel();
                detechimg.name = "tieptuc";
                detechimg.function = 1;
                detechimg.img = Properties.Resources._3x_khang_spam_2;
                list_images.Add(detechimg);
                list_next.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "khongdongy";
                detechimg.function = 1;
                detechimg.img = Properties.Resources._3x_khang_spam_3;
                list_images.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "hoanthanh";
                detechimg.function = 3;
                detechimg.img = Properties.Resources._3x_khang_spam_4;
                list_images.Add(detechimg);


                bool sroll = true;
                int i = 0;
                bool has_click = false;

            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(device, SettingTool.lang.list_khangspam);
                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImages(device, list_images);
                    if (kq_image.status)
                        kq = kq_image;

                }
                if (kq.status)
                {

                    switch (kq.function)
                    {
                        case -10:
                            {
                                back(device, 2);
                                return false;
                            }
                        case -1:
                            {
                                acc.Thongbao = kq.data;
                                return false;

                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(device, kq.point.X + 5, kq.point.Y + 5);
                                if (kq.parent == "xemhanhdong")
                                {
                                    Delay(2);
                                    scroll_up(device);
                                    scroll_up(device);
                                }
                                if (kq.parent == "hopthu")
                                {
                                    scroll_down(device);
                                }
                                if (kq.parent == "khongdongy")
                                {
                                    Delay(1);
                                    DetechModel kq_image = detechFunctionCatchImages(device, list_next);
                                    if (kq_image.status)
                                    {
                                        ClickOnLeapdroidPosition(device, kq_image.point.X + 5, kq_image.point.Y + 5);

                                        Delay(1);

                                    }
                                    else
                                    {
                                        return false;
                                    }
                                }
                                break;
                            }
                        case 2:
                            {
                                //  ClickOnLeapdroidPosition(device, kq.point);
                                //Delay(1);

                                DetechModel kq_image = detechFunctionCatchImages(device, list_images);
                                if (kq_image.status)
                                {
                                    ClickOnLeapdroidPosition(device, kq_image.point.X + 10, kq_image.point.Y + 5);

                                    scroll_up(device);
                                    scroll_up(device);
                                    if (has_click && kq_image.parent == "khongphaispam")
                                    {
                                        return false;
                                    }
                                    has_click = true;
                                }
                                else
                                {
                                    return false;
                                    //ClickOnLeapdroidPosition(device, 78, 170);
                                    //scroll_up(device);
                                    //scroll_up(device);

                                }
                                break;
                            }
                        case 3:
                            {
                                ClickOnLeapdroidPosition(device, kq.point.X + 5, kq.point.Y + 5);
                                return true;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {

                    // if (sroll)
                    scroll_up(device);
                    i++;

                    if (i < 3)
                    {
                        goto Lb_start;
                    }
                    if (i > 20)
                    {
                        return false;
                    }
                }
            }
            catch
            {
            }
            return false;
        }
        public bool openLinkPlaylist(string device, int delay)
        {
            List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
            DetechImageModel model = new DetechImageModel();
            model.img = PointDefault.img_3x_share_playlist_phat;
            model.name = "click";
            model.function = 1;
            list_detechimg.Add(model);
            int i = 10;
            while (i > 0)
            {
                DetechModel kq = detechFunctionCatchImages(device, list_detechimg);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(device, kq.point.X + 30, kq.point.Y);
                    Delay(delay);
                    return true;
                }
                i--;
            }
            return false;
        }
        public string shareVideoPlaylist(string device, DataGridViewRow dr, string content, int numgroup, int delay)
        {
            int count = 0;
            try
            {
                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
                DetechImageModel model = new DetechImageModel();
                model.img = PointDefault.img_3x_share_playlist_chia_se;
                model.name = "button share";
                model.function = 1;
                list_detechimg.Add(model);

                model = new DetechImageModel();
                model.img = PointDefault.img_3x_share_playlist_chia_se_trang;
                model.name = "button share";
                model.function = 1;
                list_detechimg.Add(model);

                model = new DetechImageModel();
                model.img = PointDefault.img_3x_share_playlist_3cham;
                model.name = "button share";
                model.function = 1;
                list_detechimg.Add(model);

                model = new DetechImageModel();
                model.img = PointDefault.img_3x_share_playlist_3cham_trang;
                model.name = "button share";
                model.function = 1;
                list_detechimg.Add(model);

                bool sroll = true;
                int i = 0;
                Random rd = new Random();

                DetechModel data = new DetechModel();
                data.parent = "step1";
                data.content = "Share Button";
                data.text = "Share";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Share to a Group";
                data.text = "Share to a Group";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Add(data);

                data = new DetechModel();
                data.parent = "post";
                data.content = "POST";
                data.text = "POST";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                SettingTool.lang.list_sharevideowatch.Add(data);

            Lb_start:
                DetechModel kq = detechFunction(device, SettingTool.lang.list_sharevideowatch);
                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImages(device, list_detechimg);
                    if (kq_image.status)
                        kq = kq_image;
                }
                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            return "Phiên đã hết hạn";
                        case 0:
                            return "Tài khoản không có nhóm";
                        case 1:
                            {

                                if (kq.text == "Chia sẻ lên một nhóm" || kq.text == "Share to a Group")
                                {
                                    ClickOnLeapdroidPosition(device, kq.point);
                                    if (checkContentLD(device, "không có nhóm| no group"))
                                        return " |Link share nhóm: Không có nhóm";
                                    else
                                    {

                                        if (checkContentLD(device, "Viết tin nhắn"))
                                        {
                                            List<DetechModel> list_sharecaption = new List<DetechModel>();
                                            data = new DetechModel();
                                            data.parent = "";
                                            data.content = "Viết tin nhắn…";
                                            data.text = "Viết tin nhắn…";
                                            data.node = "//node[contains(@class,'android.widget.EditText')]";
                                            data.function = 1;
                                            list_sharecaption.Add(data);
                                            DetechModel kqcaption = detechFunction(device, list_sharecaption);
                                            if (kqcaption.status)
                                            {
                                                ClickOnLeapdroidPosition(device, kqcaption.point);
                                                Delay(0.5);
                                            }
                                            string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                            if (content_split.Count() > 0)
                                            {
                                                for (int n = 0; n < content_split.Count(); n++)
                                                {
                                                    PressOnLeapdroid_vietnamese(device, content_split[n]);
                                                    Delay(1);
                                                }
                                            }
                                            //PressOnLeapdroid_vietnamese(device, FunctionHelper.method_Spin(content));
                                        }
                                        else
                                            choosegroupnotbuttonshare(device, content);
                                    }
                                }
                                else
                                {
                                    if (kq.parent == "share")
                                    {
                                        List<string> list_text = new List<string>();
                                        list_text.Add("chia sẻ");
                                        List<Point> list_point = FindByXpathDescList(device, "//node[contains(@class,'android.widget.Button')]", list_text);
                                        if (list_point.Count > 0)
                                        {

                                            Point p = list_point[rd.Next(0, list_point.Count)];
                                            ClickOnLeapdroidPosition(device, p);
                                            scroll_up_mid(device);
                                            count++;
                                            dr.Cells["clSuccess"].Value = count;
                                            Delay(delay);
                                            if (numgroup <= count)
                                            {
                                                back(device, 1);
                                                if (SettingTool.configld.language == "English")
                                                    return " |Link share random group complete " + count.ToString() + "/" + numgroup.ToString();
                                                else
                                                    return " |Link share ngẫu nhiên hoàn thành " + count.ToString() + "/" + numgroup.ToString();
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (kq.parent == "đăng" || kq.parent == "post")
                                        {
                                            ClickOnLeapdroidPosition(device, kq.point);
                                            count++;
                                            dr.Cells["clSuccess"].Value = count;
                                            Delay(delay);
                                            if (numgroup <= count)
                                            {
                                                back(device, 1);
                                                if (SettingTool.configld.language == "English")
                                                    return " |Link share random group complete " + count.ToString() + "/" + numgroup.ToString();
                                                else
                                                    return " |Link share ngẫu nhiên hoàn thành " + count.ToString() + "/" + numgroup.ToString();
                                            }

                                        }
                                        else if (kq.parent == "step1")
                                        {
                                            sroll = false;
                                            ClickOnLeapdroidPosition(device, kq.point);
                                        }
                                        else
                                        {
                                            ClickOnLeapdroidPosition(device, kq.point);

                                        }

                                    }
                                }
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                Delay(1);
                                string[] content_split = SplitByLength(FunctionHelper.method_Spin(content), 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int n = 0; n < content_split.Count(); n++)
                                    {
                                        PressOnLeapdroid_vietnamese(device, content_split[n]);
                                        Delay(1);
                                    }
                                }
                                //PressOnLeapdroid_vietnamese(device, FunctionHelper.method_Spin(content));
                                break;
                            }

                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    if (sroll)
                        scroll_up_short(device);
                    i++;

                    if (i <= 5)
                    {
                        goto Lb_start;
                    }
                }
            }
            catch
            {
            }
            if (SettingTool.configld.language == "English")
                return " |Link share random complete " + count.ToString() + "/" + numgroup.ToString();
            else
                return " |Link share ngẫu nhiên hoàn thành " + count.ToString() + "/" + numgroup.ToString();
        }
        public string SharePlaylist_random_noApproval(userLD u, DataGridViewRow dr, Account acc, string link, int numGroup, int i_delay, List<GroupFB> ls_groupname, string description, ref StringBuilder historyshare, CancellationToken token)
        {
            string linkopen = "";
            bool fullscreen = false;
            string message = "";

            try
            {
                string device = acc.ldid;
                int count = 0;
                int max = 0;
                Random rd = new Random();

                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();

                DetechImageModel model = new DetechImageModel();
                model.img = PointDefault.img_3x_share_playlist_chia_se;
                model.name = "button share";
                model.function = 1;
                list_detechimg.Add(model);

                model = new DetechImageModel();
                model.img = PointDefault.img_3x_share_playlist_chia_se_trang;
                model.name = "button share";
                model.function = 1;
                list_detechimg.Add(model);

                model = new DetechImageModel();
                model.img = PointDefault.img_3x_share_playlist_3cham;
                model.name = "button share";
                model.function = 1;
                list_detechimg.Add(model);

                model = new DetechImageModel();
                model.img = PointDefault.img_3x_share_playlist_3cham_trang;
                model.name = "button share";
                model.function = 1;
                list_detechimg.Add(model);

                count = 0;
                int dem = 0;
                while (count < numGroup)
                {
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();
                    if (ls_groupname.Count == 0)
                        break;
                    DetechModel kqlike = detechFunctionCatchImages(acc.ldid, list_detechimg);
                    if (kqlike.status)
                    {
                        dem = 0;
                        ClickOnLeapdroidPosition(acc.ldid, kqlike.point);
                        Delay(1);
                        kqlike = detechFunctionCatchImages(acc.ldid, list_detechimg);
                        if (kqlike.status)
                        {
                            ClickOnLeapdroidPosition(acc.ldid, kqlike.point);
                        }
                        GroupFB group = ls_groupname[rd.Next(0, ls_groupname.Count)];
                        ls_groupname.Remove(group);
                        string error = "";
                        if (shareVideo2Group(u, acc, FunctionHelper.method_Spin(description), group.name, ref error, 1, linkopen, fullscreen))
                        {
                            count++;
                            max = 0;
                            dr.Cells["clSuccess"].Value = count;
                            Delay(i_delay);

                        }
                        else
                        {
                            if (error == "spam")
                            {
                                message += " Nick Spam " + count.ToString() + "/" + numGroup.ToString();
                                return message;
                            }
                            max++;
                            if (max >= 5)
                            {
                                if (SettingTool.configld.language == "English")
                                    message += " |Link share video fixed group complete " + count.ToString() + "/" + numGroup.ToString();
                                else
                                    message += " |Link share video cố định hoàn thành: " + count.ToString() + "/" + numGroup.ToString();
                                goto lb_finish;
                            }
                        }
                        if (SettingTool.configld.language == "English")
                            message += " |Link share video fixed group complete: " + count.ToString() + "/" + numGroup.ToString();
                        else
                            message += " |Link share video cố định hoàn thành: " + count.ToString() + "/" + numGroup.ToString();

                    }
                    else
                    {
                        dem++;
                        Delay(dem);
                        if (dem > 10)
                            break;
                    }


                }
            lb_finish:
                count = 0;

            }
            catch
            { }
            return message;
        }
        public bool changeSock5Proxy(string device, string proxy)
        {
            try
            {
                runApp(device, "org.proxydroid");
                Delay(7);
                string[] arr = proxy.Split(':');
                if (checkContent(device, arr[0]))
                {
                    //bat
                    List<DetechModel> list_on = new List<DetechModel>();
                    DetechModel on = new DetechModel();
                    on.parent = "TẮT";
                    on.content = "";
                    on.text = "TẮT";
                    on.node = "//node[contains(@class,'android.widget.Switch')]";
                    on.function = 1;
                    list_on.Add(on);

                    on = new DetechModel();
                    on.parent = "OFF";
                    on.content = "";
                    on.text = "OFF";
                    on.node = "//node[contains(@class,'android.widget.Switch')]";
                    on.function = 1;
                    list_on.Add(on);

                    DetechModel kqOn = detechFunction(device, list_on);
                    if (kqOn.status)
                    {
                        ClickOnLeapdroidPosition(device, kqOn.point);
                        Delay(3);
                        return true;
                    }
                }

                List<DetechModel> ls_detech = new List<DetechModel>();
                DetechModel done = new DetechModel();
                done = new DetechModel();
                done.parent = "remember";
                done.content = "";
                done.text = "Remember choice forever";
                done.node = "//node[contains(@resource-id,'com.android.settings:id/remember_forever')]";
                done.function = 1;
                ls_detech.Add(done);

                done = new DetechModel();
                done.parent = "Host";
                done.content = "";
                done.text = "Host";
                done.node = "//node[contains(@resource-id,'android:id/title')]";
                done.function = 2;
                ls_detech.Add(done);

                int i = 0;
            Lb_start:
                DetechModel kq = detechFunction(device, ls_detech);

                if (kq.status)
                {

                    switch (kq.function)
                    {
                        case -1:
                            {
                                return false;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(device, kq.point);

                                if (kq.parent == "remember")
                                {
                                    Delay(3);
                                    done = new DetechModel();
                                    done.parent = "";
                                    done.content = "";
                                    done.text = "Allow";
                                    done.node = "//node[contains(@resource-id,'com.android.settings:id/allow')]";
                                    done.function = 1;
                                    List<DetechModel> list_done = new List<DetechModel>();
                                    list_done.Add(done);
                                    kq = detechFunction(device, list_done);
                                    if (kq.status)
                                    {
                                        ClickOnLeapdroidPosition(device, kq.point);
                                    }
                                }
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                Delay(1);
                                List<DetechModel> list_done = new List<DetechModel>();
                                done = new DetechModel();
                                done.parent = "";
                                done.content = "";
                                done.text = "";
                                done.node = "//node[contains(@resource-id,'android:id/edit')]";
                                done.function = 1;
                                list_done.Add(done);

                                kq = detechFunction(device, list_done);

                                ClickOnLeapdroidPosition(device, kq.point);
                                runAdb(device, "shell input keyevent KEYCODE_MOVE_END");
                                for (int j = 0; j < 20; j++)
                                {
                                    runAdb(device, "shell input keyevent KEYCODE_DEL");
                                }


                                PressOnLeapdroid_vietnamese(device, arr[0]);

                                list_done = new List<DetechModel>();
                                done = new DetechModel();
                                done.parent = "";
                                done.content = "";
                                done.text = "OK";
                                done.node = "//node[contains(@resource-id,'android:id/button1')]";
                                done.function = 1;
                                list_done.Add(done);
                                kq = detechFunction(device, list_done);
                                if (kq.status)
                                {
                                    ClickOnLeapdroidPosition(device, kq.point);
                                }

                                done = new DetechModel();
                                done.parent = "";
                                done.content = "";
                                done.text = "Port";
                                done.node = "//node[contains(@resource-id,'android:id/title')]";
                                done.function = 1;
                                list_done = new List<DetechModel>();
                                list_done.Add(done);

                                kq = detechFunction(device, list_done);
                                if (kq.status)
                                {
                                    ClickOnLeapdroidPosition(device, kq.point);

                                    Delay(1);
                                    list_done = new List<DetechModel>();
                                    done = new DetechModel();
                                    done.parent = "";
                                    done.content = "";
                                    done.text = "";
                                    done.node = "//node[contains(@resource-id,'android:id/edit')]";
                                    done.function = 1;
                                    list_done.Add(done);

                                    kq = detechFunction(device, list_done);


                                    ClickOnLeapdroidPosition(device, kq.point);
                                    runAdb(device, "shell input keyevent KEYCODE_MOVE_END");
                                    for (int j = 0; j < 10; j++)
                                    {
                                        runAdb(device, "shell input keyevent KEYCODE_DEL");
                                    }


                                    PressOnLeapdroid_vietnamese(device, arr[1]);
                                    //click ok
                                    list_done = new List<DetechModel>();
                                    done = new DetechModel();
                                    done.parent = "";
                                    done.content = "";
                                    done.text = "OK";
                                    done.node = "//node[contains(@resource-id,'android:id/button1')]";
                                    done.function = 1;
                                    list_done.Add(done);
                                    kq = detechFunction(device, list_done);
                                    if (kq.status)
                                    {
                                        ClickOnLeapdroidPosition(device, kq.point);
                                    }

                                    //type
                                    list_done = new List<DetechModel>();
                                    done = new DetechModel();
                                    done.parent = "Type";
                                    done.content = "";
                                    done.text = "Proxy Type";
                                    done.node = "//node[contains(@resource-id,'android:id/title')]";
                                    done.function = 1;
                                    list_done.Add(done);
                                    kq = detechFunction(device, list_done);
                                    if (kq.status)
                                    {
                                        ClickOnLeapdroidPosition(device, kq.point);
                                        Delay(1);
                                        list_done = new List<DetechModel>();
                                        done = new DetechModel();
                                        done.parent = "SOCKS5";
                                        done.content = "";
                                        done.text = "SOCKS5";
                                        done.node = "//node[contains(@resource-id,'android:id/text1')]";
                                        done.function = 1;
                                        list_done.Add(done);
                                        kq = detechFunction(device, list_done);
                                        if (kq.status)
                                        {
                                            ClickOnLeapdroidPosition(device, kq.point.X + 10, kq.point.Y + 5);


                                        }

                                        //bat
                                        list_done = new List<DetechModel>();
                                        done = new DetechModel();
                                        done.parent = "TẮT";
                                        done.content = "";
                                        done.text = "TẮT";
                                        done.node = "//node[contains(@class,'android.widget.Switch')]";
                                        done.function = 1;
                                        list_done.Add(done);

                                        done = new DetechModel();
                                        done.parent = "OFF";
                                        done.content = "";
                                        done.text = "OFF";
                                        done.node = "//node[contains(@class,'android.widget.Switch')]";
                                        done.function = 1;
                                        list_done.Add(done);

                                        kq = detechFunction(device, list_done);
                                        if (kq.status)
                                        {
                                            ClickOnLeapdroidPosition(device, kq.point);
                                            Delay(3);
                                            return true;
                                        }
                                    }
                                }
                                //done = new DetechModel();
                                //done.parent = "BẬT";
                                //done.content = "";
                                //done.text = "BẬT";
                                //done.node = "//node[contains(@resource-id,'android:id/switchWidget')]";
                                //done.function = 3;
                                //ls_detech.Add(done); 

                                break;
                            }
                        case 3:
                            {
                                ClickOnLeapdroidPosition(device, kq.point.X + 5, kq.point.Y + 5);
                                return true;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {

                    // if (sroll)
                    //  scroll_up(device);
                    i++;

                    if (i < 3)
                    {
                        goto Lb_start;
                    }
                    if (i > 20)
                    {
                        return false;
                    }
                }
            }
            catch
            {
            }
            return false;
        }
        public void openlinkgroup(string ldID)
        {
            List<DetechModel> ls = new List<DetechModel>();
            DetechModel detech = new DetechModel();
            detech = new DetechModel();
            detech.parent = "ok";
            detech.content = "Mở bằng";
            detech.text = "Luôn chọn";
            detech.node = "//node[contains(@class,'android.widget.Button')]";
            detech.function = 1;
            ls.Add(detech);

            detech = new DetechModel();
            detech.parent = "open";
            detech.content = "Mở bằng";
            detech.text = "com.facebook.katana";
            detech.node = "//node[contains(@class,'android.widget.TextView')]";
            detech.function = 1;
            ls.Add(detech);
            int i = 0;
            while (i < 5)
            {
                DetechModel kq = RunDetechFunction(ldID, ls, 3);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(ldID, kq.point);
                    if (kq.parent == "open")
                    {
                        detech = new DetechModel();
                        detech.parent = "ok";
                        detech.content = "Mở bằng";
                        detech.text = "Luôn chọn";
                        detech.node = "//node[contains(@class,'android.widget.Button')]";
                        detech.function = 1;
                        List<DetechModel> ls_chon = new List<DetechModel>();
                        ls_chon.Add(detech);
                        kq = RunDetechFunction(ldID, ls_chon, 2);
                        if (kq.status)
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            break;
                        }

                    }
                    break;
                }

                i++;
            }
        }
        public void scrollStory(userLD u, string device, Account acc, int min, int max, CancellationToken token)
        {
            try
            {
                Random rd = new Random();
                int luot = rd.Next(min, max);
                if (luot == 0)
                    luot = 30;
                u.setStatusSum(luot);
                activeNewfeed(device, acc.app);
                List<DetechModel> ls_story = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "Tin của";
                model.text = "Tin của";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "'s story";
                model.text = "'s story";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                ls_story.Add(model);

                DetechModel kq = RunDetechFunction(device, ls_story);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(device, kq.point);

                    for (int i = 0; i < luot; i++)
                    {
                        if (token.IsCancellationRequested)
                            token.ThrowIfCancellationRequested();
                        int delay = rd.Next(2, 10);
                        slide_way(device);
                        u.setStatusResult(i);
                        Delay(delay);
                    }
                    backNewfeed(device);
                }
            }
            catch
            { }

        }

        public string likeStory(userLD u, string device, Account acc, int min, int max, CancellationToken token)
        {
            int count = 0;
            try
            {
                Random rd = new Random();
                int luot = rd.Next(min, max);
                u.setStatusSum(luot);
                List<DetechModel> ls_story = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "Tin của";
                model.text = "Tin của";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "'s story";
                model.text = "'s story";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Thêm vào tin";
                model.text = "Thêm vào tin";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 0;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Xem thêm ảnh";
                model.text = "Xem thêm ảnh";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 0;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "see more photo";
                model.text = "see more photo";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 0;
                ls_story.Add(model);

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();
                int max_err = 0;
                DetechModel kq = RunDetechFunction(device, ls_story);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(device, kq.point);
                    for (int i = 1; i < 30; i++)
                    {
                        if (token.IsCancellationRequested)
                            return " Like story: " + count.ToString() + "/" + max.ToString();
                        if (i % 10 == 0)
                        {
                            if (checkContentLD(device, "Tìm kiếm bạn bè|Video trên Watch|Kỷ niệm"))
                                return " Like story: " + count.ToString() + "/" + max.ToString();
                        }

                        else
                        {
                            ls_image.Clear();
                            ls_name.Clear();

                            int icon = rd.Next(1, 4);
                            if (icon == 1)
                            {
                                ls_image.Add(Properties.Resources._3x_likestory);
                                ls_name.Add("1_like");
                            }
                            else if (icon == 2)
                            {
                                ls_image.Add(Properties.Resources._3x_lovestory);
                                ls_name.Add("1_like");
                            }
                            else
                            {
                                ls_image.Add(Properties.Resources._3x_hahastory);
                                ls_name.Add("1_like");
                            }
                            slide_way(device);
                            Delay(1);
                            kq = detechFunctionCatchImage(device, ls_image, ls_name);
                            if (kq.status)
                            {
                                if (kq.function == 0)
                                    return " Like story: " + count.ToString() + "/" + max.ToString();
                                max_err = 0;
                                ClickOnLeapdroidPosition(device, kq.point);
                                count++;
                                u.setStatusResult(count);
                                if (count >= luot)
                                {
                                    return " Like story: " + count.ToString() + "/" + max.ToString();
                                }
                            }
                            else
                            {
                                max_err++;
                                if (max_err > 10)
                                    return " Like story: " + count.ToString() + "/" + max.ToString();
                                if (check_Facebook_has_stopped(u, device, acc, token) == false)
                                {
                                    return " Like story: " + count.ToString() + "/" + max.ToString();
                                }
                            }
                            Delay(1);
                        }

                    }
                }
            }
            catch
            { }
            return " Like story: " + count.ToString() + "/" + max.ToString();
        }
        public string commentStory(userLD u, string device, Account acc, int minlike, int maxlike, string comment, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            int count = 0;
            int max = 0;
            try
            {
                List<DetechModel> ls_story = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "Trả lời";
                model.text = "Trả lời";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Trả lời";
                model.text = "Trả lời";
                model.node = "//node[contains(@class,'android.widget.EditText')]";
                model.function = 1;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Reply to";
                model.text = "Reply to";
                model.node = "//node[contains(@class,'android.widget.EditText')]";
                model.function = 1;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Reply to";
                model.text = "Reply to";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "'s story";
                model.text = "'s story";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Tin của";
                model.text = "Tin của";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Thêm vào tin";
                model.text = "Thêm vào tin";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 0;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Xem thêm ảnh";
                model.text = "Xem thêm ảnh";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 0;
                ls_story.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "see more photo";
                model.text = "see more photo";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 0;
                ls_story.Add(model);

                List<DetechModel> ls_send = new List<DetechModel>();
                model = new DetechModel();
                model.parent = "";
                model.content = "GỬI";
                model.text = "GỬI";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;
                ls_send.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "GỬI";
                model.text = "GỬI";
                model.node = "//node[contains(@class,'android.widget.ImageButton')]";
                model.function = 1;
                ls_send.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "send";
                model.text = "send";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;
                ls_send.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "send";
                model.text = "send";
                model.node = "//node[contains(@class,'android.widget.ImageButton')]";
                model.function = 1;
                ls_send.Add(model);

                DetechModel kq = RunDetechFunction(device, ls_story);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(device, kq.point);
                    for (int i = 0; i < 30; i++)
                    {
                        if (token.IsCancellationRequested)
                            return " Comment story: " + count.ToString() + "/" + luot.ToString();

                        if (i % 10 == 0)
                        {
                            if (checkContentLD(device, "Tìm kiếm bạn bè|Video trên Watch|Kỷ niệm"))
                                return " Comment story: " + count.ToString() + "/" + luot.ToString();
                        }

                        Delay(1);
                        kq = detechFunction(device, ls_story);
                        Delay(1);
                        if (kq.status)
                        {
                            if (kq.function == 0)
                                return " Comment story: " + count.ToString() + "/" + luot.ToString();
                            max = 0;
                            ClickOnLeapdroidPosition(device, kq.point);
                            Delay(1);
                            PressOnLeapdroid_vietnamese(device, FunctionHelper.method_Spin(comment));
                            Delay(1);
                            kq = detechFunction(device, ls_send);
                            if (kq.status)
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                count++;
                                u.setStatusResult(count);
                                if (count >= luot)
                                {
                                    return " Comment story: " + count.ToString() + "/" + luot.ToString();
                                }
                            }
                        }
                        else
                        {
                            max++;
                            if (max > 10)
                                return " Comment story: " + count.ToString() + "/" + luot.ToString();
                            else
                            {
                                if (check_Facebook_has_stopped(u, device, acc, token) == false)
                                {
                                    return " Comment story: " + count.ToString() + "/" + luot.ToString();
                                }
                            }
                        }
                        Delay(1);
                        slide_way(device);
                    }
                }
            }
            catch
            { }
            return " Comment story: " + count.ToString() + "/" + luot.ToString();
        }
        public void slide_way(string ldID)
        {
            string cmd = "shell input swipe 300 250 150 250";

            runAdb(ldID, cmd);

        }
        public string reactionPremiumPage(userLD u, Account acc, DataGridViewRow dr, string ldID, string app, bool likeFanpage, int numlike, int numcommet, int numtag, int numShare, int numlienquan, int numquangcao, string linkID, string lsComment, int delay, int dl_scrollfr, int dl_scrllto, CancellationToken token)
        {
            string message = "";
            int count_like = 0;
            int count_comment = 0;
            int count_tag = 0;
            int count_share = 0;
            int count_quangcao = 0;
            int count_lienquan = 0;
            try
            {
                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources.black);
                ls_name.Add("1_black");

                ls_image.Add(Properties.Resources.blueaqua);
                ls_name.Add("1_blueaqua");

                ls_image.Add(Properties.Resources.blueaqua1);
                ls_name.Add("1_blueaqua1");
                ls_image.Add(Properties.Resources.bluesky);
                ls_name.Add("1_bluesky");
                ls_image.Add(Properties.Resources.gray);
                ls_name.Add("1_gray");
                ls_image.Add(Properties.Resources.hongtim);
                ls_name.Add("1_hongtim");
                ls_image.Add(Properties.Resources.naudo);
                ls_name.Add("1_naudo");

                ls_image.Add(Properties.Resources.purple);
                ls_name.Add("1_purple");
                ls_image.Add(Properties.Resources.red);
                ls_name.Add("1_red");
                ls_image.Add(Properties.Resources.timthan);
                ls_name.Add("1_timthan");
                ls_image.Add(Properties.Resources.yellow);
                ls_name.Add("1_yellow");

                ls_image.Add(Properties.Resources.pink);
                ls_name.Add("1_pink");
                if (token.IsCancellationRequested)
                {
                    token.ThrowIfCancellationRequested();
                }
                if (likeFanpage)
                {
                    u.setStatus(ldID, "Đang Like Page");
                    if (likePage(ldID, linkID))
                        message = "Like Page thành công";
                }

                string result = "";
                if (linkID.Contains("https"))
                    result = OpenLink(ldID, app, linkID);
                else
                    result = OpenLink(ldID, app, "fb://page/" + linkID);

                Delay(2);
                if (numlike == 0 & numcommet == 0 & numtag == 0 & numShare == 0 & numquangcao == 0 & numlienquan == 0)
                    return message;

                scrollbaiviet(ldID, acc, 6, token, 1, 1);

                List<DetechModel> ls_Link = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "Liên kết được chia sẻ";
                model.text = "Liên kết được chia sẻ";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                ls_Link.Add(model);

                if (!result.Contains("Error"))
                {
                    int max = 0;
                    while (max < 12)
                    {
                        if (token.IsCancellationRequested)
                            break;
                        if (!checkContentLD(ldID, "Trang chủ")) // chua bat dc trang thi bat lai
                        {
                            result = OpenLink(ldID, app, "fb://page/" + linkID);
                            result = OpenLink(ldID, app, "fb://page/" + linkID);
                            scrollNewfeed(u, ldID, acc, 5, 5, token);
                        }
                        if (count_like < numlike || count_comment < numcommet || count_tag < numtag || count_share < numShare || count_quangcao < numquangcao || count_lienquan < numlienquan)
                        {
                            if (count_like < numlike)
                            {
                                u.setStatus(ldID, "Đang Like bài");
                                dr.Cells["Message"].Value = "Đang Like bài";
                                if (likePost(acc, ldID, token))
                                    count_like++;
                                else
                                    scroll_up_mid(ldID);
                                //kq = detechFunction(ldID, ls_Link);
                                //if (kq.status)
                                //{
                                //    ClickOnLeapdroidPosition(ldID, kq.point);
                                //    scroll_up(ldID);
                                //}
                            }
                            if (count_comment < numcommet)
                            {
                                u.setStatus(ldID, "Đang comment bài");
                                dr.Cells["Message"].Value = "Đang comment bài";
                                if (commentPost(u, acc, ldID, lsComment, token))
                                {
                                    count_comment++;
                                    back(ldID, 2);
                                }

                            }
                            if (count_tag < numtag)
                            {
                                u.setStatus(ldID, "Đang tag friend");
                                dr.Cells["Message"].Value = "Đang tag friend";
                                if (commentTag(acc, ldID, lsComment, token))
                                {
                                    count_tag++;
                                    back(ldID, 2);
                                }
                            }
                            if (count_share < numShare)
                            {
                                //string kqshare = "";
                                u.setStatus(ldID, "Đang share profile bài");
                                dr.Cells["Message"].Value = "Đang share profile bài";
                                if (sharepost2profilenocontent(acc.ldid, "com.facebook.katana", lsComment))
                                    count_share++;
                            }
                            if (count_lienquan < numlienquan)
                            {
                                u.setStatus(ldID, "Đang đọc bài viết");
                                dr.Cells["Message"].Value = "Đang đọc bài viết";
                                DetechModel kq = detechFunction(ldID, ls_Link);
                                Delay(1);
                                if (kq.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    Delay(3);
                                    scrollbaiviet(ldID, acc, 20, token, dl_scrollfr, dl_scrllto);

                                    kq = detechFunctionCatchImage(ldID, ls_image, ls_name);
                                    if (kq.status & kq.point.Y > 100)
                                    {
                                        if (count_quangcao < numquangcao)
                                        {
                                            u.setStatus(ldID, " Click quảng cáo thành công");
                                            dr.Cells["Message"].Value = "Click quảng cáo thành công";
                                            ClickOnLeapdroidPosition(ldID, kq.point);
                                            Delay(3);
                                            count_quangcao++;
                                        }

                                    }
                                    else
                                    {
                                        //if (count_lienquan < numlienquan)
                                        //{
                                        //    u.setStatus(ldID, "Click bài liên quan thành công");
                                        //    dr.Cells["Message"].Value = "Click bài liên quan thành công";
                                        //    ClickOnLeapdroidPosition(ldID, 150, 240);
                                        //    Delay(3);
                                        //    scroll_up_random(ldID, token);
                                        //    count_lienquan++;
                                        //}
                                    }
                                    backNewfeed(ldID);
                                }
                                scroll_up(ldID);
                            }

                            if (count_quangcao < numquangcao)
                            {
                                u.setStatus(ldID, " Đang đọc quảng cáo");
                                dr.Cells["Message"].Value = " Đang đọc quảng cáo";
                                DetechModel kq = detechFunction(ldID, ls_Link);
                                if (kq.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    Delay(3);
                                    scrollbaiviet(ldID, acc, 20, token, dl_scrollfr, dl_scrllto);
                                    kq = detechFunctionCatchImage(ldID, ls_image, ls_name);
                                    if (kq.status)
                                    {
                                        u.setStatus(ldID, " Click quảng cáo thành công");
                                        dr.Cells["Message"].Value = " Click quảng cáo thành công";
                                        ClickOnLeapdroidPosition(ldID, kq.point);
                                        Delay(3);
                                        count_quangcao++;
                                    }
                                    else
                                    {
                                        if (count_lienquan < numlienquan)
                                        {
                                            u.setStatus(ldID, " Click bài liên quan thành công");
                                            ClickOnLeapdroidPosition(ldID, 150, 320);
                                            Delay(3);
                                            count_lienquan++;
                                        }

                                    }
                                    backNewfeed(ldID);
                                }

                                scroll_up(ldID);
                            }

                            scroll_up(ldID);
                        }
                        else
                            max++;
                    }
                }
                else
                {
                    dr.Cells["Message"].Value = " Không mở được Page";
                }
                dr.Cells["Message"].Value = " Delay " + delay.ToString() + " giây chuyển ID";
                u.setStatus(ldID, " Delay " + delay.ToString() + " giây chuyển ID");
                Delay(delay);
                activeNewfeed(ldID, app);
            }
            catch
            {
            }
            if (numlike > 0)
            {
                message += "Like :" + count_like.ToString() + "/" + numlike.ToString();
            }
            if (numcommet > 0)
            {
                message += "| Comment :" + count_comment.ToString() + "/" + numcommet.ToString();
            }
            if (numtag > 0)
            {
                message += "| Tag :" + count_tag.ToString() + "/" + numtag.ToString();
            }
            if (numShare > 0)
            {
                message += "| Share :" + count_share.ToString() + "/" + count_share.ToString();
            }
            if (numShare > 0)
            {
                message += "| Tag friend :" + count_tag.ToString() + "/" + numtag.ToString();
            }

            if (numquangcao > 0)
            {
                message += "| quảng cáo :" + count_quangcao.ToString() + "/" + numlienquan.ToString();
            }

            if (numlienquan > 0 || numlienquan > 0)
            {
                message += "| Đọc bài viết :" + count_lienquan.ToString() + "/" + numlienquan.ToString();
            }

            return message;
        }

        public string reactionLinkPage(userLD u, Account acc, DataGridViewRow dr, string ldID, string app, bool likeFanpage, int numlike, int numcommet, int numtag, int numShare, int numlienquan, int numquangcao, string linkID, string lsComment, int delay, int dl_scrollfr, int dl_scrllto, CancellationToken token)
        {
            string message = "";
            int count_like = 0;
            int count_comment = 0;
            int count_tag = 0;
            int count_share = 0;
            // int count_quangcao = 0;
            int count_lienquan = 0;
            try
            {

                if (token.IsCancellationRequested)
                {
                    token.ThrowIfCancellationRequested();
                }
                if (likeFanpage)
                {
                    u.setStatus(ldID, "Đang Like Page");
                    if (likePage(ldID, linkID))
                        message = "Like Page thành công";
                }

                string result = "";
                if (linkID.Contains("https"))
                    result = OpenLink(ldID, app, linkID);

                Delay(2);

                List<DetechModel> ls_Link = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "Liên kết được chia sẻ";
                model.text = "Liên kết được chia sẻ";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                ls_Link.Add(model);

                if (!result.Contains("Error"))
                {
                    int max = 0;
                    while (max < 12)
                    {

                        if (count_like < numlike || count_comment < numcommet || count_tag < numtag || count_share < numShare || count_lienquan < numlienquan)
                        {
                            if (count_like < numlike)
                            {
                                u.setStatus(ldID, "Đang Like bài");

                                if (likePost(acc, ldID, token))
                                    count_like++;
                                else
                                    scroll_up_mid(ldID);
                                //kq = detechFunction(ldID, ls_Link);
                                //if (kq.status)
                                //{
                                //    ClickOnLeapdroidPosition(ldID, kq.point);
                                //    scroll_up(ldID);
                                //}
                            }
                            if (count_comment < numcommet)
                            {
                                u.setStatus(ldID, "Đang comment bài");
                                if (commentPost(u, acc, ldID, lsComment, token))
                                {
                                    count_comment++;
                                    back(ldID, 1);
                                }

                            }
                            if (count_tag < numtag)
                            {
                                u.setStatus(ldID, "Đang tag friend");
                                if (commentTag(acc, ldID, lsComment, token))
                                {
                                    count_tag++;
                                    back(ldID, 1);
                                }
                            }
                            if (count_share < numShare)
                            {
                                result = OpenLink(ldID, app, linkID);
                                int kqshare = 0;
                                Random rd = new Random();
                                if (rd.Next(1, 10) % 2 == 0)
                                {
                                    u.setStatus(ldID, "Đang share profile bài");
                                    if (sharepost2profile(acc.ldid, "com.facebook.katana", lsComment, token))
                                        count_share++;
                                }

                                else
                                {
                                    //share vao group random
                                    u.setStatus(ldID, "Đang share group bài");
                                    kqshare = SharePostGroup(u, acc, dr, "", lsComment, 1, delay, token);
                                    if (kqshare > 0)
                                        count_share++;
                                }

                            }
                            if (count_lienquan < numlienquan)
                            {
                                u.setStatus(ldID, "Đang đọc bài viết");
                                result = OpenLink(ldID, app, linkID);
                                DetechModel kq = detechFunction(ldID, ls_Link);
                                if (kq.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    Delay(3);
                                    scrollbaiviet(ldID, acc, 20, token, dl_scrollfr, dl_scrllto);
                                    ClickOnLeapdroidPosition(ldID, 150, 320);
                                    Delay(3);
                                    count_lienquan++;
                                    backNewfeed(ldID);
                                }
                                else
                                    scroll_up(ldID);
                            }

                        }

                        max++;
                    }
                }
                else
                {
                    dr.Cells["Message"].Value = "Không mở được Page";
                }
                dr.Cells["Message"].Value = "Delay " + delay.ToString() + " giây chuyển ID";
                Delay(delay);
                // activeNewfeed(ldID, app);
            }
            catch
            {
            }
            if (numlike > 0)
            {
                message += "Like :" + count_like.ToString() + "/" + numlike.ToString();
            }
            if (numcommet > 0)
            {
                message += "| Comment :" + count_comment.ToString() + "/" + numcommet.ToString();
            }
            if (numtag > 0)
            {
                message += "| Tag :" + count_tag.ToString() + "/" + numtag.ToString();
            }
            if (numShare > 0)
            {
                message += "| Share :" + count_share.ToString() + "/" + count_share.ToString();
            }
            if (numShare > 0)
            {
                message += "| Tag friend :" + count_tag.ToString() + "/" + numtag.ToString();
            }

            if (numlienquan > 0 || numlienquan > 0)
            {
                message += "| Đọc bài viết :" + numlienquan.ToString() + "/" + numlienquan.ToString();
            }

            return message;
        }
        public void scrollbaiviet(string device, Account acc, int max, CancellationToken token, int from, int to)
        {
            try
            {
                Random rd = new Random();
                int delay = 1;
                if (max == 0)
                    max = 30;
                int int_check = 1;
                for (int i = 0; i < max; i++)
                {
                    delay = rd.Next(from, to);
                    int_check++;
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    scroll_up(device);
                    Delay(delay);
                }
            }
            catch
            { }
        }
        public bool commentTag(Account acc, string ldID, string mess, CancellationToken token)
        {
            try
            {
                int i = 0;
                int max = 0;
                DetechModel model = new DetechModel();
                model.parent = "closepopup";
                model.content = "How to Watch Without Comments";
                model.text = "Close";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                SettingTool.lang.list_detechcomment.Add(model);
                NguoiDung_Bll nguoidung_bll = new NguoiDung_Bll();
                List<Account> lsUsers = new List<Account>();
                lsUsers = nguoidung_bll.loadUser();

                var ls_new = lsUsers.Where(s => s.name.Length > 0).ToList();
                List<Account> lsfriend = new List<Account>();


                Profile_Controller profile = new Profile_Controller();
                string dtsg = profile.checkCookies(SettingTool.configld.cookies);
            // lsfriend = profile.LoadFriend(SettingTool.configld.cookies, dtsg, acc, null);
            Lb_start:
                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_detechcomment);
                if (kq.status & kq.point.Y > 100)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                // resetFacebook(acc, kq.point, token);
                                return false;
                            }
                        case 1:
                            {
                                if (kq.parent == "comment")
                                {
                                    if (max >= 3)
                                    {

                                        // backNewfeed(ldID);
                                        return false;
                                    }

                                    max++;
                                }
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Random rd = new Random();
                                Account acctag = ls_new[rd.Next(0, ls_new.Count)];
                                if (!string.IsNullOrEmpty(acctag.name))
                                    mess = acctag.name;

                                string[] content_split = SplitByLength(FunctionHelper.method_Spin(mess), 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int v = 0; v < content_split.Count(); v++)
                                    {
                                        PressOnLeapdroid_vietnamese(ldID, content_split[v]);
                                        Delay(1);

                                    }
                                }
                                ClickOnLeapdroidPosition(ldID, kq.point.X + 20, kq.point.Y - 10);
                                // PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(mess));

                                Delay(1);
                                i = 0;
                            Lb_Send:
                                DetechModel kqsend = RunDetechFunction(ldID, SettingTool.lang.list_detechsend);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    Delay(1);

                                    //  scroll_down(ldID); ko hieu cho nay
                                }
                                else
                                {
                                    i++;
                                    if (i <= 5)
                                        goto Lb_Send;
                                }
                                return true;

                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    scroll_up_mid(ldID);
                    i++;
                    if (i < 10)
                    {
                        goto Lb_start;
                    }

                }
            }
            catch
            { }
            return false;
        }

        public DetechModel detechFunctionExact(string ldID, List<DetechModel> list_detech, int vitri = 1)
        {
            DetechModel kq = new DetechModel();
            string html = "";
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);

                html = readFile(ldID, filename).ToLower();
                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                document.LoadHtml(html);
                int i = 0;
                foreach (DetechModel model in list_detech)
                {
                    if (html.Contains(model.content.ToLower()))
                    {
                        if (String.IsNullOrEmpty(model.node))
                        {
                            kq = model;
                            kq.status = true;
                            kq.function = model.function;
                            kq.point = point;
                            kq.parent = model.parent;
                            return kq;
                        }
                        else
                        {
                            HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(model.node.ToLower());
                            if (nodes != null)
                            {
                                foreach (HtmlNode node in nodes)
                                {
                                    string enable = node.Attributes["enabled"].Value.ToString();
                                    if (enable == "true")
                                    {
                                        try
                                        {

                                            string text = node.Attributes["text"].Value.ToString();
                                            string desc = node.Attributes["content-desc"].Value.ToString();
                                            if (text == model.text.ToLower() || desc == model.text.ToLower())
                                            {
                                                i++;
                                                if (i == vitri)
                                                {
                                                    string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                                    bound = bound.Replace("[", "");
                                                    string[] arr = bound.Split(']');
                                                    if (arr.Length > 0)
                                                    {
                                                        kq = model;
                                                        string[] arr1 = arr[0].Split(',');
                                                        point.X = Convert.ToInt32(arr1[0]);
                                                        point.Y = Convert.ToInt32(arr1[1]);
                                                        kq.status = true;
                                                        kq.function = model.function;
                                                        kq.point = point;

                                                        Point point2 = new Point();
                                                        string[] arr2 = arr[1].Split(',');
                                                        point2.X = Convert.ToInt32(arr2[0]);
                                                        point2.Y = Convert.ToInt32(arr2[1]);
                                                        kq.point2 = point2;
                                                        kq.parent = model.parent;
                                                        kq.data = node.Attributes["text"].Value.ToString();
                                                        kq.desc = node.Attributes["content-desc"].Value.ToString();
                                                        return kq;
                                                    }
                                                }
                                            }

                                        }
                                        catch
                                        {

                                        }

                                    }

                                }
                            }

                        }
                    }
                }

            }
            catch (Exception exx) { exx.ToString(); }

            return kq;
        }
        private bool intoyourgroup(string device, CancellationToken token)
        {
            if (!checkContentLD(device, "nhóm của bạn|nhóm|khám phá"))
                OpenLink(device, "", "fb://groups/gridtab"); //fb://groups/gridtab

            List<DetechModel> list_yourgr = new List<DetechModel>();
            DetechModel model = new DetechModel();
            model.parent = "";
            model.content = "Nhóm của bạn";
            model.text = "Nhóm của bạn";
            model.node = "//node[contains(@class,'android.view.View')]";
            model.function = 1;
            list_yourgr.Add(model);
            DetechModel kq = RunDetechFunction(device, list_yourgr);
            if (kq.status)
            {
                ClickOnLeapdroidPosition(device, kq.point);
                scroll_up_random(device, token);
                scroll_up_random(device, token);
                list_yourgr = new List<DetechModel>();
                model = new DetechModel();
                model.parent = "group";
                model.content = "Nút";
                model.text = "Nút";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                list_yourgr.Add(model);

                List<DetechModel> list_kq = detechFunctionListPoint(device, list_yourgr);
                if (list_kq.Count > 0)
                {
                    Random rd = new Random();
                    ClickOnLeapdroidPosition(device, list_kq[rd.Next(0, list_kq.Count)].point);
                }
                else
                {
                    //  scroll_down(device);
                    // int max = 0;

                    List<Point> ls_point = new List<Point>();
                    ls_point = FindByXpathTree(device, "//node[contains(@class,'androidx.recyclerview.widget.RecyclerView')]", "//node[contains(@class,'android.view.View')]");
                    if (ls_point.Count > 0)
                    {
                        Random rd = new Random();
                        int index = rd.Next(2, ls_point.Count);
                        ClickOnLeapdroidPosition(device, ls_point[index]);
                    }
                    else
                    {
                        if (checkContentLD(device, "không thể tải nhóm"))
                        {
                            return false;
                        }
                    }
                }

            }
            return true;
        }
        public bool checkLivestream(string ldid, string link)
        {
            try
            {
                List<DetechModel> list_search = new List<DetechModel>();
                DetechModel data = new DetechModel();

                data.parent = "live";
                data.content = "Trực tiếp";
                data.text = "CHIA SẺ";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 2;
                list_search.Add(data);

                data = new DetechModel();
                data.parent = "play";
                data.content = "Phát video hiện tại";
                data.text = "Phát video hiện tại";
                data.node = "//node[contains(@class,'android.widget.ImageView')]";
                data.function = 1;
                list_search.Add(data);

                data = new DetechModel();
                data.parent = "play";
                data.content = "Không thể phát video";
                data.text = "Thử lại";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                list_search.Add(data);

                data = new DetechModel();
                data.parent = "comment";
                data.content = "Bật/tắt bình luận";
                data.text = "Bật/tắt bình luận";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                list_search.Add(data);

                data = new DetechModel();
                data.parent = "comment";
                data.content = "Thích";
                data.text = "Thích";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 3;
                list_search.Add(data);

                int loop = 10;
                while (loop > 0)
                {
                    loop--;
                    DetechModel kq = detechFunction(ldid, list_search);
                    if (kq.status)
                    {
                        switch (kq.function)
                        {
                            case 1:
                                {
                                    ClickOnLeapdroidPosition(ldid, kq.point);
                                }
                                break;
                            case 2:
                                {
                                    return true;
                                }
                            case 3:
                                {
                                    ClickOnLeapdroidPosition(ldid, kq.point2.X, kq.point2.Y - 100);
                                }
                                break;

                        }

                    }
                    else
                    {
                        scroll_up_short(ldid);
                    }
                }
                ClickOnLeapdroidPosition(ldid, 150, 200);
            }
            catch
            { }
            return false;
        }
        public bool searchlivestream(Account acc, DataGridViewRow dr, string link, CancellationToken token)
        {
            int open = 0;
            bool success = false;
            int maxclicklive = 0;
            dr.Cells["message"].Value = "Đang tìm kiếm livestream";
            List<DetechModel> list_search = new List<DetechModel>();

            DetechModel data = new DetechModel();
            data.parent = "search";
            data.content = "tìm kiếm video";
            data.text = "tìm kiếm video";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_search.Add(data);

            data = new DetechModel();
            data.parent = "search";
            data.content = "Tìm kiếm";
            data.text = "Tìm kiếm";
            data.node = "//node[contains(@class,'android.widget.EditText')]";
            data.function = 1;
            list_search.Add(data);

            data = new DetechModel();
            data.parent = "search";
            data.content = "Tìm kiếm";
            data.text = "Tìm kiếm";
            data.node = "//node[contains(@class,'android.widget.ImageView')]";
            data.function = 1;
            list_search.Add(data);

            data = new DetechModel();
            data.parent = "search";
            data.content = "Tìm kiếm";
            data.text = "Tìm kiếm";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_search.Add(data);



            data = new DetechModel();
            data.parent = "search";
            data.content = "Tìm kiếm";
            data.text = "Tìm kiếm";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_search.Add(data);

            data = new DetechModel();
            data.parent = "search";
            data.content = "Tìm kiếm";
            data.text = "Tìm kiếm";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_search.Add(data);

            data = new DetechModel();
            data.parent = "watching";
            data.content = "người đang xem";
            data.text = "người đang xem";
            data.node = "//node[contains(@class,'android.view.View')]";
            list_search.Add(data);

            data = new DetechModel();
            data.parent = "live";
            data.content = "TRỰC TIẾP";
            data.text = "TRỰC TIẾP";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_search.Add(data);

            //data = new DetechModel();
            //data.parent = "search";
            //data.content = "Tìm kiếm";
            //data.text = "Tìm kiếm";
            //data.node = "//node[contains(@class,'android.widget.Button')]";
            //data.function = 1;
            //list_search.Add(data);

            data = new DetechModel();
            data.parent = "living";
            data.content = "Đang phát trực tiếp";
            data.text = "Đang phát trực tiếp";
            data.node = "//node[contains(@class,'android.view.View')]";
            list_search.Add(data);

            DetechImageModel image = new DetechImageModel();
            image.function = 1;
            image.name = "search";
            image.img = Properties.Resources.search_video;

            int step = 0;

        lb_openlink:
            bool searched = false;
            OpenLink(acc.ldid, "com.facebook.katana", "fb://watch");
            Delay(3);
            if (!checkContent(acc.ldid, "watch"))
            {
                open++;
                if (open < 3)
                    goto lb_openlink;
            }

        Lb_start:
            if (token.IsCancellationRequested)
                return false;

            DetechModel kq = detechFunction(acc.ldid, list_search);
            if (!kq.status)
                kq = detechFunctionCatchImage(acc.ldid, image);

            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case 1:
                        {
                            if (kq.parent == "search")
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point.X + 9, kq.point.Y + 9);
                                Delay(2);
                                PressOnLeapdroid_vietnamese(acc.ldid, link);
                                Delay(1);
                                PressEnter(acc.ldid);
                                Delay(6);
                                searched = true;

                                image = new DetechImageModel();
                                image.function = 1;
                                image.name = "live";
                                image.img = Properties.Resources.tructiep_red;
                                kq = detechFunctionCatchImage(acc.ldid, image);
                                if (kq.status)
                                {
                                    ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    Thread.Sleep(1000);
                                    return true;
                                }

                            }
                            else if (kq.parent == "watching")
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                return true;
                            }
                            else if (kq.parent == "living")
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point.X, kq.point.Y + 30);
                                Delay(3);
                            }
                            else if (kq.parent == "live")
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                maxclicklive++;
                                if (maxclicklive > 5)
                                {
                                    return trylast(acc.ldid);
                                }
                                else
                                {
                                    if (maxclicklive % 3 == 0)
                                    {
                                        open = 0;
                                        goto lb_openlink;
                                    }
                                }
                                Delay(3);
                                List<DetechModel> list_live = new List<DetechModel>();

                                data = new DetechModel();
                                data.parent = "";
                                data.content = "Phát video hiện tại";
                                data.text = "Phát video hiện tại";
                                data.node = "//node[contains(@class,'android.widget.ImageView')]";
                                list_live.Add(data);

                                data = new DetechModel();
                                data.parent = "textlive";
                                data.content = "Đang phát trực tiếp";
                                data.text = "Đang phát trực tiếp";
                                data.node = "//node[contains(@class,'android.view.View')]";
                                list_live.Add(data);

                                kq = detechFunction(acc.ldid, list_live);
                                if (kq.status)
                                {
                                    if (kq.parent == "textlive")
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point.X + 10, kq.point.Y + 100);
                                    else
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    Thread.Sleep(3000);
                                    return true;
                                }
                                else
                                {
                                    if (searched)
                                    {
                                        image = new DetechImageModel();
                                        image.function = 1;
                                        image.name = "live";
                                        image.img = Properties.Resources.tructiep_red;
                                        kq = detechFunctionCatchImage(acc.ldid, image);
                                        if (kq.status)
                                        {
                                            ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                            Thread.Sleep(1000);
                                            return true;
                                        }
                                    }

                                }
                            }
                            break;
                        }
                    case 2:
                        {
                            break;
                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                step++;
                if (step <= 12)
                {
                    goto Lb_start;
                }
            }
            return success;
        }
        private bool trylast(string ldid)
        {
            bool result = false;
            //ClickOnLeapdroidPosition(ldid,100,200);

            //DetechImageModel image = new DetechImageModel();
            //image.function = 1;
            //image.name = "live";
            //image.img = Properties.Resources.tructiep_red;
            //int loop = 0;
            //while (loop < 5)
            //{
            //    DetechModel kq = detechFunctionCatchImage(ldid, image);
            //    if (kq.status)
            //    {
            //        return true;
            //    }
            //}
            return result;
        }
        public int ShareLiveStreamGroupbyName(userLD u, Account acc, DataGridViewRow dr, string link, string content, int numgroup, int i_delay, CancellationToken token)
        {
            int message = 0;
            try
            {
                dr.Cells["message"].Value = "Share livestream vào nhóm ngẫu nhiên";
                List<DetechImageModel> list_images = new List<DetechImageModel>();
                DetechImageModel image = new DetechImageModel();
                image.function = 1;
                image.name = "sharelive";
                image.img = Properties.Resources._1_sharelive;
                list_images.Add(image);

                image = new DetechImageModel();
                image.function = 1;
                image.name = "sharelive";
                image.img = Properties.Resources._1_sharelive_3x;
                list_images.Add(image);

                image = new DetechImageModel();
                image.function = 1;
                image.name = "sharelive";
                image.img = Properties.Resources._1_sharelive_3xEn;
                list_images.Add(image);

                DetechModel data = new DetechModel();
                data.parent = "fullscreen";
                data.content = "Toàn màn hình";
                data.text = "Toàn màn hình";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_sharelive.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Phiên đã hết hạn";
                data.text = "ĐỒNG Ý";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = -3;
                SettingTool.lang.list_sharelive.Add(data);

                int i = 0;
                int step = 0;
                bool has_share = false;
                int numshare = 0;
                bool set_point = true;
                Point pointA = new Point();
                Point pointB = new Point();
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(acc.ldid, SettingTool.lang.list_sharelive);
                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImages(acc.ldid, list_images);
                    if (kq_image.status)
                        kq = kq_image;
                }

                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                dr.Cells["Message"].Value = kq.content;
                                acc.Thongbao = kq.content;
                                goto Lb_finish;
                            }
                        case -3:
                            {
                                LoginPhienHetHan(u, acc, token);
                                break;
                            }
                        case -2:
                            {
                                dr.Cells["Message"].Value = kq.content;
                                acc.Thongbao = kq.content;
                                goto Lb_finish;
                            }
                        case -1:
                            {
                                Thread.Sleep(5000);
                                break;
                            }
                        case 0:
                            {
                                back(acc.ldid, 1);
                                break;
                            }
                        case 1:
                            {
                                if (has_share)
                                {
                                    List<string> list_text = new List<string>();
                                    list_text.Add("chia sẻ");
                                    list_text.Add("share");
                                    List<Point> list_point = FindByXpathDescList(acc.ldid, "//node[contains(@class,'android.widget.Button')]", list_text);
                                    if (list_point.Count > 0)
                                    {
                                        Random rd = new Random();
                                        Point p = list_point[rd.Next(0, list_point.Count)];
                                        ClickOnLeapdroidPosition(acc.ldid, p);
                                        numshare++;
                                        dr.Cells["clSuccess"].Value = numshare;
                                        Delay(i_delay);
                                        if (set_point)
                                        {
                                            if (list_point.Count == 3)
                                            {
                                                pointA = list_point[0];
                                                pointB = list_point[2];
                                                set_point = false;
                                            }
                                            if (list_point.Count == 2)
                                            {
                                                pointA = list_point[0];
                                                pointB = list_point[1];
                                                set_point = false;
                                            }
                                        }
                                        if (list_point.Count == 1)
                                        {
                                            scroll_up_point(acc.ldid, pointB, pointA);
                                            //het nhom roi
                                            Thread.Sleep(1000);
                                            list_point = FindByXpathDescList(acc.ldid, "//node[contains(@class,'android.widget.Button')]", list_text);
                                            if (list_point.Count <= 0)
                                            {
                                                return numshare;
                                            }
                                        }
                                        if (numshare >= numgroup)
                                        {
                                            message = numshare;
                                            goto Lb_finish;
                                        }
                                    }
                                    else
                                    {
                                        if (kq.data.Contains("bạn hiện không thể chia sẻ"))
                                        {
                                            goto Lb_finish;
                                        }
                                        else
                                            ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                    }
                                }
                                else
                                {
                                    if (kq.parent == "fullscreen")
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point.X - 10, kq.point.Y + 50);
                                    else
                                        ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                }
                                Delay(1);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                Delay(1);
                                if (string.IsNullOrEmpty(content))
                                    PressOnLeapdroid_vietnamese(acc.ldid, " ");
                                else
                                    PressOnLeapdroid_vietnamese(acc.ldid, FunctionHelper.method_Spin(content));
                                has_share = true;
                                // scroll_up_randomShare(acc.ldid);
                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    step++;
                    if (step <= 7)
                    {
                        goto Lb_start;
                    }
                    message = numshare;
                }
            Lb_finish:
                numshare = 0;
                i++;
                // activeNewfeed(acc.ldid, "com.facebook.katana");
            }
            catch
            { }
            return message;
        }
        public string viewAddFriendbyNewFeedGroup(userLD u, Account acc, string ldID, string app, string groupid, int minlike, int maxlike, int delay, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            try
            {
                int dem = 0;
                int checkShare = 0;
                int int_scroll = 0;
                int step = 0;
                DetechModel model = new DetechModel();
                model.parent = "";
                model.content = "Reaction";
                model.text = "Reaction";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                SettingTool.lang.list_addfriendnewfeed.Add(model);
            Lb_continued:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                OpenLink(ldID, app, "fb://group/" + groupid);
                Delay(7);
                scroll_up_random(ldID, token);
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_addfriendnewfeed);
                if (kq.status)
                {
                    switch (kq.function)
                    {
                        case -2:
                            {
                                goto Lb_continued;
                            }
                        case -1:
                            {
                                Thread.Sleep(5000);
                                break;
                            }
                        case 0:
                            {
                                back(ldID, 1);
                                break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);

                                if (kq.content.ToLower().Contains("bình luận") || kq.content.ToLower().Contains("comment"))
                                {
                                    checkShare++;
                                    if (checkShare >= 3)
                                    {
                                        backNewfeed(ldID);
                                        checkShare = 0;
                                        scroll_up_random(ldID, token);
                                        goto Lb_start;
                                    }

                                }
                                else
                                    checkShare = 0;

                                if (kq.content.ToLower() == "hãy là người đầu tiên thích nội dung này" || kq.content.ToLower().Contains("first") || kq.content.ToLower().Contains("video trực tiếp") || kq.content.ToLower().Contains("Tham gia nhóm"))
                                {
                                    backNewfeed(ldID);
                                    scroll_up_random(ldID, token);
                                }

                                break;
                            }
                        case 2:
                            {
                                step = 0;
                            Lb_Send:
                                if (token.IsCancellationRequested)
                                {
                                    token.ThrowIfCancellationRequested();
                                }
                                DetechModel kqsend = detechFunction(ldID, SettingTool.lang.list_buttonadd);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);
                                    dem++;
                                    u.setStatusResult(dem);
                                    if (dem >= luot)
                                    {
                                        activeNewfeed(ldID, app);
                                        return "| Add Friend by newfeed complete:" + dem.ToString() + "/" + luot.ToString();
                                    }
                                    Thread.Sleep(delay);
                                    goto Lb_Send;
                                }
                                else
                                {
                                    scroll_up_mid(ldID);
                                    step++;
                                    if (step <= 3)
                                        goto Lb_Send;
                                    else
                                    {
                                        scroll_up_mid(ldID);
                                        step++;
                                        if (step <= 3)
                                            goto Lb_Send;
                                        else
                                        {
                                            goto Lb_continued;
                                        }
                                    }

                                }

                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    scroll_up_random(ldID, token);
                    step++;
                    if (step <= 5)
                    {
                        if (check_Facebook_has_stopped(u, ldID, acc, token) == false)
                        {
                            return "| Add Friend by newfeed complete:" + dem.ToString() + "/" + luot.ToString(); ;
                        }
                        goto Lb_start;

                    }
                    else
                    {

                        //if (step <= 3)
                        int_scroll++;

                        if (int_scroll <= 3)
                        {
                            goto Lb_continued;
                        }
                        else
                        {
                            int_scroll++;
                            if (int_scroll <= 2)
                            {
                                goto Lb_continued;
                            }
                            else
                            {
                                return "| Add Friend by newfeed complete:" + dem.ToString() + "/" + luot.ToString(); ;
                            }

                        }
                    }
                }
                //else
                //{
                //    back(ldID, 1);
                //    goto Lb_continued;

                //}

            }
            catch
            {
            }
            return "| Add Friend by newfeed complete:" + "0/" + luot.ToString();

        }

        public bool Getbirthday(userLD u, Account acc, string ldID, CancellationToken token)
        {
            bool status = false;
            try
            {
                OpenLink(ldID, acc.app, "fb://profile");
                DetechModel Model = new DetechModel();
                List<DetechModel> ls_changebirthday = new List<DetechModel>();
                Model.parent = "edit";
                Model.content = "Chỉnh sửa chi tiết công khai";
                Model.text = "Chỉnh sửa chi tiết công khai";
                Model.node = "//node[contains(@class,'android.widget.TextView')]";
                Model.function = 1;
                ls_changebirthday.Add(Model);

                Model = new DetechModel();

                Model.parent = "edit";
                Model.content = "Chỉnh sửa thông tin giới thiệu";
                Model.text = "Chỉnh sửa thông tin giới thiệu";
                Model.node = "//node[contains(@class,'android.widget.TextView')]";
                Model.function = 1;
                ls_changebirthday.Add(Model);

                Model = new DetechModel();

                Model.parent = "edit";
                Model.content = "Chỉnh sửa chi tiết công khai";
                Model.text = "Chỉnh sửa chi tiết công khai";
                Model.node = "//node[contains(@class,'android.view.View')]";
                Model.function = 1;
                ls_changebirthday.Add(Model);

                Model = new DetechModel();
                Model.parent = "edit";
                Model.content = "Chỉnh sửa thông tin giới thiệu";
                Model.text = "Chỉnh sửa thông tin giới thiệu";
                Model.node = "//node[contains(@class,'android.view.View')]";
                Model.function = 1;
                ls_changebirthday.Add(Model);

                Model = new DetechModel();
                Model.parent = "kq";
                Model.content = "tháng";
                Model.text = "tháng";
                Model.node = "//node[contains(@class,'android.widget.TextView')]";
                Model.function = 1;
                ls_changebirthday.Add(Model);

                Model = new DetechModel();
                Model.parent = "";
                Model.content = "Nhấn để chỉnh sửa trang cá nhân";
                Model.text = "Nhấn để chỉnh sửa trang cá nhân";
                Model.node = "//node[contains(@class,'android.widget.TextView')]";
                Model.function = 0;
                ls_changebirthday.Add(Model);

                Model = new DetechModel();
                Model.parent = "";
                Model.content = "Trang này chưa thể hiển thị ngay";
                Model.text = "Trang này chưa thể hiển thị ngay";
                Model.node = "//node[contains(@class,'android.view.View')]";
                Model.function = -1;
                ls_changebirthday.Add(Model);

                Model = new DetechModel();
                Model.parent = "";
                Model.content = "Hủy";
                Model.text = "Hủy";
                Model.node = "//node[contains(@class,'android.widget.Button')]";
                Model.function = 1;
                ls_changebirthday.Add(Model);

                Model = new DetechModel();
                Model.parent = "";
                Model.content = "Dừng";
                Model.text = "Dừng";
                Model.node = "//node[contains(@class,'android.widget.Button')]";
                Model.function = 1;
                ls_changebirthday.Add(Model);

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources._3x_editaccount);
                ls_name.Add("1_editaccount");

                int step = 0;
            Lb_start:
                if (token.IsCancellationRequested)
                    return false;
                // checkScreen(ldID);
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(ldID, ls_changebirthday);
                if (!kq.status)
                    kq = detechFunctionCatchImage(ldID, ls_image, ls_name);

                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case -1:
                            {
                                return false;
                            }
                        case 0:
                            {
                                back(ldID, 1);
                                break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);
                                if (kq.parent == "editaccount")
                                {
                                    scroll_up(ldID);
                                    scroll_up(ldID);
                                    scroll_up(ldID);
                                }
                                else if (kq.parent == "edit")
                                {
                                    Delay(3);
                                    scroll_up(ldID);

                                }
                                else if (kq.parent == "kq")
                                {
                                    string day = kq.data.Substring(0, 2);
                                    string month = FunctionHelper.smethod_6(kq.data, kq.data.IndexOf("ng") + 2, ",");
                                    string year = FunctionHelper.smethod_6(kq.data, kq.data.IndexOf(",") + 1, "");

                                    if (day.Trim().Length < 2)
                                        day = "0" + day.Trim();
                                    if (month.Trim().Length < 2)
                                        month = "0" + month.Trim();

                                    acc.birthday = month.Trim() + "/" + day.Trim() + "/" + year.Trim();

                                    Data dt = new Data();
                                    RequestParams para = new RequestParams();
                                    para["birthday"] = acc.birthday;
                                    RequestParams where = new RequestParams();
                                    where["Id_account"] = acc.Id_account;
                                    if (dt.update(para, "Account", where))
                                        return true;
                                }

                                break;
                            }


                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    Delay(3);
                    scroll_up_mid(ldID);
                    step++;
                    if (step == 5)
                    {
                        OpenLink(ldID, acc.app, "fb://profile");
                    }

                    if (step <= 6)
                    {
                        if (check_Facebook_has_stopped(u, ldID, acc, token) == false)
                        {
                            return false;
                        }
                        goto Lb_start;

                    }

                }
            }
            catch
            { }
            return status;
        }
        public bool setDNS(string ldid, string proxy, CancellationToken token)
        {
            try
            {
                if (checkApp(ldid, "com.frostnerd.dnschanger") == false)
                {
                    string path = Application.StartupPath + "\\app\\DNSChanger.apk";
                    if (File.Exists(path))
                    {

                        installApp(ldid, path);
                        int int_proxy = 100;
                        while (int_proxy > 0)
                        {
                            int_proxy--;
                            if (checkApp(ldid, "com.frostnerd.dnschanger"))
                            {
                                break;
                            }
                            else
                            {
                                Thread.Sleep(1000);
                            }

                        }
                        Thread.Sleep(3000);
                    }
                }

                string[] arr = proxy.Split('|');
                killApp(ldid, "com.frostnerd.dnschanger");
                runApp(ldid, "com.frostnerd.dnschanger");
                int i = 0;
                List<DetechModel> list_next = new List<DetechModel>();
                DetechModel done = new DetechModel();
                done.parent = "";
                done.content = "";
                done.text = "";
                done.node = "//node[contains(@resource-id,'com.frostnerd.dnschanger:id/dns1')]";
                done.function = 1;
                list_next.Add(done);

                done = new DetechModel();
                done.parent = "dontask";
                done.content = "Đừng hỏi nữa";
                done.text = "Đừng hỏi nữa";
                done.node = "//node[contains(@class,'android.widget.Button')]";
                done.function = 1;
                list_next.Add(done);

                done = new DetechModel();
                done.parent = "dontask";
                done.content = "don't";
                done.text = "don't";
                done.node = "//node[contains(@class,'android.widget.Button')]";
                done.function = 1;
                list_next.Add(done);

            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(ldid, list_next);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(ldid, kq.point);
                    if (kq.parent == "dontask")
                        goto Lb_start;
                    //dns 1
                    if (kq.data != arr[0])
                    {
                        if (SettingTool.configld.versionld == "3.x")
                            ClickOnLeapdroidPosition(ldid, kq.point.X + 200, kq.point.Y);
                        else
                            ClickOnLeapdroidPosition(ldid, kq.point.X + 700, kq.point.Y);
                        for (int n = 0; n < kq.data.Length + 5; n++)
                        {
                            runAdb(ldid, "shell input keyevent 67");
                        }
                        PressOnLeapdroid(ldid, arr[0]);

                    }
                    //dns 2

                    List<DetechModel> list_next2 = new List<DetechModel>();
                    done = new DetechModel();
                    done.parent = "";
                    done.content = "";
                    done.text = "";
                    done.node = "//node[contains(@resource-id,'com.frostnerd.dnschanger:id/dns2')]";
                    done.function = 1;
                    list_next2.Add(done);
                    kq = detechFunction(ldid, list_next2);

                    if (kq.data != arr[1])
                    {
                        if (kq.status)
                        {
                            if (SettingTool.configld.versionld == "3.x")
                                ClickOnLeapdroidPosition(ldid, kq.point.X + 200, kq.point.Y);
                            else
                                ClickOnLeapdroidPosition(ldid, kq.point.X + 600, kq.point.Y);

                            for (int n = 0; n < kq.data.Length + 5; n++)
                            {
                                runAdb(ldid, "shell input keyevent 67");
                            }
                            PressOnLeapdroid(ldid, arr[1]);

                        }
                    }

                    list_next2 = new List<DetechModel>();
                    done = new DetechModel();
                    done.parent = "";
                    done.content = "";
                    done.text = "";
                    done.node = "//node[contains(@resource-id,'com.frostnerd.dnschanger:id/startStopButton')]";
                    done.function = 1;
                    list_next2.Add(done);
                    kq = detechFunction(ldid, list_next2);
                    if (kq.status)
                    {
                        ClickOnLeapdroidPosition(ldid, kq.point);
                        Delay(4);
                        return true;
                    }

                }
                else
                {
                    i++;
                    if (i < 10)
                    {
                        Thread.Sleep(1000);
                        goto Lb_start;
                    }

                }


            }
            catch
            { }
            return false;
        }
        public bool checkVersionApp(string ldid, string version)
        {
            string html = null;

            try
            {
                int loop = 0;
            Loops:
                string cmd = "shell dumpsys package com.facebook.katana | grep versionName";

                html = runAdb(ldid, cmd);
                if (string.IsNullOrEmpty(html))
                {
                    loop++;
                    Delay(1);
                    if (loop < 3)
                    {
                        goto Loops;
                    }


                }
                if (html.Contains("error"))
                {
                    return true;
                }
                if (html.Contains(version))
                {
                    return true;
                }

            }
            catch
            { }
            if (string.IsNullOrEmpty(html))
                return false;
            else
                return true;
        }
        public string joinGroupbysuggest(userLD u, Account acc, string ldid, string app, int minlike, int maxlike, string keyword, int delay, bool autoAnswer, string answer, CancellationToken token)
        {
            int dem = 0;
            int max = 0;
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            u.setStatusSum(luot);
            try
            {
                OpenLink(ldid, app, "fb://groups/gridtab");
                Delay(3);
                List<DetechModel> detechsearch = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "khampha";
                model.content = "Khám phá";
                model.text = "Khám phá";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                detechsearch.Add(model);



                model = new DetechModel();
                model.parent = "joingroup";
                model.content = "Tham gia";
                model.text = "Tham gia";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                detechsearch.Add(model);

                //model = new DetechModel();
                //model.parent = "joingroup";
                //model.content = "Tham gia";
                //model.text = "Tham gia";
                //model.node = "//node[contains(@class,'android.widget.Button')]";
                //model.function = 1;
                //detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Xem tất cả";
                model.text = "Xem tất cả";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "";
                model.content = "Phiên đã hết hạn";
                model.text = "ĐỒNG Ý";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = -10;
                detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "hangmuc";
                model.content = "Hạng mục";
                model.text = "Hạng mục";
                model.node = "//node[contains(@class,'android.view.View')]";
                model.function = 1;
                detechsearch.Add(model);

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources.thamgia);
                ls_name.Add("1_joingroup");

                if (string.IsNullOrEmpty(answer))
                {
                    autoAnswer = true;
                }

            lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                DetechModel kq = detechFunctionExact(ldid, detechsearch);

                if (!kq.status)
                    kq = detechFunctionCatchImage(ldid, ls_image, ls_name);

                if (kq.status & kq.point.Y > 0)
                {
                    max = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                ClickOnLeapdroidPosition(ldid, kq.point);
                                if (LoginPhienHetHan(u, acc, token) == false)
                                {
                                    return "| Phiên hết hạn";
                                }
                                else
                                {
                                    OpenLink(ldid, app, "fb://groups/gridtab");
                                }
                                break;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldid, kq.point);
                                if (kq.parent == "hangmuc")
                                {
                                    scroll_up_mid(ldid);
                                    Delay(1);
                                    ClickOnLeapdroidPosition(ldid, 150, 150);
                                }
                                if (kq.parent == "khampha")
                                {
                                    scroll_up_mid(ldid);
                                    Delay(1);
                                }

                                if (kq.parent == "joingroup")
                                {

                                    if (joinGroupLD(u, acc, ldid, autoAnswer, answer, token, true))
                                    {
                                        dem++;
                                        u.setStatusResult(dem);
                                        scroll_up_slow(ldid);
                                        if (dem >= luot)
                                            return "| Join Group suggest complete:" + dem.ToString() + "/" + luot.ToString();
                                    }
                                    else
                                    {
                                        dem++;
                                        u.setStatusResult(dem);
                                        scroll_up_slow(ldid);
                                        if (dem >= luot)
                                            return "| Join Group suggest complete:" + dem.ToString() + "/" + luot.ToString();

                                        max++;
                                        if (max >= 9)
                                        {
                                            activeNewfeed(ldid, app);
                                            return "| Join Group suggest complete:" + dem.ToString() + "/" + luot.ToString();
                                        }
                                        goto lb_start;
                                    }
                                    goto lb_start;
                                }

                                break;
                            }
                        default:
                            break;
                    }
                    goto lb_start;
                }
                else
                {
                    scroll_up_mid(ldid);
                    if (max == 3)
                        OpenLink(ldid, app, "fb://groups/gridtab");
                    max++;
                    if (max > 9)
                    {
                        activeNewfeed(ldid, app);
                        return "| Join Group complete:" + dem.ToString() + "/" + luot.ToString();
                    }
                    else
                    {
                        if (check_Facebook_has_stopped(u, ldid, acc, token) == false)
                        {
                            return "| Join Group complete:" + dem.ToString() + "/" + luot.ToString();
                        }
                    }
                    goto lb_start;
                }

            }
            catch
            { }
            return "| Join Group complete:" + dem.ToString() + "/" + luot.ToString();
        }

        public bool openlinkvideo(string ldid, string link, bool vertical = false)
        {
            List<DetechModel> lsfull = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data.parent = "fullscreen";
            data.content = "Toàn màn hình";
            data.text = "Toàn màn hình";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            lsfull.Add(data);
            data = new DetechModel();
            data.parent = "fullscreen";
            data.content = "Toàn màn hình";
            data.text = "Toàn màn hình";
            data.node = "//node[contains(@class,'android.widget.ImageView')]";
            data.function = 1;
            lsfull.Add(data);

            data = new DetechModel();
            data.parent = "fullscreen";
            data.content = "Fullscreen";
            data.text = "Fullscreen";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            lsfull.Add(data);

            data = new DetechModel();
            data.parent = "fullscreen";
            data.content = "Fullscreen";
            data.text = "Fullscreen";
            data.node = "//node[contains(@class,'android.widget.ImageView')]";
            data.function = 1;
            lsfull.Add(data);

            string result = functionOpenLink(ldid, "com.facebook.katana", link);
            Delay(2);
            ClickOnLeapdroidPosition(ldid, 150, 250);
            //click nut pause
            int[] position = { 250, 270, 290, 310, 330 };
            int[] position_horizon = { 170, 190, 210, 230, 240 };
            for (int i = 0; i < 5; i++)
            {
                Delay(2);
                if (vertical)
                {
                    ClickOnLeapdroidPosition(ldid, 140, position[i]);
                    Delay(0.3);
                    ClickOnLeapdroidPosition(ldid, 140, position[i]);
                }
                else
                {
                    ClickOnLeapdroidPosition(ldid, 140, position_horizon[i]);
                    Delay(0.3);
                    ClickOnLeapdroidPosition(ldid, 140, position_horizon[i]);
                }

                DetechModel kq = RunDetechFunction(ldid, lsfull, 1);
                if (kq.status)
                {
                    // ClickOnLeapdroidPosition(ldid, kq.point.X-100,kq.point.Y+100);
                    ClickOnLeapdroidPosition(ldid, kq.point.X, kq.point.Y);
                    return true;
                }

            }
            return false;
        }

        public void playvideo(string ldid, string link)
        {
            List<DetechModel> lsfull = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data.parent = "play";
            data.content = "Phát video hiện tại";
            data.text = "Phát video hiện tại";
            data.node = "//node[contains(@class,'android.widget.ImageButton')]";
            data.function = 1;
            lsfull.Add(data);
            data = new DetechModel();
            data.parent = "play";
            data.content = "Phát video hiện tại";
            data.text = "Phát video hiện tại";
            data.node = "//node[contains(@class,'android.widget.ImageView')]";
            data.function = 1;
            lsfull.Add(data);
            Delay(1);
            ClickOnLeapdroidPosition(ldid, 140, 140);

            DetechModel kq = RunDetechFunction(ldid, lsfull);
            if (kq.status)
                ClickOnLeapdroidPosition(ldid, kq.point);

        }
        public string scrollCommentNewFeedbyImage(userLD u, Account acc, string device, string app, int numLike, string content, CancellationToken token, List<string> list_file, bool delImage, int numImage, bool contentImage, int maxfail = 7, int numdelay = 1, bool isgroup = false)
        {
            if (isgroup)
            {
                OpenLink(acc.ldid, app, "fb://groups/gridtab");
                Delay(3);
            }
            int dem = 0;
            int max = 0;
            try
            {
                u.setStatusSum(numLike);
                scroll_down(device);
                Delay(1);
                while (dem < numLike)
                {
                    // activeNewfeed(device, app);
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    scroll_up_random(device, token);
                    string message = content.Replace("$me", acc.name);
                    if (commentImage(acc, device, FunctionHelper.method_Spin(message), list_file, delImage, numImage, contentImage, token))
                    {
                        max = 0;
                        dem++;
                        u.setStatusResult(dem);
                        Delay(numdelay);
                        back(device, 2);
                    }
                    else
                    {
                        max++;
                        if (max == 2)
                            backNewfeed(device);
                    }
                    if (max > maxfail)
                        return "| Comment complete:" + dem.ToString() + "/" + numLike;
                }
            }
            catch
            { }
            return "| Comment complete:" + dem.ToString() + "/" + numLike;
        }
        public bool commentImage(Account acc, string ldID, string mess, List<string> list_file, bool delImage, int numImage, bool contentImage, CancellationToken token)
        {
            try
            {
                int i = 0;
                int max = 0;
                DetechModel data = new DetechModel();
                data.parent = "image";
                data.content = "Hiển thị ảnh và video";
                data.text = "Hiển thị ảnh và video";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;

                List<string> imagedelete = new List<string>();

                List<DetechModel> list_detechcommentImage = new List<DetechModel>();

                foreach (DetechModel model in SettingTool.lang.list_detechcomment)
                {
                    list_detechcommentImage.Add(model);
                }
                list_detechcommentImage.Insert(0, data);

                data = new DetechModel();
                data.parent = "image";
                data.content = "Bình luận bằng Ảnh";
                data.text = "Bình luận bằng Ảnh";
                data.node = "//node[contains(@class,'android.widget.ImageButton')]";
                data.function = 1;
                list_detechcommentImage.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "HD?";
                data.text = "HD?";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                list_detechcommentImage.Insert(0, data);
                bool has_comment = false;
            Lb_start:
                DetechModel kq = detechFunction(ldID, list_detechcommentImage);
                if (kq.status & kq.point.Y > 50)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                // resetFacebook(acc, kq.point, token);
                                return false;
                            }
                        case 1:
                            {
                                if (kq.parent == "comment")
                                {
                                    if (max >= 3)
                                    {
                                        // backNewfeed(ldID);
                                        return false;
                                    }


                                    imagedelete = copyimagenew(ldID, list_file, numImage);

                                    max++;
                                }
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                if (kq.parent == "image")
                                {
                                    List<Point> ls_point = new List<Point>();
                                    List<string> ls_desc = new List<string>();
                                    ls_desc.Add("Ảnh");
                                    ls_point = FindByXpathDescList(ldID, "//node[contains(@class,'android.widget.FrameLayout')]", ls_desc);
                                    if (ls_point.Count >= 2)
                                    {
                                        for (int n = 1; n < ls_point.Count; n++)
                                        {
                                            ClickOnLeapdroidPosition(ldID, ls_point[n].X + 10, ls_point[n].Y + 10);
                                        }
                                        back(ldID, 1);
                                        Delay(2);
                                        if (contentImage)
                                            PressOnLeapdroid_vietnamese(ldID, mess);

                                    Lb_Send:
                                        DetechModel kqsend = RunDetechFunction(ldID, SettingTool.lang.list_detechsend);
                                        if (kqsend.status)
                                        {
                                            ClickOnLeapdroidPosition(ldID, kqsend.point);
                                            Delay(1);
                                            if (delImage)
                                            {
                                                foreach (string del in imagedelete)
                                                    File.Delete(del);
                                            }

                                            return true;
                                        }
                                        else
                                        {
                                            i++;
                                            if (i <= 5)
                                                goto Lb_Send;
                                        }
                                    }
                                    Delay(1);
                                }
                                break;
                            }
                        case 2:
                            {


                                if (has_comment)
                                {
                                    back(ldID, 1);
                                    return false;
                                }
                                else
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    PressOnLeapdroid_vietnamese(ldID, " ");
                                    has_comment = true;
                                }


                                goto Lb_start;


                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    scroll_up_mid(ldID);
                    i++;
                    if (i == 3)
                    {
                        back(ldID, 1);
                    }
                    if (i < 10)
                    {
                        goto Lb_start;
                    }


                }
            }
            catch
            { }
            return false;
        }
        public List<string> copyimagenew(string device, List<string> list_file, int numImage)
        {
            List<string> list_photo = new List<string>();
            if (list_file.Count > 0)
            {
                //xoa temp 
                string path = string.Format("c:\\test\\{0}\\pictures\\temp\\", device);
                List<string> list_pic = System.IO.Directory.GetFiles(path, "*.*").ToList();
                foreach (string str in list_pic)
                {
                    try
                    {
                        File.Delete(str);
                    }
                    catch
                    { }
                }

                if (SettingTool.configld.versionld == "3.x")
                {
                    deleteFolder2(device, "/storage/emulated/legacy/dcim");
                    deleteFolder2(device, "/storage/emulated/legacy/pictures/temp");
                    createFolder2(device, "/storage/emulated/legacy/pictures/temp");
                    deleteFolder2(device, "/storage/emulated/legacy/pictures/Screenshots");
                    runAdb(device, "shell  rm -r storage/emulated/legacy/launcher/ad");//delete
                }
                else
                {
                    deleteFolder2(device, "/storage/emulated/0/pictures/Screenshots");
                    deleteFolder2(device, "/storage/emulated/0/dcim");
                    createFolder2(device, "/storage/emulated/0/dcim");
                }

                string cmd = "";
                for (int i = 0; i < numImage; i++)
                {
                    if (list_file.Count > 0)
                    {
                        Random rd = new Random();

                        string filePath = list_file[rd.Next(0, list_file.Count)];
                        list_photo.Add(filePath);
                        list_file.Remove(filePath);
                        string fileName = Path.GetFileName(filePath);

                        string filePathCopy = path + fileName;
                        System.IO.File.Copy(filePath, filePathCopy);


                        if (SettingTool.configld.versionld == "3.x")
                        {
                            //  cmd = string.Format(" shell mv -i storage/emulated/legacy/pictures/temp/{0} sdcard/dcim/", fileNameCopy);
                            //runAdb(ldID, "shell  rm -r storage/emulated/legacy/launcher/ad");//delete
                        }
                        else
                        {
                            cmd = string.Format(" shell mv -i storage/emulated/0/pictures/temp/{0} sdcard/dcim/", fileName);
                        }

                        //  string output = runAdb(ldID, cmd);

                        //   runAdb(ldID, String.Format("shell am broadcast -a android.intent.action.MEDIA_SCANNER_SCAN_FILE -d file:////storage/emulated/0/dcim/{0}", fileNameCopy));
                        //list_photo.Add(filePath);
                    }
                    else
                        break;

                }
                cmd = "shell am broadcast -a android.intent.action.MEDIA_MOUNTED -d file:///storage/emulated/0/dcim";
                runAdb(device, cmd);
            }
            return list_photo;
        }
        public bool Changecity(string ldID, Account acc, string city, CancellationToken token)
        {
            bool status = false;
            List<DetechModel> list_detech = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data.parent = "step1";
            data.content = "Chỉnh sửa chi tiết công khai";
            data.text = "Chỉnh sửa chi tiết công khai";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "step2";
            data.content = "Chỉnh sửa thông tin giới thiệu";
            data.text = "Chỉnh sửa thông tin giới thiệu";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "removecitycurrent";
            data.content = "Thêm tỉnh/thành phố hiện tại (bắt buộc)";
            data.text = "Thêm tỉnh/thành phố hiện tại (bắt buộc)";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 2;
            list_detech.Add(data);

            //data = new DetechModel();
            //data.parent = "edit";
            //data.content = "Chi tiết";
            //data.text = "Chỉnh sửa";
            //data.node = "//node[contains(@class,'android.widget.TextView')]";
            //data.function = 1;
            //list_detech.Add(data);

            //data = new DetechModel();
            //data.parent = "city";
            //data.content = "Sống tại";
            //data.text = "Sống tại";
            //data.node = "//node[contains(@class,'android.widget.TextView')]";
            //data.function = 1;
            //list_detech.Add(data);

            data = new DetechModel();
            data.parent = "removecitycurrent";
            data.content = "Gỡ tỉnh/thành phố hiện tại";
            data.text = "Gỡ tỉnh/thành phố hiện tại";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_detech.Add(data);

            //data = new DetechModel();
            //data.parent = "city";
            //data.content = "Tỉnh/Thành phố hiện tại";
            //data.text = "Tỉnh/Thành phố hiện tại";
            //data.node = "//node[contains(@class,'android.widget.TextView')]";
            //data.function = 1;
            //list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Thêm tỉnh/thành phố";
            data.text = "Thêm tỉnh/thành phố";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Thêm tỉnh/thành phố hiện tại";
            data.text = "Thêm tỉnh/thành phố hiện tại";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "addphoto";
            data.content = "Thêm ảnh của chính bạn";
            data.text = "Thêm ảnh của chính bạn";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "chooseImage";
            data.content = "Chọn ảnh";
            data.text = "Chọn ảnh";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "history";
            data.content = "Chỉnh sửa tiểu sử";
            data.text = "Chỉnh sửa tiểu sử";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "removecitycurrent";
            data.content = "Chọn tỉnh/thành phố hiện tại";
            data.text = "Chọn tỉnh/thành phố hiện tại";
            data.node = "//node[contains(@class,'android.widget.EditText')]";
            data.function = 2;
            list_detech.Add(data);

            List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
            DetechImageModel detechimg = new DetechImageModel();
            //detechimg.name = "";
            //detechimg.function = 1;
            //detechimg.img = Properties.Resources._1_tinhthanhpho;
            //list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "edit";
            detechimg.function = 1;
            detechimg.img = Properties.Resources.chinhsuacongkhai;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "edit";
            detechimg.function = 1;
            detechimg.img = Properties.Resources.chinhsuathongtin;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "";
            detechimg.function = 3;
            detechimg.img = Properties.Resources.toidau;
            list_detechimg.Add(detechimg);

            int step = 0;
            Delay(3);
            OpenLink(ldID, "com.facebook.katana", "fb://profile");
            Delay(1);
            scroll_up_mid(ldID);
            int maxEdit = 0;
            int maxchontinh = 0;
        Lb_start:
            if (token.IsCancellationRequested)
                token.ThrowIfCancellationRequested();

            DetechModel kq = detechFunction(ldID, list_detech);
            if (!kq.status)
            {
                kq = detechFunctionCatchImages(ldID, list_detechimg);
            }

            if (kq.status & kq.point.Y > 20)
            {
                step = 0;
                switch (kq.function)
                {
                    case 0:
                        {
                            back(ldID, 1);
                            Delay(1);
                            if (kq.parent == "history" || kq.parent == "chooseImage" || kq.parent == "addphoto")
                            {
                                scroll_up_short(ldID);

                            }
                            break;
                        }
                    case 1:
                        {
                            if (kq.parent == "step2")
                            {
                                data = new DetechModel();
                                data.parent = "city";
                                data.content = "Tỉnh/Thành phố hiện tại";
                                data.text = "Tỉnh/Thành phố hiện tại";
                                data.node = "//node[contains(@class,'android.widget.TextView')]";
                                data.function = 1;
                                list_detech.Add(data);

                                data = new DetechModel();
                                data.parent = "city";
                                data.content = "Sống tại";
                                data.text = "Sống tại";
                                data.node = "//node[contains(@class,'android.widget.TextView')]";
                                data.function = 1;
                                list_detech.Add(data);
                            }
                            if (kq.parent == "city")
                                ClickOnLeapdroidPosition(ldID, kq.point2.X + 33, kq.point2.Y);
                            else
                                ClickOnLeapdroidPosition(ldID, kq.point);
                            Delay(10);
                            if (kq.parent == "edit" || kq.parent == "city")
                            {
                                maxEdit++;
                                if (maxEdit > 3)
                                    list_detech.Remove(kq);
                            }
                            if (kq.parent == "step1")
                            {
                                scroll_up_mid(ldID);
                            }
                            break;
                        }

                    case 2:
                        {
                            maxchontinh++;
                            if (maxchontinh > 3)
                            {
                                if (maxchontinh % 3 == 0)
                                {
                                    back(ldID, 2);
                                    break;
                                }
                            }
                            Delay(1);
                            setKeyboard(ldID);
                            ClickOnLeapdroidPosition(ldID, kq.point.X + 5, kq.point.Y);

                            if (kq.parent == "removecitycurrent")
                            {

                                Delay(2);
                                PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(city));
                                Delay(2);
                                List<Point> ls_location = new List<Point>();

                                ls_location = FindByXpathTree(ldID, "//node[contains(@class,'android.widget.ScrollView')]", "//node[contains(@class,'android.widget.TextView')]");
                                if (ls_location.Count > 0)
                                {
                                    ClickOnLeapdroidPosition(ldID, ls_location[0]);
                                    Delay(1);
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "LƯU";
                                    data.text = "LƯU";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 0;
                                    List<DetechModel> list_detechSave = new List<DetechModel>();
                                    list_detechSave.Add(data);
                                    kq = RunDetechFunction(ldID, list_detechSave);
                                    if (kq.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq.point);
                                        return true;
                                    }
                                }

                            }
                            Delay(1);

                            break;
                        }
                    case 3:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point.X + 5, kq.point.Y + 20);
                            Delay(1);
                            PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(city));
                            Delay(5);

                            detechimg = new DetechImageModel();
                            detechimg.name = "";
                            detechimg.function = 3;
                            detechimg.img = Properties.Resources.location;

                            List<DetechImageModel> ls_tao = new List<DetechImageModel>();
                            ls_tao.Add(detechimg);

                            kq = detechFunctionCatchImages(ldID, ls_tao);
                            if (kq.status)
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);

                            }
                            scroll_up(ldID);

                            ls_tao = new List<DetechImageModel>();
                            detechimg = new DetechImageModel();
                            detechimg.name = "";
                            detechimg.function = 3;
                            detechimg.img = Properties.Resources.tao;


                            ls_tao.Add(detechimg);

                            kq = detechFunctionCatchImages(ldID, ls_tao);
                            if (kq.status)
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                return true;
                            }

                            break;
                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                scroll_up_short(ldID);
                if (step == 6)
                {
                    OpenLink(ldID, "com.facebook.katana", "fb://profile");
                }
                Delay(1);
                step++;
                if (step <= 8)
                {
                    goto Lb_start;
                }
            }

            return status;
        }

        public bool ChangeWork(string ldID, Account acc, string work, CancellationToken token)
        {
            bool status = false;

            List<DetechModel> list_detech = new List<DetechModel>();
            DetechModel data = new DetechModel();

            data = new DetechModel();
            data.parent = "";
            data.content = "Chỉnh sửa chi tiết công khai";
            data.text = "Chỉnh sửa chi tiết công khai";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Chỉnh sửa thông tin giới thiệu";
            data.text = "Chỉnh sửa thông tin giới thiệu";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Thêm nghề nghiệp";
            data.text = "Thêm nghề nghiệp";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "company";
            data.content = "Tên nơi làm việc";
            data.text = "Tên nơi làm việc";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 2;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "history";
            data.content = "Chỉnh sửa tiểu sử";
            data.text = "Chỉnh sửa tiểu sử";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Gỡ tên nơi làm việc";
            data.text = "Gỡ tên nơi làm việc";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Thêm kinh nghiệm làm việc";
            data.text = "Thêm kinh nghiệm làm việc";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Thêm nghề nghiệp";
            data.text = "Thêm nghề nghiệp";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "editCompany";
            data.content = "Bắt đầu vào";
            data.text = "Bắt đầu vào";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "addphoto";
            data.content = "Thêm ảnh của chính bạn";
            data.text = "Thêm ảnh của chính bạn";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "chooseImage";
            data.content = "Chọn ảnh";
            data.text = "Chọn ảnh";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            //data = new DetechModel();
            //data.parent = "edit";
            //data.content = "Chi tiết";
            //data.text = "Chỉnh sửa";
            //data.node = "//node[contains(@class,'android.widget.TextView')]";
            //data.function = 1;
            //list_detech.Add(data);

            List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
            DetechImageModel detechimg = new DetechImageModel();
            detechimg.name = "";
            detechimg.function = 1;
            detechimg.img = Properties.Resources._1_noilamviec;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "edit";
            detechimg.function = 1;
            detechimg.img = Properties.Resources.chinhsuathongtin;
            list_detechimg.Add(detechimg);

            detechimg = new DetechImageModel();
            detechimg.name = "edit";
            detechimg.function = 1;
            detechimg.img = Properties.Resources.chinhsuacongkhai;
            list_detechimg.Add(detechimg);

            int step = 0;
            Delay(3);
            OpenLink(ldID, "com.facebook.katana", "fb://profile");
            Delay(1);
            scroll_up_mid(ldID);
        Lb_start:
            if (token.IsCancellationRequested)
                token.ThrowIfCancellationRequested();

            DetechModel kq = detechFunction(ldID, list_detech);
            if (!kq.status)
            {
                kq = detechFunctionCatchImages(ldID, list_detechimg);
            }

            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case 0:
                        {
                            back(ldID, 1);
                            if (kq.parent == "history" || kq.parent == "chooseImage" || kq.parent == "addphoto")
                                scroll_up_short(ldID);
                            break;
                        }
                    case 1:
                        {
                            if (kq.parent == "editCompany")
                                ClickOnLeapdroidPosition(ldID, kq.point2.X + 30, kq.point2.Y);
                            else
                                ClickOnLeapdroidPosition(ldID, kq.point);

                            break;
                        }

                    case 2:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point.X + 5, kq.point.Y);
                            if (kq.parent == "company")
                            {
                                Delay(2);
                                PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(work));
                                Delay(2);
                                List<Point> ls_location = new List<Point>();
                                ls_location = FindByXpathTree(ldID, "//node[contains(@class,'android.widget.ScrollView')]", "//node[contains(@class,'android.widget.TextView')]");
                                if (ls_location.Count > 0)
                                {
                                    ClickOnLeapdroidPosition(ldID, ls_location[0]);
                                    Delay(1);
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "LƯU";
                                    data.text = "LƯU";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 0;
                                    List<DetechModel> list_detechSave = new List<DetechModel>();
                                    list_detechSave.Add(data);
                                    kq = RunDetechFunction(ldID, list_detechSave);
                                    if (kq.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq.point);
                                        return true;
                                    }
                                }

                            }
                            Delay(1);

                            break;
                        }


                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                scroll_up_short(ldID);
                step++;
                if (step <= 5)
                {
                    goto Lb_start;
                }
            }

            return status;
        }

        public bool ChangeSchool(string ldID, Account acc, string work, CancellationToken token)
        {
            bool status = false;

            List<DetechModel> list_detech = new List<DetechModel>();
            DetechModel data = new DetechModel();

            data = new DetechModel();
            data.parent = "";
            data.content = "Chỉnh sửa chi tiết công khai";
            data.text = "Chỉnh sửa chi tiết công khai";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Chỉnh sửa thông tin giới thiệu";
            data.text = "Chỉnh sửa thông tin giới thiệu";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "addschool";
            data.content = "Tên trường đại học";
            data.text = "Tên trường đại học";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 2;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Thêm trường đại học";
            data.text = "Thêm trường đại học";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "addschool";
            data.content = "Thêm trường cao đẳng";
            data.text = "Thêm trường cao đẳng";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "history";
            data.content = "Chỉnh sửa tiểu sử";
            data.text = "Chỉnh sửa tiểu sử";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "addphoto";
            data.content = "Thêm ảnh của chính bạn";
            data.text = "Thêm ảnh của chính bạn";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "chooseImage";
            data.content = "Chọn ảnh";
            data.text = "Chọn ảnh";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            //data = new DetechModel();
            //data.parent = "edit";
            //data.content = "Chi tiết";
            //data.text = "Chỉnh sửa";
            //data.node = "//node[contains(@class,'android.widget.TextView')]";
            //data.function = 1;
            //list_detech.Add(data);

            List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
            DetechImageModel detechimg = new DetechImageModel();
            detechimg.name = "";
            detechimg.function = 1;
            detechimg.img = Properties.Resources._1_truonghoc;
            list_detechimg.Add(detechimg);

            int step = 0;
            Delay(3);
            OpenLink(ldID, "com.facebook.katana", "fb://profile");
            Delay(1);
            scroll_up_mid(ldID);
        Lb_start:
            if (token.IsCancellationRequested)
                token.ThrowIfCancellationRequested();

            DetechModel kq = detechFunction(ldID, list_detech);
            if (!kq.status)
            {
                kq = detechFunctionCatchImages(ldID, list_detechimg);
            }

            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case 0:
                        {
                            back(ldID, 1);
                            if (kq.parent == "history" || kq.parent == "chooseImage" || kq.parent == "addphoto")
                                scroll_up_short(ldID);
                            break;
                        }
                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            break;
                        }

                    case 2:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point.X + 5, kq.point.Y);
                            if (kq.parent == "addschool")
                            {
                                Delay(2);
                                PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(work));
                                Delay(2);
                                List<Point> ls_location = new List<Point>();
                                ls_location = FindByXpathTree(ldID, "//node[contains(@class,'android.widget.ScrollView')]", "//node[contains(@class,'android.widget.TextView')]");
                                if (ls_location.Count > 0)
                                {
                                    Delay(1);
                                    ClickOnLeapdroidPosition(ldID, ls_location[0]);
                                    Delay(1);
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "LƯU";
                                    data.text = "LƯU";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 0;
                                    List<DetechModel> list_detechSave = new List<DetechModel>();
                                    list_detechSave.Add(data);
                                    kq = RunDetechFunction(ldID, list_detechSave);
                                    if (kq.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq.point);
                                        return true;
                                    }
                                }
                            }
                            Delay(1);
                            break;
                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                scroll_up_short(ldID);
                step++;
                if (step <= 5)
                {
                    goto Lb_start;
                }
            }
            return status;
        }

        public bool ChangeQuequan(string ldID, Account acc, string work, CancellationToken token)
        {
            bool status = false;

            List<DetechModel> list_detech = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data = new DetechModel();
            data.parent = "";
            data.content = "Chỉnh sửa chi tiết công khai";
            data.text = "Chỉnh sửa chi tiết công khai";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "addquequan";
            data.content = "Tên quê quán (Bắt buộc)";
            data.text = "Tên quê quán (Bắt buộc)";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 2;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Gỡ quê quán";
            data.text = "Gỡ quê quán";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Thêm quê quán";
            data.text = "Thêm quê quán";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "Chỉnh sửa thông tin giới thiệu";
            data.text = "Chỉnh sửa thông tin giới thiệu";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "from";
            data.content = "Đến từ";
            data.text = "Đến từ";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "edit";
            data.content = "Chi tiết";
            data.text = "Chỉnh sửa";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "history";
            data.content = "Chỉnh sửa tiểu sử";
            data.text = "Chỉnh sửa tiểu sử";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "addphoto";
            data.content = "Thêm ảnh của chính bạn";
            data.text = "Thêm ảnh của chính bạn";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "chooseImage";
            data.content = "Chọn ảnh";
            data.text = "Chọn ảnh";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
            DetechImageModel detechimg = new DetechImageModel();
            detechimg.name = "";
            detechimg.function = 1;
            detechimg.img = Properties.Resources._1_quequan;
            list_detechimg.Add(detechimg);

            int step = 0;
            Delay(3);
            OpenLink(ldID, "com.facebook.katana", "fb://profile");
            Delay(1);
            scroll_up_short(ldID);
            int maxEdit = 0;
        Lb_start:
            if (token.IsCancellationRequested)
                token.ThrowIfCancellationRequested();

            DetechModel kq = detechFunction(ldID, list_detech);
            if (!kq.status)
            {
                kq = detechFunctionCatchImages(ldID, list_detechimg);
            }

            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case 0:
                        {
                            back(ldID, 1);
                            if (kq.parent == "history" || kq.parent == "chooseImage" || kq.parent == "addphoto")
                                scroll_up_short(ldID);
                            break;
                        }
                    case 1:
                        {
                            if (kq.parent == "from")
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point2.X, kq.point2.Y);
                                ClickOnLeapdroidPosition(ldID, kq.point2.X + 30, kq.point2.Y);
                            }

                            else
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                if (kq.parent == "edit")
                                {
                                    scroll_up_short(ldID);
                                    maxEdit++;
                                    if (maxEdit > 3)
                                        list_detech.Remove(kq);
                                }
                            }




                            break;
                        }

                    case 2:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point.X + 5, kq.point.Y);
                            if (kq.parent == "addquequan")
                            {
                                Delay(2);
                                PressOnLeapdroid_vietnamese(ldID, FunctionHelper.method_Spin(work));
                                Delay(2);
                                List<Point> ls_location = new List<Point>();
                                ls_location = FindByXpathTree(ldID, "//node[contains(@class,'android.widget.ScrollView')]", "//node[contains(@class,'android.widget.TextView')]");
                                if (ls_location.Count > 0)
                                {
                                    Delay(1);
                                    ClickOnLeapdroidPosition(ldID, ls_location[0]);
                                    Delay(1);
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "LƯU";
                                    data.text = "LƯU";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 0;
                                    List<DetechModel> list_detechSave = new List<DetechModel>();
                                    list_detechSave.Add(data);
                                    kq = RunDetechFunction(ldID, list_detechSave);
                                    if (kq.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq.point);
                                        return true;
                                    }
                                }
                            }
                            Delay(1);
                            break;
                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                scroll_up_short(ldID);
                step++;
                if (step <= 5)
                {
                    goto Lb_start;
                }
            }
            return status;
        }

        public bool ChangeHobby(string ldID, Account acc, string work, CancellationToken token)
        {
            bool status = false;

            List<DetechModel> list_detech = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data = new DetechModel();
            data.parent = "step1";
            data.content = "Chỉnh sửa chi tiết công khai";
            data.text = "Chỉnh sửa chi tiết công khai";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "add";
            data.content = "Sở thích sẽ hiển thị công khai";
            data.text = "Sở thích sẽ hiển thị công khai";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 2;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "add";
            data.content = "Sở thích";
            data.text = "Thêm";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "update";
            data.content = "Sở thích";
            data.text = "Chỉnh sửa";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "history";
            data.content = "Chỉnh sửa tiểu sử";
            data.text = "Chỉnh sửa tiểu sử";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "addphoto";
            data.content = "Chỉnh sửa phần giới thiệu";
            data.text = "Chỉnh sửa phần giới thiệu";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "addphoto";
            data.content = "Thêm ảnh của chính bạn";
            data.text = "Thêm ảnh của chính bạn";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "chooseImage";
            data.content = "Chọn ảnh";
            data.text = "Chọn ảnh";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "";
            data.content = "LƯU";
            data.text = "Sở thích";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 2;
            list_detech.Add(data);

            int step = 0;
            Delay(1);
            OpenLink(ldID, "com.facebook.katana", "fb://profile");
            Delay(3);
            scroll_up_mid(ldID);
            int maxadd = 0;
        Lb_start:
            if (token.IsCancellationRequested)
                token.ThrowIfCancellationRequested();

            DetechModel kq = detechFunction(ldID, list_detech);

            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case 0:
                        {
                            Delay(1);
                            if (kq.parent == "history")
                                back(ldID, 2);
                            else if (kq.parent == "chooseImage" || kq.parent == "addphoto")
                                back(ldID, 1);

                            scroll_up_short(ldID);
                            break;
                        }
                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            if (kq.parent == "add")
                            {
                                maxadd++;
                                if (maxadd > 3)
                                {
                                    data = new DetechModel();
                                    data.parent = "update";
                                    data.content = "Sở thích";
                                    data.text = "Chỉnh sửa";
                                    data.node = "//node[contains(@class,'android.widget.TextView')]";
                                    data.function = 1;
                                    list_detech.Insert(2, data);
                                }
                            }
                            if (kq.parent == "step1")
                            {
                                scroll_up_mid(ldID);
                                Delay(1);
                                scroll_up_mid(ldID);
                            }
                            break;
                        }

                    case 2:
                        {
                            scroll_up_random(ldID, token);
                            List<Point> lshobby = new List<Point>();
                            lshobby = FindListPointByXpath(ldID, "//node[contains(@class,'android.widget.CheckBox')]");

                            if (lshobby.Count > 0)
                            {
                                Random rd = new Random();
                                int select = rd.Next(3, lshobby.Count);
                                for (int i = 0; i < select; i++)
                                {
                                    ClickOnLeapdroidPosition(ldID, lshobby[i]);
                                    Thread.Sleep(500);
                                }
                                List<DetechModel> list_detechSave = new List<DetechModel>();
                                data = new DetechModel();
                                data.parent = "";
                                data.content = "LƯU";
                                data.text = "LƯU";
                                data.node = "//node[contains(@class,'android.widget.Button')]";
                                data.function = 0;
                                list_detechSave.Add(data);

                                data = new DetechModel();
                                data.parent = "";
                                data.content = "LƯU";
                                data.text = "LƯU";
                                data.node = "//node[contains(@class,'android.view.View')]";
                                data.function = 0;
                                list_detechSave.Add(data);

                                kq = RunDetechFunction(ldID, list_detechSave);
                                if (kq.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kq.point);
                                    Thread.Sleep(1000);
                                    return true;
                                }
                            }

                            Delay(1);
                            break;
                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                Delay(1);
                scroll_up_mid(ldID);

                step++;
                if (step <= 8)
                {
                    goto Lb_start;
                }
            }
            return status;
        }

        public bool ChangeMarriage(string ldID, Account acc, string work, CancellationToken token)
        {
            bool status = false;

            List<DetechModel> list_detech = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data = new DetechModel();
            data.parent = "step1";
            data.content = "Chỉnh sửa chi tiết công khai";
            data.text = "Chỉnh sửa chi tiết công khai";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "step2";
            data.content = "Chỉnh sửa thông tin giới thiệu";
            data.text = "Chỉnh sửa thông tin giới thiệu";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "step3";
            data.content = "Tình trạng mối quan hệ";
            data.text = "Tình trạng mối quan hệ";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);


            data = new DetechModel();
            data.parent = "step4";
            data.content = "Thêm tình trạng mối quan hệ";
            data.text = "Thêm tình trạng mối quan hệ";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 1;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "history";
            data.content = "Chỉnh sửa tiểu sử";
            data.text = "Chỉnh sửa tiểu sử";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "addphoto";
            data.content = "Chỉnh sửa phần giới thiệu";
            data.text = "Chỉnh sửa phần giới thiệu";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "addphoto";
            data.content = "Thêm ảnh của chính bạn";
            data.text = "Thêm ảnh của chính bạn";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            data = new DetechModel();
            data.parent = "chooseImage";
            data.content = "Chọn ảnh";
            data.text = "Chọn ảnh";
            data.node = "//node[contains(@class,'android.widget.TextView')]";
            data.function = 0;
            list_detech.Add(data);

            int step = 0;
            Delay(3);
            OpenLink(ldID, "com.facebook.katana", "fb://profile");
            Delay(1);
            scroll_up_mid(ldID);
            scroll_up_short(ldID);
           

            List<Bitmap> ls_image = new List<Bitmap>();
            List<string> ls_name = new List<string>();

            ls_image.Add(Properties.Resources.moiquanhe);
            ls_name.Add("2_quanhe");
            ls_image.Add(Properties.Resources.luu);
            ls_name.Add("3_quanhe");

        Lb_start:
            if (token.IsCancellationRequested)
                token.ThrowIfCancellationRequested();

            DetechModel kq = detechFunction(ldID, list_detech);

            if (!kq.status)
            {
                kq = detechFunctionCatchImage(ldID, ls_image, ls_name);
            }
            if (kq.status)
            {
                step = 0;
                switch (kq.function)
                {
                    case 0:
                        {
                            Delay(1);
                            if (kq.parent == "history")
                                back(ldID, 2);
                            else if (kq.parent == "chooseImage" || kq.parent == "addphoto")
                                back(ldID, 1);

                            scroll_up_short(ldID);
                            break;
                        }
                    case 1:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);

                            if (kq.parent == "step1" || kq.parent == "step3")
                            {
                                scroll_up_mid(ldID);
                                Delay(1);
                                scroll_up_mid(ldID);
                            }
                            break;
                        }

                    case 2:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            List<Point> lshobby = new List<Point>();
                            lshobby = FindListPointByXpath(ldID, "//node[contains(@class,'android.widget.CheckedTextView')]");
                            Delay(1);

                            if (lshobby.Count > 0)
                            {
                                Random rd = new Random();
                                int select = rd.Next(1, lshobby.Count);

                                ClickOnLeapdroidPosition(ldID, lshobby[select].X + 10, lshobby[select].Y + 10);

                                Delay(2);
                            }
                            break;
                        }
                    case 3:
                        {
                            ClickOnLeapdroidPosition(ldID, kq.point);
                            Delay(2);
                            return true;

                        }
                    default:
                        break;
                }
                goto Lb_start;
            }
            else
            {
                Delay(3);
                scroll_up_mid(ldID);
                step++;
                if (step <= 8)
                {
                    goto Lb_start;
                }
            }
            return status;
        }

        public void clearappfb(string ldID)
        {
            deleteFolderFacebook(ldID, "com.facebook.katana");
            createFolder(ldID, "com.facebook.katana");
        }
        public void restoredatafb(string ldID, string uid)
        {


            string folderLD_v2 = string.Format("C:\\test\\{0}\\pictures\\datafb2.tar.gz", ldID);
            string zipFile_v2 = string.Format("{0}\\{1}\\datafb2.tar.gz", SettingTool.configld.pathsavedata, uid);
            string folderLD = string.Format("C:\\test\\{0}\\pictures\\datafb", ldID);
            string zipFile = string.Format("{0}\\{1}\\{1}.7z", SettingTool.configld.pathsavedata, uid);
            string cmd = "";
            try
            {
                deleteFolderFacebook(ldID, "com.facebook.katana");
                createFolder(ldID, "com.facebook.katana");

                //restore new 
                if (File.Exists(zipFile_v2))
                {

                    if (File.Exists(folderLD_v2))
                        File.Delete(folderLD_v2);
                    File.Copy(zipFile_v2, folderLD_v2);
                    Delay(1);
                    cmd = String.Format(" shell mv storage/emulated/legacy/pictures/datafb2.tar.gz /data/data/datafb2.tar.gz");
                    runAdb(ldID, cmd);
                    Delay(1);
                    cmd = String.Format(" shell tar -xzvf /data/data/datafb2.tar.gz");
                    runAdb(ldID, cmd);
                    Delay(1);
                    return;
                }
            }
            catch
            {

            }
            if (!File.Exists(zipFile))
                return;
            if (Directory.Exists(folderLD))
            {
                System.IO.DirectoryInfo di = new DirectoryInfo(folderLD);
                foreach (FileInfo file in di.GetFiles())
                {
                    file.Delete();
                }
            }
            cmd = string.Format("7za e -pNinjaSystemPRO8686 \"{0}\" -o\"{1}\"", zipFile, folderLD);
            string html = ExecuteCMD(SettingTool.pathfolderld, cmd);

            if (SettingTool.configld.versionld == "3.x")
            {
                cmd = String.Format("shell mv storage/emulated/legacy/pictures/datafb/1 /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/authentication");
                html = runAdb(ldID, cmd);
                cmd = String.Format("shell mv storage/emulated/legacy/pictures/datafb/2 /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/account_manager");
                runAdb(ldID, cmd);
                cmd = String.Format("shell mv storage/emulated/legacy/pictures/datafb/3 /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/analytics_flexible_sampling_policy");
                runAdb(ldID, cmd);
                cmd = String.Format("shell mv storage/emulated/legacy/pictures/datafb/4 /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/analytics_periodic_events");
                runAdb(ldID, cmd);
                cmd = String.Format("shell mv storage/emulated/legacy/pictures/datafb/5 /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/dbl_local_auth_{0}", uid);
                runAdb(ldID, cmd);
                cmd = String.Format("shell mv storage/emulated/legacy/pictures/datafb/6 /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/default_phone_id");
                runAdb(ldID, cmd);
                cmd = String.Format("shell mv storage/emulated/legacy/pictures/datafb/7 /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/funnel_reliability_stats");
                runAdb(ldID, cmd);
                cmd = String.Format("shell mv storage/emulated/legacy/pictures/datafb/8 /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/logged_in_{0}", uid);
                runAdb(ldID, cmd);
                cmd = String.Format("shell mv storage/emulated/legacy/pictures/datafb/9 /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/overtheair_prefs");
                runAdb(ldID, cmd);
                cmd = String.Format("shell mv storage/emulated/legacy/pictures/datafb/10 /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/pw_enc_key");
                runAdb(ldID, cmd);
                cmd = String.Format("shell mv storage/emulated/legacy/pictures/datafb/11 /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/user_storage_device_key");
                runAdb(ldID, cmd);


            }
            else
            {
                cmd = String.Format(" shell mkdir storage/emulated/legacy/pictures/datafb");
                runAdb(ldID, cmd);

                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/authentication storage/emulated/0/pictures/datafb/authentication'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/account_manager storage/emulated/0/pictures/datafb/account_manager'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/analytics_flexible_sampling_policy storage/emulated/0/pictures/datafb/analytics_flexible_sampling_policy'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/analytics_periodic_events storage/emulated/0/pictures/datafb/analytics_periodic_events'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/dbl_local_auth_{0} storage/emulated/0/pictures/datafb/dbl_local_auth_{0}'", uid);
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/default_phone_id storage/emulated/0/pictures/datafb/default_phone_id'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/funnel_reliability_stats storage/emulated/0/pictures/datafb/funnel_reliability_stats'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/logged_in_{0} storage/emulated/0/pictures/datafb/logged_in_{0}'", uid);
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/overtheair_prefs storage/emulated/0/pictures/datafb/overtheair_prefs'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/pw_enc_key storage/emulated/0/pictures/datafb/pw_enc_key'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/user_storage_device_key storage/emulated/0/pictures/datafb/user_storage_device_key'");
                runAdb(ldID, cmd);
            }

        }
        public void KhoiTaoLDGoc()
        {
            string ldid = "0";
            quit1(ldid);

            string LDsource = string.Format("{0}\\vms\\leidian0\\data.vmdk", SettingTool.configld.pathLD);
            if (File.Exists(LDsource))
            {
                File.Delete(LDsource);
            }
            createLD(ldid);
        }
        public void quit1(string ldID)
        {
            try
            {
                string cmd = String.Format("quit --index {0}", ldID);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
                //Thread.Sleep(2000);
            }
            catch { }

        }
        public void createLD(string ldid)
        {
            remove(ldid);
            string cmd = String.Format("add --name {0} ", ldid);
            ExecuteAsAdmin(SettingTool.pathLD, cmd);

        }
        private void deleteConfigLD(string ldid)
        {
            try
            {
                string path = string.Format("{0}\\vms\\config\\leidian{1}.config", SettingTool.configld.pathLD, ldid);
                if (File.Exists(path))
                {
                    File.Delete(path);
                }
            }
            catch
            { }
        }
        public void SearchInfo(string ldid, string app, string keyword, int delay, CancellationToken token)
        {
            try
            {
                int loop = 0;

                if (token.IsCancellationRequested)
                {
                    token.ThrowIfCancellationRequested();
                }
                // OpenLink(ldid, app, "fb://groups/gridtab");
                //  Delay(3);
                List<DetechModel> detechsearch = new List<DetechModel>();

                DetechModel model = new DetechModel();
                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Tìm kiếm trên Facebook";
                model.text = "Tìm kiếm trên Facebook";
                model.node = "//node[contains(@class,'android.widget.Button')]";
                model.function = 1;
                detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Tìm kiếm trên Facebook";
                model.text = "Tìm kiếm trên Facebook";
                model.node = "//node[contains(@class,'android.widget.ImageView')]";
                model.function = 1;
                detechsearch.Add(model);

                model = new DetechModel();
                model.parent = "clicksearch";
                model.content = "Search Facebook";
                model.text = "Search Facebook";
                model.node = "//node[contains(@class,'android.widget.ImageView')]";
                model.function = 1;
                detechsearch.Add(model);

            lb_loop:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = RunDetechFunction(ldid, detechsearch);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(ldid, kq.point);
                    Delay(1);
                    PressOnLeapdroid_vietnamese(ldid, FunctionHelper.method_Spin(keyword));
                    Delay(1);
                    PressEnter(ldid);
                    Delay(1);
                    scroll_up_random(ldid, token);
                    Delay(2);
                }
                else
                {
                    loop++;
                    if (loop <= 6)
                    {
                        goto lb_loop;
                    }

                }
                activeNewfeed(ldid, app);
                Delay(2);

            }
            catch
            { }
        }
        public void setupLD(Account acc, string ldid)
        {

            quit1(ldid);

            // deleteConfigLD(ldid); mr thoong comment

            string pathfoldervms = string.Format("{0}\\vms\\leidian{1}", SettingTool.configld.pathLD, ldid);
            if (Directory.Exists(pathfoldervms) == false)
            {
                Directory.CreateDirectory(pathfoldervms);
            }
            //xoa config ld cu
            //xoa file data
            string pathdata = string.Format("{0}\\vms\\leidian{1}\\data.vmdk", SettingTool.configld.pathLD, ldid);
            string LDsource = string.Format("{0}\\vms\\leidian0\\data.vmdk", SettingTool.configld.pathLD);
            try
            {
                //check path backup
                string path = string.Format("{0}\\vms\\config\\leidian{1}.config", SettingTool.configld.pathLD, ldid); //string.Format("{0}\\{1}\\{1}.config", SettingTool.configld.pathsavedata, acc.id.Trim());
                if (File.Exists(path))
                {
                    //mr thoong comment, bo di de cai thien toc do doan nay thua
                    //if (File.Exists(pathdata))
                    //{
                    //    File.Delete(pathdata);
                    //}
                    //File.Copy(LDsource, pathdata);

                    //copy file system
                    string pathsystem = string.Format("{0}\\vms\\leidian{1}\\system.vmdk", SettingTool.configld.pathLD, ldid);

                    if (File.Exists(pathsystem) == false)
                    {
                        string pathsystemsource = string.Format("{0}\\system.vmdk", SettingTool.configld.pathLD);
                        File.Copy(pathsystemsource, pathsystem);
                    }
                    unZipNew(acc, ldid);
                    string ram = "1024";
                    string cpu = "1";
                    if (!string.IsNullOrEmpty(SettingTool.configld.cpu))
                        cpu = SettingTool.configld.cpu;

                    if (!string.IsNullOrEmpty(SettingTool.configld.ram))
                        ram = SettingTool.configld.ram;

                    modify_cpuram(ldid, cpu, ram);
                }
                else
                {
                    createLD(ldid);

                    if (File.Exists(pathdata))
                    {
                        File.Delete(pathdata);
                    }
                    File.Copy(LDsource, pathdata);

                    LDModel model = new LDModel();
                    model.id = Convert.ToInt32(ldid);
                    string phone = "0979" + FunctionHelper.RandomPhone(6);
                    //    ldcontroller.modify(m.id.ToString(), phone);


                    if (string.IsNullOrEmpty(SettingTool.configld.cpu))
                        model.cpu = "1";
                    else
                        model.cpu = SettingTool.configld.cpu;

                    if (string.IsNullOrEmpty(SettingTool.configld.ram))
                        model.ram = "1024";
                    else
                        model.ram = SettingTool.configld.ram;

                    model.phonenumber = phone;
                    ImeiModel im = FunctionHelper.createImei();
                    model.manufacturer = im.brand;
                    model.model = im.model;
                    model.imei = im.value;
                    modify(ldid, model);
                }
            }
            catch
            {

            }

        }
        public void unZipNew(Account acc, string ldid)
        {

            deleteConfigLD(ldid);

            //copy file setting
            string sourcefile = string.Format("{0}\\{1}\\{1}.config", SettingTool.configld.pathsavedata, acc.id.Trim());

            if (File.Exists(sourcefile))
            {
                string renameFile = string.Format("{0}\\vms\\config\\leidian{1}.config", SettingTool.configld.pathLD, ldid);
                File.Copy(sourcefile, renameFile, true);

                //string config = File.ReadAllText(sourcefile);
                //string imei = FunctionHelper.smethod_6(config, config.IndexOf("phoneIMEI") + 13, "\"");
                //string brand = FunctionHelper.smethod_6(config, config.IndexOf("phoneModel") + 14, "\"");
                //if (imei.Length > 15)
                //{
                //    LDModel model = new LDModel();
                //    model.id = Convert.ToInt32(ldid);
                //    string phone = "0979" + FunctionHelper.RandomPhone(6);
                //    model.cpu = "1";
                //    model.ram = "1024";
                //    model.phonenumber = phone;
                //    ImeiModel im = FunctionHelper.createImei(brand);
                //    model.manufacturer = im.brand;
                //    model.model = im.model;
                //    model.imei = im.value;
                //    updateImei(ldid, model);
                //}
            }

        }
        public void updateImei(string ldID, LDModel m)
        {
            try
            {
                string cmd = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmd = String.Format("modify --index {0}  --imei {1}", ldID, m.imei);
                }
                else
                {
                    cmd = String.Format("modify --index {0}  --imei {1}", ldID, m.imei);
                }

                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);

            }
            catch { }

        }
        public void Zip(Account acc, string ldid)
        {
            try
            {
                string pathfolder = string.Format("{0}\\{1}", SettingTool.configld.pathsavedata, acc.id.Trim());
                if (Directory.Exists(pathfolder) == false)
                {
                    Directory.CreateDirectory(pathfolder);
                }

                // string sourcefile = string.Format("{0}\\vms\\leidian{1}\\data.vmdk", SettingTool.configld.pathLD, ldid);
                string renameFile = string.Format("{0}\\vms\\leidian{1}\\{2}", SettingTool.configld.pathLD, ldid, acc.id.Trim());

                //copy file setting
                string sourcefile = string.Format("{0}\\vms\\config\\leidian{1}.config", SettingTool.configld.pathLD, ldid);
                if (File.Exists(sourcefile))
                {
                    renameFile = string.Format("{0}\\{1}\\{1}.config", SettingTool.configld.pathsavedata, acc.id.Trim());
                    if (File.Exists(renameFile) == false)
                        File.Copy(sourcefile, renameFile, true);

                    backupdatafb_v2(ldid, acc.id.Trim());
                    backupdatafb(ldid, acc.id.Trim());

                    NguoiDung_Bll nguoidung_bll = new NguoiDung_Bll();
                    nguoidung_bll.updateTimeBackup(acc);
                }
            }
            catch
            { }


        }
        public void backupdatafb(string ldID, string uid)
        {
            string cmd = "";
            killApp(ldID, "com.facebook.katana");
            if (SettingTool.configld.versionld == "3.x")
            {
                cmd = String.Format(" shell mkdir storage/emulated/legacy/pictures/datafb");
                runAdb(ldID, cmd);

                cmd = String.Format("shell su -c 'mv /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/authentication storage/emulated/legacy/pictures/datafb/1'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/account_manager storage/emulated/legacy/pictures/datafb/2'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/analytics_flexible_sampling_policy storage/emulated/legacy/pictures/datafb/3'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/analytics_periodic_events storage/emulated/legacy/pictures/datafb/4'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/dbl_local_auth_{0} storage/emulated/legacy/pictures/datafb/5'", uid);
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/default_phone_id storage/emulated/legacy/pictures/datafb/6'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/funnel_reliability_stats storage/emulated/legacy/pictures/datafb/7'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/logged_in_{0} storage/emulated/legacy/pictures/datafb/8'", uid);
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/overtheair_prefs storage/emulated/legacy/pictures/datafb/9'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/pw_enc_key storage/emulated/legacy/pictures/datafb/10'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/user_storage_device_key storage/emulated/legacy/pictures/datafb/11'");
                runAdb(ldID, cmd);

            }
            else
            {
                cmd = String.Format(" shell mkdir storage/emulated/0/pictures/datafb");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/authentication storage/emulated/0/pictures/datafb/authentication'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/account_manager storage/emulated/0/pictures/datafb/account_manager'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/analytics_flexible_sampling_policy storage/emulated/0/pictures/datafb/analytics_flexible_sampling_policy'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/analytics_periodic_events storage/emulated/0/pictures/datafb/analytics_periodic_events'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/dbl_local_auth_{0} storage/emulated/0/pictures/datafb/dbl_local_auth_{0}'", uid);
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/default_phone_id storage/emulated/0/pictures/datafb/default_phone_id'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/funnel_reliability_stats storage/emulated/0/pictures/datafb/funnel_reliability_stats'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/logged_in_{0} storage/emulated/0/pictures/datafb/logged_in_{0}'", uid);
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/overtheair_prefs storage/emulated/0/pictures/datafb/overtheair_prefs'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/pw_enc_key storage/emulated/0/pictures/datafb/pw_enc_key'");
                runAdb(ldID, cmd);
                cmd = String.Format("shell su -c 'mv  /data/data/com.facebook.katana/app_light_prefs/com.facebook.katana/user_storage_device_key storage/emulated/0/pictures/datafb/user_storage_device_key'");
                runAdb(ldID, cmd);
            }
            deleteFolderFacebook(ldID, "com.facebook.katana");
            createFolder(ldID, "com.facebook.katana");

            string sourcefile = string.Format("C:\\test\\{0}\\pictures\\datafb", ldID);
            string zipFile = string.Format("{0}\\{1}\\{1}.7z", SettingTool.configld.pathsavedata, uid);
            cmd = string.Format("7za a -pNinjaSystemPRO8686 -t7z \"{0}\" \"{1}\"", zipFile, sourcefile);
            lock (syncObjUID)
            {
                if (File.Exists(zipFile))
                    File.Delete(zipFile);
                ExecuteCMD(SettingTool.pathfolderld, cmd);
            }
            System.IO.Directory.Delete(sourcefile, true);

        }

        public void backupdatafb_v2(string ldID, string uid)
        {
            string cmd = "";
            killApp(ldID, "com.facebook.katana");

            deleteFolder2(ldID, "/data/data/com.facebook.katana/app_webview");
            deleteFolder2(ldID, "/data/data/com.facebook.katana/app_analytics");
            deleteFolder2(ldID, "/data/data/com.facebook.katana/app_downloadservice_cache");
            deleteFolder2(ldID, "/data/data/com.facebook.katana/app_file_poolreports");
            deleteFolder2(ldID, "/data/data/com.facebook.katana/app_feedback_reactions");
            deleteFolder2(ldID, "/data/data/com.facebook.katana/app_errorreporting");
            deleteFolder2(ldID, "/data/data/com.facebook.katana/databases");
            deleteFolder2(ldID, "/data/data/com.facebook.katana/app_acra-reports");
            deleteFolder2(ldID, "/data/data/com.facebook.katana/app_msqrd_segmentation_asset_disk_cache_sessionless");
            deleteFolder2(ldID, "/data/data/com.facebook.katana/app_msqrd_model_asset_disk_cache_sessionless");
            deleteFolder2(ldID, "/data/data/com.facebook.katana/app_msqrd_effect_asset_disk_cache_fixed_sessionless");

            cmd = String.Format(" shell tar -cvzf /storage/emulated/legacy/pictures/datafb2.tar.gz /data/data/com.facebook.katana --exclude=dex --exclude=lib-xzs --exclude=app_compactdisk --exclude=app_js-bundles --exclude=app_restricks --exclude=files --exclude=app_overtheair --exclude=cache --exclude=app_models_data --exclude=app_graphservice --exclude=modules --exclude=app_ras_blobs");
            runAdb(ldID, cmd);

            string sourcefile = string.Format("C:\\test\\{0}\\pictures\\datafb2.tar.gz", ldID);
            string zipFile = string.Format("{0}\\{1}\\datafb2.tar.gz", SettingTool.configld.pathsavedata, uid);

            if (File.Exists(zipFile))
                File.Delete(zipFile);

            File.Copy(sourcefile, zipFile);

        }
        public string ExecuteCMD(string path, string cmdCommand)
        {
            string result;
            try
            {
                Process process = new Process();
                process.StartInfo = new ProcessStartInfo
                {
                    WorkingDirectory = path,
                    FileName = "cmd.exe",
                    CreateNoWindow = true,
                    UseShellExecute = false,
                    WindowStyle = ProcessWindowStyle.Hidden,
                    RedirectStandardInput = true,
                    RedirectStandardOutput = true,

                };
                process.Start();
                process.StandardInput.WriteLine(cmdCommand);
                //lock (synDevice)
                {
                    process.StandardInput.Flush();
                }
                process.StandardInput.Close();
                process.WaitForExit();
                string text = process.StandardOutput.ReadToEnd();
                result = text;

            }
            catch
            {
                result = null;
            }
            return result;
        }
        //public string joinGroupbysuggest(userLD u,string ldid, string app, int minlike,int maxlike, string keyword, int delay, bool autoAnswer, string answer, CancellationToken token)
        //{
        //    int dem = 0;
        //    int max = 0;
        //    Random rd = new Random();
        //    int luot = rd.Next(minlike, maxlike);
        //    u.setStatusSum(luot);
        //    try
        //    {
        //        OpenLink(ldid, app, "fb://groups/gridtab");
        //        Delay(3);
        //        List<DetechModel> detechsearch = new List<DetechModel>();
        //        DetechModel model = new DetechModel();
        //        model.parent = "khampha";
        //        model.content = "Khám phá";
        //        model.text = "Khám phá";
        //        model.node = "//node[contains(@class,'android.view.View')]";
        //        model.function = 1;
        //        detechsearch.Add(model);

        //        List<Bitmap> ls_image = new List<Bitmap>();
        //        List<string> ls_name = new List<string>();

        //        ls_image.Add(Properties.Resources.thamgia);


        //        ls_name.Add("1_joingroup");

        //        if (string.IsNullOrEmpty(answer))
        //        {
        //            autoAnswer = true;
        //        }

        //    lb_start:
        //        if (token.IsCancellationRequested)
        //            token.ThrowIfCancellationRequested();

        //        DetechModel kq = detechFunctionCatchImage(ldid, ls_image, ls_name);

        //        if (!kq.status)
        //            kq = detechFunction(ldid, detechsearch);

        //        if (kq.status)
        //        {
        //            max = 0;
        //            switch (kq.function)
        //            {
        //                case 1:
        //                    {
        //                        ClickOnLeapdroidPosition(ldid, kq.point);
        //                        if (kq.parent == "khampha")
        //                        {
        //                            scroll_up(ldid);
        //                            Delay(2);
        //                        }

        //                        if (kq.parent == "joingroup")
        //                        {
        //                            if (joinGroupLD(ldid, autoAnswer, answer, token, true))
        //                            {
        //                                dem++;
        //                                u.setStatusResult(dem);
        //                                scroll_up_mid(ldid);
        //                                if (dem >= luot)
        //                                    return "| Join Group suggest complete:" + dem.ToString() + "/" + luot.ToString();
        //                            }
        //                            else
        //                            {
        //                                max++;
        //                                if (max >= 9)
        //                                {
        //                                    activeNewfeed(ldid, app);
        //                                    return "| Join Group suggest complete:" + dem.ToString() + "/" + luot.ToString();
        //                                }
        //                                goto lb_start;
        //                            }
        //                            goto lb_start;
        //                        }

        //                        break;
        //                    }
        //                default:
        //                    break;
        //            }
        //            goto lb_start;



        //        }
        //        else
        //        {
        //            scroll_up(ldid);
        //            if (max == 3)
        //                OpenLink(ldid, app, "fb://groups/gridtab");
        //            max++;
        //            if (max > 9)
        //            {
        //                activeNewfeed(ldid, app);
        //                return "| Join Group complete:" + dem.ToString() + "/" + luot.ToString();
        //            }
        //            goto lb_start;
        //        }

        //    }
        //    catch
        //    { }
        //    return "| Join Group complete:" + dem.ToString() + "/" + luot.ToString();
        //}
        public void quit(Account acc, string ldID)
        {
            try
            {
                string cmd = String.Format("quit --index {0}", ldID);
                string html = ExecuteAsAdmin(SettingTool.pathLD, cmd);
                changeIpHelper.finishLD(ldID);
            }
            catch { }

        }
        public string scrollCommentGroup(userLD u, Account acc, string Intpt, string app, int numLike, string content, CancellationToken token)
        {

            int dem = 0;
            int max = 0;
            int step = 0;
            try
            {
                List<string> list_text = new List<string>();
                list_text.Add("Vừa xong");
                list_text.Add("Nhãn dán");

                OpenLink(Intpt, app, "fb://groups/gridtab"); //fb://groups/gridtab

                Delay(3);
                if (intoyourgroup(Intpt, token))
                {
                    while (dem < numLike)
                    {
                        if (token.IsCancellationRequested)
                        {
                            token.ThrowIfCancellationRequested();
                        }
                        scroll_up_random(Intpt, token);

                        string message = content.Replace("$me", acc.name);
                        if (commentPost(u, acc, Intpt, FunctionHelper.method_Spin(message), token))
                        {
                            max = 0;
                            dem++;
                            Delay(1);
                            back(Intpt, 1);

                            // truong hop commnet live stream chi back 1 lan
                            string check = checkListContent(Intpt, list_text);
                            if (check != null)
                            {
                                back(Intpt, 1);
                            }
                        }
                        else
                        {
                            max++;
                            //  backNewfeedGroup(Intpt);
                            if (max >= 5)
                            {
                                activeNewfeed(Intpt, app);
                                return "| Comment group complete:" + dem.ToString() + "/" + numLike.ToString();
                            }
                        }
                    }
                }
                activeNewfeed(Intpt, app);
            }
            catch
            { }
            return "| Comment group complete:" + dem.ToString() + "/" + numLike.ToString();


        }

        public string scrollLikePostPage(userLD u, Account acc, string handle, string app, int minlike, int maxlike, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            int max = 0;
            try
            {
                OpenLink(handle, app, "fb://pages/");
                Delay(1);
                List<DetechModel> detechFeed = new List<DetechModel>();
                List<DetechModel> detechexit = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "clickfeed";
                model.content = "Feed";
                model.text = "Feed";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechFeed.Add(model);

                model = new DetechModel();
                model.parent = "clickfeed";
                model.content = "Bảng tin";
                model.text = "Bảng tin";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechFeed.Add(model);

                model = new DetechModel();
                model.parent = "exit";
                model.content = "Không thể kết nối";
                model.text = "Không thể kết nối";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechexit.Add(model);

                model = new DetechModel();
                model.parent = "exit";
                model.content = "can't connect";
                model.text = "can't connect";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechexit.Add(model);

            lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = RunDetechFunction(handle, detechFeed);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(handle, kq.point);
                    Delay(1);
                    //kiem tra neu bi can connect thi return
                    kq = RunDetechFunction(handle, detechexit, 3);
                    if (kq.parent == "exit")
                    {
                        activeNewfeed(handle, app);
                        if (SettingTool.configld.language == "English")
                            return "| Not avaiable newfeed fanpage";
                        else
                            return "| Không có newfeed của page";
                    }
                    int dem = 0;
                    while (dem < luot)
                    {
                        if (token.IsCancellationRequested)
                        {
                            token.ThrowIfCancellationRequested();
                        }
                        scroll_up_random(handle, token);

                        if (likePost(acc, handle, token))
                        {
                            max = 0;
                            dem++;
                            Delay(1);
                        }
                        else
                        {
                            max++;
                            if (max >= 5)
                            {
                                activeNewfeed(handle, app);
                                return "| Like post fanpage complete:" + dem.ToString() + "/" + luot;
                            }
                            else
                            {
                                if (check_Facebook_has_stopped(u, handle, acc, token) == false)
                                {
                                    return "| Like post fanpage complete:" + dem.ToString() + "/" + luot;
                                }
                            }
                        }
                    }
                    return "| Like post fanpage complete:" + dem.ToString() + "/" + luot;
                }
                else
                {
                    max++;
                    if (max <= 5)
                        goto lb_start;
                }

                activeNewfeed(handle, app);
            }
            catch
            { }
            return "| Like post fanpage complete:" + "0/" + luot;
        }
        public string scrollCommentPostPage(userLD u, Account acc, string handle, string app, int minlike, int maxlike, string content, CancellationToken token)
        {
            Random rd = new Random();
            int luot = rd.Next(minlike, maxlike);
            int max = 0;
            try
            {
                string message = content.Replace("$me", acc.name);
                OpenLink(handle, app, "fb://pages/launchpoint/");
                Delay(2);
                List<DetechModel> detechFeed = new List<DetechModel>();
                List<DetechModel> detechexit = new List<DetechModel>();
                DetechModel model = new DetechModel();
                model.parent = "exit";
                model.content = "Không thể kết nối";
                model.text = "Không thể kết nối";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechexit.Add(model);

                model = new DetechModel();
                model.parent = "exit";
                model.content = "can't connect";
                model.text = "can't connect";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechexit.Add(model);

                model = new DetechModel();
                model.parent = "clickfeed";
                model.content = "Feed";
                model.text = "Feed";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechFeed.Add(model);

                model = new DetechModel();
                model.parent = "clickfeed";
                model.content = "Bảng tin";
                model.text = "Bảng tin";
                model.node = "//node[contains(@class,'android.widget.TextView')]";
                model.function = 1;
                detechFeed.Add(model);

            lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = RunDetechFunction(handle, detechFeed);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(handle, kq.point);
                    Delay(5);
                    int dem = 0;
                    kq = RunDetechFunction(handle, detechexit);
                    if (kq.parent == "exit")
                    {
                        activeNewfeed(handle, app);
                        return "| Không có newfeed của page";
                    }
                    while (dem < luot)
                    {
                        if (token.IsCancellationRequested)
                        {
                            token.ThrowIfCancellationRequested();
                        }
                        scroll_up_random(handle, token);
                        if (commentPost(u, acc, handle, message, token))
                        {
                            max = 0;
                            dem++;
                            Delay(1);
                            back(handle, 2);
                        }
                        else
                        {
                            max++;
                            if (max >= 5)
                            {
                                activeNewfeed(handle, app);
                                return "| Comment fanpage complete:" + dem.ToString() + "/" + luot.ToString();
                            }
                            else
                            {
                                if (check_Facebook_has_stopped(u, handle, acc, token) == false)
                                {
                                    return "| Comment fanpage complete:" + dem.ToString() + "/" + luot.ToString();
                                }

                            }
                        }
                    }
                    return "| Comment fanpage complete:" + dem.ToString() + "/" + luot.ToString();
                }
                else
                {
                    max++;
                    if (max <= 5)
                    {
                        goto lb_start;
                    }
                    else
                    {
                        activeNewfeed(handle, app);
                        return "| Comment fanpage complete:" + "0 /" + luot;
                    }
                }
            }
            catch
            {

            }
            return "";
        }

        public string PostContentLink(string ldID, string app, string content, string link, bool tagfriend, int numfriend, CancellationToken token)
        {
            try
            {
                //activeNewfeed(ldID, app);
                List<DetechModel> list_post = new List<DetechModel>();
                DetechModel data = new DetechModel();

                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
                DetechImageModel detechimg = new DetechImageModel();
                detechimg.name = "poststatus";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_group_poststatus;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "postthaoluan";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_group_thaoluan;
                list_detechimg.Add(detechimg);

                detechimg = new DetechImageModel();
                detechimg.name = "postthaoluan";
                detechimg.function = 1;
                detechimg.img = PointDefault.img_post_profile_ban_dang_nghi_gi;
                list_detechimg.Add(detechimg);

                data = new DetechModel();
                data.parent = "banbe";
                data.content = "Chọn quyền riêng tư Bạn bè";
                data.text = "Chọn quyền riêng tư Bạn bè";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                SettingTool.lang.list_postcontent.Insert(0, data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Bạn muốn chuyển lại đối tượng";
                data.text = "Không, cảm ơn";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                SettingTool.lang.list_postcontent.Add(data);

                data.parent = "tag";
                data.content = "Gắn thẻ";
                data.text = "Gắn thẻ";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                if (tagfriend)
                    SettingTool.lang.list_postcontent.Insert(0, data);

                string historytag = File.ReadAllText(string.Format("c:\\test\\{0}\\tagfriend.txt", ldID)).ToLower();
                int step = 0;
                StringBuilder donetag = new StringBuilder();
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();
                DetechModel kq = detechFunction(ldID, SettingTool.lang.list_postcontent);
                if (!kq.status)
                {
                    DetechModel kq_image = detechFunctionCatchImages(ldID, list_detechimg);
                    if (kq_image.status)
                        kq = kq_image;
                }

                if (kq.status)
                {
                    step = 0;
                    switch (kq.function)
                    {
                        case 1:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(1);

                                if (kq.parent == "postcontent" || kq.parent == "postthaoluan")
                                {
                                    scroll_up_mid(ldID);
                                    scroll_up_mid(ldID);
                                }
                                if (kq.parent == "banbe")
                                {
                                    Delay(1);
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Công khai";
                                    data.text = "Công khai";
                                    data.node = "//node[contains(@class,'android.widget.TextView')]";
                                    data.function = 1;
                                    List<DetechModel> lsmodecongkhai = new List<DetechModel>();
                                    lsmodecongkhai.Add(data);
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Bạn của bạn bè";
                                    data.text = "Bạn của bạn bè";
                                    data.node = "//node[contains(@class,'android.widget.TextView')]";
                                    data.function = 1;
                                    lsmodecongkhai.Add(data);
                                    DetechModel modecongkhai = detechFunction(ldID, lsmodecongkhai);
                                    if (modecongkhai.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, modecongkhai.point);
                                    }
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Xong";
                                    data.text = "Xong";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 1;

                                    lsmodecongkhai = new List<DetechModel>();
                                    lsmodecongkhai.Add(data);

                                    modecongkhai = RunDetechFunction(ldID, lsmodecongkhai);
                                    if (modecongkhai.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, modecongkhai.point);
                                    }
                                    else
                                    {
                                        DetechImageModel image = new DetechImageModel();
                                        image.img = Properties.Resources.xong_post;
                                        kq = detechFunctionCatchImage(ldID, image);
                                        if (kq.status)
                                            ClickOnLeapdroidPosition(ldID, kq.point);
                                        else
                                            back(ldID, 1);
                                    }

                                }
                                if (kq.parent == "tag")
                                {
                                    int count = 0;
                                    int maxfriend = 0;
                                    while (count < numfriend)
                                    {
                                        List<DetechModel> ls = new List<DetechModel>();
                                        data = new DetechModel();
                                        data.text = "";
                                        data.content = "";
                                        data.node = "//node[contains(@class,'android.widget.TextView')]";
                                        ls.Add(data);
                                    lb_click:
                                        List<DetechModel> lskq = detechFunctionListPoint(ldID, ls);
                                        if (lskq.Count > 0)
                                        {
                                            foreach (DetechModel friend in lskq)
                                            {
                                                if (!historytag.Contains(friend.data))
                                                {
                                                    ClickOnLeapdroidPosition(ldID, friend.point);
                                                    donetag.AppendLine(friend.data.ToString());
                                                    count++;
                                                    historytag += friend.data;
                                                    if (count >= 50 || count >= numfriend)
                                                        break;
                                                    goto lb_click;
                                                }
                                            }
                                            maxfriend++;
                                            if (maxfriend > 50)
                                            {

                                                break;
                                            }

                                        }
                                        else
                                        {
                                            maxfriend++;
                                            if (maxfriend > 5)
                                                break;

                                        }
                                        scroll_up_mid(ldID);
                                    }
                                    File.AppendAllText(string.Format("c:\\test\\{0}\\tagfriend.txt", ldID), donetag.ToString() + "\\r\\\n");
                                    Delay(1);
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "xong";
                                    data.text = "xong";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 1;
                                    SettingTool.lang.list_buttonpost.Add(data);

                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "xong";
                                    data.text = "xong";
                                    data.node = "//node[contains(@class,'android.widget.TextView')]";
                                    data.function = 1;
                                    SettingTool.lang.list_buttonpost.Add(data);

                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "TIẾP";
                                    data.text = "TIẾP";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 1;
                                    SettingTool.lang.list_buttonpost.Add(data);

                                    DetechModel kqsend = detechFunction(ldID, SettingTool.lang.list_buttonpost);
                                    if (kqsend.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kqsend.point);
                                        Delay(1);
                                        SettingTool.lang.list_postcontent.RemoveAt(0);

                                        data = new DetechModel();
                                        data.parent = "";
                                        data.content = "Thêm vị trí";
                                        data.text = "Gợi ý";
                                        data.node = "//node[contains(@class,'android.view.View')]";
                                        data.function = 1;

                                        kq = onedetechFunction(ldID, data);
                                        if (kq.status)
                                        {
                                            ClickOnLeapdroidPosition(ldID, kq.point2.X - 100, kq.point2.Y + 10);
                                        }

                                        back(ldID, 1);
                                    }
                                }

                                break;
                            }
                        case 3:
                            {
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                Delay(2);
                                PressOnLeapdroid(ldID, link);
                                Delay(1);
                                PressEnter(ldID);
                                Delay(2);
                                for (int n = 0; n < link.Length + 3; n++)
                                {
                                    runAdb(ldID, "shell input keyevent 67");
                                }
                                string[] content_split = SplitByLength(content, 150);
                                if (content_split.Count() > 0)
                                {
                                    for (int i = 0; i < content_split.Count(); i++)
                                    {
                                        PressOnLeapdroid_vietnamese(ldID, content_split[i]);
                                        Delay(1);
                                    }
                                }
                                DetechModel kqsend = detechFunction(ldID, SettingTool.lang.list_buttonpost);
                                kqsend = detechFunction(ldID, SettingTool.lang.list_buttonpost);
                                if (kqsend.status)
                                {
                                    ClickOnLeapdroidPosition(ldID, kqsend.point);

                                    List<string> ls_desc = new List<string>();
                                    ls_desc.Add("ProgressBar");
                                    if (checkListContent(ldID, ls_desc) != null)
                                    {
                                        Delay(10);
                                    }
                                    if (SettingTool.configld.language == "English")
                                        return "Post successful!";
                                    else
                                        return "Đăng bài thành công";
                                }
                                break;

                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {

                    step++;
                    if (step <= 5)
                    {
                        goto Lb_start;

                    }
                }
            }
            catch
            { }
            if (SettingTool.configld.language == "English")
                return "Post not successful!";
            else
                return "Đăng bài không hoàn thành";
        }
        public int followFriendUID(Account acc, string uid, CancellationToken ct)
        {
            try
            {
                OpenLink(acc.ldid, "com.facebook.katana", "fb://profile/" + uid);
                Delay(2);
                List<DetechModel> lsfolow = new List<DetechModel>();

                DetechModel data = new DetechModel();
                data.parent = "";
                data.content = "theo dõi";
                data.text = "theo dõi";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 2;
                lsfolow.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "theo dõi";
                data.text = "theo dõi";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 2;
                lsfolow.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Khác";
                data.text = "Khác";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                lsfolow.Add(data);

                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                ls_image.Add(Properties.Resources.followblue);
                ls_name.Add("2_followblue");

                ls_image.Add(Properties.Resources._3x_followfriend);
                ls_name.Add("2_follow");

                int i = 0;
                if (checkContent(acc.ldid, "Trang này chưa thể hiển thị ngay"))
                    return 0;
            Lb_start:
                if (ct.IsCancellationRequested)
                {
                    ct.ThrowIfCancellationRequested();
                }
                DetechModel kq = detechFunctionCatchImage(acc.ldid, ls_image, ls_name);

                if (!kq.status)
                    kq = detechFunction(acc.ldid, lsfolow);
                if (kq.status)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case -10:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                loginFacebookLD(acc, ct);
                                //phien het han
                                break;
                            }
                        case -1:
                            {
                                back(acc.ldid, 1);
                                return -1;
                            }
                        case 1:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                //back(acc.ldid, 1);
                                break;
                            }
                        case 2:
                            {
                                ClickOnLeapdroidPosition(acc.ldid, kq.point);
                                //back(acc.ldid, 1);
                                Delay(1);
                                return 1;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    i++;
                    scroll_up_short(acc.ldid);
                    if (i < 2)
                    {
                        Thread.Sleep(1500);
                        goto Lb_start;
                    }
                }

            }
            catch { }
            return 0;
        }
        public string searchFollowPage(string device, Account acc, int numLike, List<string> ls_idPage, CancellationToken token)
        {
            int dem = 0;
            try
            {
                StringBuilder list_history = new StringBuilder();
                string path = "";
                string uid = "";
                if (string.IsNullOrEmpty(acc.email))
                    path = String.Format("{0}\\logs\\{1}_followPage.txt", Application.StartupPath, acc.id.Trim());
                else
                    path = String.Format("{0}\\logs\\{1}_followPage.txt", Application.StartupPath, acc.email.Trim());

                string historyadd = "";

                if (File.Exists(path))
                    historyadd = File.ReadAllText(path);

            Lb_Start:
                if (ls_idPage.Count <= 0)
                {
                    File.AppendAllText(path, list_history.ToString());
                    if (SettingTool.configld.language == "English")

                        return "| Not avaiable ID Page, follow page complete: " + dem.ToString() + "/" + numLike.ToString();
                    else
                        return "| Hết ID trang, thích trang hoàn thành: " + dem.ToString() + "/" + numLike.ToString();
                }
                lock (syncObjUID)
                {
                    uid = ls_idPage[0];
                    ls_idPage.Remove(uid);
                }

                if (historyadd.Contains(uid))
                {
                    goto Lb_Start;
                }
                while (dem < numLike)
                {
                    if (token.IsCancellationRequested)
                        token.ThrowIfCancellationRequested();

                    if (followPage(device, uid))
                    {
                        dem++;
                        Delay(1);
                        list_history.AppendLine(uid);
                        if (dem > numLike)
                        {
                            File.AppendAllText(path, list_history.ToString());
                            if (SettingTool.configld.language == "English")
                                return " |follow page complete: " + dem.ToString() + "/" + numLike.ToString();
                            else
                                return " |Thích trang hoàn thành: " + dem.ToString() + "/" + numLike.ToString();
                        }

                        else
                            goto Lb_Start;
                    }
                    else
                    {
                        //list_history.AppendLine(uid);
                        goto Lb_Start;
                    }
                }
                activeNewfeed(device, acc.app);
                File.AppendAllText(path, list_history.ToString());
            }
            catch
            { }
            if (SettingTool.configld.language == "English")
                return "| Like page complete: " + dem.ToString() + "/" + numLike.ToString();
            return "| Thích trang hoàn thành: " + dem.ToString() + "/" + numLike.ToString(); ;
        }
        public bool followPage(string device, string idPage)
        {
            try
            {
                string result = OpenLink(device, "com.facebook.katana", "fb://page/" + idPage);
                if (result.Contains("Error"))
                    return false;
                Delay(2);
                int max = 0;
                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();



                ls_image.Add(Properties.Resources._1_followed);
                ls_name.Add("1_followed");

                ls_image.Add(Properties.Resources.followpage3x1);
                ls_name.Add("1_followpage");

                ls_image.Add(Properties.Resources._3x_follow_page_299);
                ls_name.Add("1_followed");

                ls_image.Add(Properties.Resources._1_followpage);
                ls_name.Add("1_followpage");

                ls_image.Add(Properties.Resources._1_morePage);
                ls_name.Add("1_menupage");
                ls_image.Add(Properties.Resources._1_morepage_3x);
                ls_name.Add("1_menupage");

                List<DetechModel> ls_detecth = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "followed";
                data.content = "Đang theo dõi";
                data.text = "Đang theo dõi";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "follow";
                data.content = "Theo dõi";
                data.text = "Theo dõi";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "follow";
                data.content = "Follow";
                data.text = "Follow";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                ls_detecth.Add(data);

            Lb_start:
                DetechModel kq = detechFunctionCatchImage(device, ls_image, ls_name);

                if (kq.status)
                {

                    if (kq.parent == "followpage" || kq.parent == "likepage")
                    {
                        ClickOnLeapdroidPosition(device, kq.point.X + 5, kq.point.Y + 3);
                        return true;
                    }

                    else if (kq.parent == "followed")
                        return false;
                    else
                    {
                        ClickOnLeapdroidPosition(device, kq.point.X, kq.point.Y);
                        Delay(1);
                        kq = RunDetechFunction(device, ls_detecth, 2);
                        if (kq.status)
                        {
                            if (kq.parent == "follow")
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                return true;
                            }
                            else
                            {
                                back(device, 1);
                                return false;
                            }
                        }

                        else
                        {
                            kq = detechFunctionCatchImage(device, ls_image, ls_name);
                            if (kq.status)
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                return true;
                            }
                            return false;
                        }

                    }
                }
                else
                {
                    max++;
                    Delay(1);
                    if (max <= 3)
                        goto Lb_start;
                }
            }
            catch
            { }
            return false;
        }

        public bool followPagemakemoney(string device, string idPage)
        {
            try
            {
                string result = OpenLink(device, "com.facebook.katana", "fb://page/" + idPage);
                if (result.Contains("Error"))
                    return false;
                Delay(2);
                int max = 0;
                List<Bitmap> ls_image = new List<Bitmap>();
                List<string> ls_name = new List<string>();

                //ls_image.Add(Properties.Resources._1_followed);
                //ls_name.Add("1_followed");

                //ls_image.Add(Properties.Resources.followpage3x1);
                //ls_name.Add("1_followpage");

                ls_image.Add(Properties.Resources._3x_follow_page_299);
                ls_name.Add("1_followpage");

                ls_image.Add(Properties.Resources.followEn);
                ls_name.Add("1_followpage");

                //ls_image.Add(Properties.Resources._1_followpage);
                //ls_name.Add("1_followpage");

                //ls_image.Add(Properties.Resources._1_morePage);
                //ls_name.Add("1_menupage");
                ls_image.Add(Properties.Resources._1_morepage_3x);
                ls_name.Add("1_menupage");

                List<DetechModel> ls_detecth = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "followpage";
                data.content = "Theo dõi";
                data.text = "Theo dõi";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "follow";
                data.content = "Follow";
                data.text = "Follow";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "followed";
                data.content = "Đang theo dõi";
                data.text = "Đang theo dõi";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 1;
                ls_detecth.Add(data);

            Lb_start:
                DetechModel kq = detechFunctionCatchImage(device, ls_image, ls_name);

                if (!kq.status)
                    kq = detechFunctionExact(device, ls_detecth);
                if (kq.status)
                {

                    if (kq.parent == "followpage" || kq.parent == "likepage")
                    {
                        ClickOnLeapdroidPosition(device, kq.point.X + 5, kq.point.Y + 3);
                        Delay(2);
                        return true;
                    }

                    else if (kq.parent == "followed")
                        return false;
                    else
                    {
                        ClickOnLeapdroidPosition(device, kq.point.X, kq.point.Y);
                        Delay(1);
                        kq = RunDetechFunction(device, ls_detecth, 2);
                        if (kq.status)
                        {
                            if (kq.parent == "follow")
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                Delay(2);
                                return true;
                            }
                            else
                            {
                                back(device, 1);
                                return false;
                            }
                        }

                        else
                        {
                            kq = detechFunctionCatchImage(device, ls_image, ls_name);
                            if (kq.status)
                            {
                                ClickOnLeapdroidPosition(device, kq.point);
                                return true;
                            }
                            return false;
                        }

                    }
                }
                else
                {
                    max++;
                    Delay(1);
                    if (max <= 3)
                        goto Lb_start;
                }
            }
            catch
            { }
            return false;
        }



        private Rectangle searchBitmap(Bitmap bigBmp, Bitmap smallBmp, double tolerance)
        {
            BitmapData smallData =
              smallBmp.LockBits(new Rectangle(0, 0, smallBmp.Width, smallBmp.Height),
                       System.Drawing.Imaging.ImageLockMode.ReadOnly,
                       System.Drawing.Imaging.PixelFormat.Format24bppRgb);
            BitmapData bigData =
              bigBmp.LockBits(new Rectangle(0, 0, bigBmp.Width, bigBmp.Height),
                       System.Drawing.Imaging.ImageLockMode.ReadOnly,
                       System.Drawing.Imaging.PixelFormat.Format24bppRgb);

            int smallStride = smallData.Stride;
            int bigStride = bigData.Stride;

            int bigWidth = bigBmp.Width;
            int bigHeight = bigBmp.Height - smallBmp.Height + 1;
            int smallWidth = smallBmp.Width * 3;
            int smallHeight = smallBmp.Height;

            Rectangle location = Rectangle.Empty;
            int margin = Convert.ToInt32(255.0 * tolerance);

            unsafe
            {
                byte* pSmall = (byte*)(void*)smallData.Scan0;
                byte* pBig = (byte*)(void*)bigData.Scan0;

                int smallOffset = smallStride - smallBmp.Width * 3;
                int bigOffset = bigStride - bigBmp.Width * 3;

                bool matchFound = true;

                for (int y = 0; y < bigHeight; y++)
                {
                    for (int x = 0; x < bigWidth; x++)
                    {
                        byte* pBigBackup = pBig;
                        byte* pSmallBackup = pSmall;

                        //Look for the small picture.
                        for (int i = 0; i < smallHeight; i++)
                        {
                            int j = 0;
                            matchFound = true;
                            for (j = 0; j < smallWidth; j++)
                            {
                                //With tolerance: pSmall value should be between margins.
                                int inf = pBig[0] - margin;
                                int sup = pBig[0] + margin;
                                if (sup < pSmall[0] || inf > pSmall[0])
                                {
                                    matchFound = false;
                                    break;
                                }

                                pBig++;
                                pSmall++;
                            }

                            if (!matchFound) break;

                            //We restore the pointers.
                            pSmall = pSmallBackup;
                            pBig = pBigBackup;

                            //Next rows of the small and big pictures.
                            pSmall += smallStride * (1 + i);
                            pBig += bigStride * (1 + i);
                        }

                        //If match found, we return.
                        if (matchFound)
                        {
                            location.X = x;
                            location.Y = y;
                            location.Width = smallBmp.Width;
                            location.Height = smallBmp.Height;
                            break;
                        }
                        //If no match found, we restore the pointers and continue.
                        else
                        {
                            pBig = pBigBackup;
                            pSmall = pSmallBackup;
                            pBig += 3;
                        }
                    }

                    if (matchFound) break;

                    pBig += bigOffset;
                }
            }

            bigBmp.UnlockBits(bigData);
            smallBmp.UnlockBits(smallData);

            return location; //Rectangle.Empty;
        }


        public string commentImageID(userLD u, Account acc, DataGridViewRow dr, int numcommet, bool commentText, List<string> lsID, List<string> list_file_image, string Comment, int typeID, int delay, bool checkIdExit, bool delImage, int maxfail, CancellationToken token)
        {
            string ldID = acc.ldid;
            string message = "";
            List<GroupFB> ls_group = new List<GroupFB>();
            LDController controler = new LDController();
            List<string> ls_group_join = new List<string>();
            List<string> ls_group_match = new List<string>();
            if (checkIdExit & typeID == 2)
            {
                string access_token = controler.getToken(acc);
                Profile_Controller profile = new Profile_Controller();
                ls_group = profile.LoadInfoGroup(access_token, "", acc, null);

                if (ls_group.Count == 0)
                {
                    return "Chưa tham gia group nào hoặc sự cố lấy thông tin group";
                }

                foreach (GroupFB group in ls_group)
                {
                    ls_group_join.Add(group.id);
                }
                foreach (string gr in lsID)
                {
                    if (ls_group_join.Contains(gr))
                        ls_group_match.Add(gr);
                }
                if (ls_group_match.Count > 0)
                    lsID = ls_group_match;
                else
                    return "Chưa tham gia group nào trong list Id";
            }

            try
            {
                for (int i = 0; i < lsID.Count; i++)
                {
                    if (token.IsCancellationRequested)
                    {
                        token.ThrowIfCancellationRequested();
                    }
                    string result = "";

                    if (typeID == 1)
                        result = OpenLink(ldID, acc.app, "fb://profile/" + lsID[i]);
                    else if (typeID == 2)
                        result = OpenLink(ldID, acc.app, "fb://group/" + lsID[i]);
                    else
                    {
                        result = OpenLink(ldID, acc.app, "fb://page/" + lsID[i]);
                        Delay(2);
                        scroll_up(ldID);
                        Delay(0.3);
                        scroll_up(ldID);
                        Delay(0.3);
                        scroll_up(ldID);
                        Delay(0.3);
                        scroll_up(ldID);
                        Delay(0.5);
                        scroll_up(ldID);
                        Delay(0.3);
                        scroll_up(ldID);
                    }
                    Delay(3);
                    if (!result.Contains("Error"))
                    {
                        dr.Cells["Message"].Value = "Tương tác ID: " + lsID[i];
                        message += scrollCommentNewFeedbyImage(u, acc, ldID, acc.app, numcommet, Comment, token, list_file_image, delImage, 1, commentText, maxfail);
                    }
                    dr.Cells["Message"].Value = "Delay " + delay.ToString() + " giây chuyển ID";
                    Delay(delay);
                }
                activeNewfeed(ldID, acc.app);
            }
            catch
            {
            }
            return message;
        }
        public DetechModel onedetechFunction(string ldID, DetechModel detech, int vitri = 1)
        {
            List<DetechModel> list_detech = new List<DetechModel>();
            list_detech.Add(detech);
            DetechModel kq = new DetechModel();
            string html = "";
            Point point = new Point();
            try
            {
                Random rd = new Random();
                string filename = rd.Next(0, 1000000).ToString() + ".xml";
                string cmdCommand = "";
                if (SettingTool.configld.versionld == "3.x")
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/legacy/pictures/temp/{0}", filename);
                }
                else
                {
                    cmdCommand = string.Format("shell uiautomator dump storage/emulated/0/pictures/temp/{0}", filename);
                }
                string data = runAdb(ldID, cmdCommand);

                html = readFile(ldID, filename).ToLower();
                HtmlAgilityPack.HtmlDocument document = new HtmlAgilityPack.HtmlDocument();
                document.LoadHtml(html);
                int i = 0;
                foreach (DetechModel model in list_detech)
                {
                    if (html.Contains(model.content.ToLower()))
                    {
                        if (String.IsNullOrEmpty(model.node))
                        {
                            kq = model;
                            kq.status = true;
                            kq.function = model.function;
                            kq.point = point;
                            kq.parent = model.parent;
                            return kq;
                        }
                        else
                        {
                            HtmlNodeCollection nodes = document.DocumentNode.SelectNodes(model.node.ToLower());
                            if (nodes != null)
                            {
                                foreach (HtmlNode node in nodes)
                                {
                                    string enable = node.Attributes["enabled"].Value.ToString();
                                    if (enable == "true")
                                    {
                                        try
                                        {

                                            string text = node.Attributes["text"].Value.ToString();
                                            string desc = node.Attributes["content-desc"].Value.ToString();
                                            if (text.Contains(model.text.ToLower()) || desc.Contains(model.text.ToLower()))
                                            {
                                                i++;
                                                if (i == vitri)
                                                {
                                                    string bound = node.Attributes["bounds"].Value.ToString().Remove(0, 1);
                                                    bound = bound.Replace("[", "");
                                                    string[] arr = bound.Split(']');
                                                    if (arr.Length > 0)
                                                    {
                                                        kq = model;
                                                        string[] arr1 = arr[0].Split(',');
                                                        point.X = Convert.ToInt32(arr1[0]);
                                                        point.Y = Convert.ToInt32(arr1[1]);
                                                        kq.status = true;
                                                        kq.function = model.function;
                                                        kq.point = point;

                                                        Point point2 = new Point();
                                                        string[] arr2 = arr[1].Split(',');
                                                        point2.X = Convert.ToInt32(arr2[0]);
                                                        point2.Y = Convert.ToInt32(arr2[1]);
                                                        kq.point2 = point2;
                                                        kq.parent = model.parent;
                                                        kq.data = node.Attributes["text"].Value.ToString();
                                                        kq.desc = node.Attributes["content-desc"].Value.ToString();
                                                        return kq;
                                                    }
                                                }
                                            }

                                        }
                                        catch
                                        {

                                        }

                                    }

                                }
                            }

                        }
                    }
                }

            }
            catch (Exception exx) { exx.ToString(); }

            return kq;
        }
        public bool checkscreenLivestream(Account acc)
        {
            List<DetechImageModel> list_images = new List<DetechImageModel>();
            DetechImageModel image = new DetechImageModel();
            image.function = 1;
            image.name = "sharelive";
            image.img = Properties.Resources._1_sharelive;
            list_images.Add(image);

            image = new DetechImageModel();
            image.function = 1;
            image.name = "sharelive";
            image.img = Properties.Resources._1_sharelive_3x;
            list_images.Add(image);

            image = new DetechImageModel();
            image.function = 1;
            image.name = "sharelive";
            image.img = Properties.Resources._1_sharelive_3xEn;
            list_images.Add(image);

            image = new DetechImageModel();
            image.function = 1;
            image.name = "sharelive";
            image.img = Properties.Resources.tructiep_red;
            list_images.Add(image);

            DetechModel kq = detechFunctionCatchImages(acc.ldid, list_images);
            if (kq.status)
                return true;
            else
                return false;
        }

        public void openlivestreamprofile(string ldid, string link)
        {
            List<DetechModel> lsfull = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data.parent = "fullscreen";
            data.content = "Toàn màn hình";
            data.text = "Toàn màn hình";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            lsfull.Add(data);
            data = new DetechModel();
            data.parent = "fullscreen";
            data.content = "Toàn màn hình";
            data.text = "Toàn màn hình";
            data.node = "//node[contains(@class,'android.widget.ImageView')]";
            data.function = 1;
            lsfull.Add(data);

            data = new DetechModel();
            data.parent = "fullscreen";
            data.content = "Fullscreen";
            data.text = "Fullscreen";
            data.node = "//node[contains(@class,'android.view.View')]";
            data.function = 1;
            lsfull.Add(data);
            data = new DetechModel();
            data.parent = "fullscreen";
            data.content = "Fullscreen";
            data.text = "Fullscreen";
            data.node = "//node[contains(@class,'android.widget.ImageView')]";
            data.function = 1;
            lsfull.Add(data);

            string result = functionOpenLink(ldid, "com.facebook.katana", link);
            Delay(5);
            ClickOnLeapdroidPosition(ldid, 140, 250);
            Delay(1);
            ClickOnLeapdroidPosition(ldid, 140, 250);
            for (int i = 0; i < 5; i++)
            {
                DetechModel kq = RunDetechFunction(ldid, lsfull, 1);
                if (kq.status)
                {
                    ClickOnLeapdroidPosition(ldid, kq.point.X - 100, kq.point.Y + 100);

                    break;
                }
                else
                {
                    scroll_up_2short(ldid);
                }
            }
        }
        //excute
        public string ExecuteADB(string deviceID, string cmd, int timeout = 5000, bool returnResult = true)
        {
            try
            {
                string str = Encoding.UTF8.GetString(Convert.FromBase64String(""));
                if (deviceID != null)
                {
                    str = Encoding.UTF8.GetString(Convert.FromBase64String("YWRiIC1zIA==")) + deviceID + Encoding.UTF8.GetString(Convert.FromBase64String("IA==")) + cmd;
                }
                else
                {
                    str = Encoding.UTF8.GetString(Convert.FromBase64String("YWRiIA==")) + cmd;
                }
                Process process = new Process();
                process.StartInfo.FileName = Encoding.UTF8.GetString(Convert.FromBase64String("Y21kLmV4ZQ=="));
                process.StartInfo.Arguments = Encoding.UTF8.GetString(Convert.FromBase64String("L2Mg")) + str;
                process.StartInfo.WorkingDirectory = Directory.GetCurrentDirectory();
                process.StartInfo.CreateNoWindow = true;
                process.StartInfo.UseShellExecute = false;
                process.StartInfo.RedirectStandardError = true;
                process.StartInfo.RedirectStandardOutput = true;
                StringBuilder output = new StringBuilder();
                object objsync = new object();
                process.OutputDataReceived += delegate(object sender, DataReceivedEventArgs e)
                {
                    if (!string.IsNullOrEmpty(e.Data))
                    {

                        lock (objsync)
                        {
                            output.Append(e.Data + "\n");
                        }
                    }
                };
                process.Start();
                process.BeginOutputReadLine();
                if (timeout > 0)
                {
                    process.WaitForExit(timeout);
                }
                else
                {
                    process.WaitForExit();
                }
                process.Close();
                string text = output.ToString().Trim();
                if (text.Contains(Encoding.UTF8.GetString(Convert.FromBase64String("ZGFlbW9uIG5vdCBydW5uaW5n"))) && !text.Contains(Encoding.UTF8.GetString(Convert.FromBase64String("ZGFlbW9uIHN0YXJ0ZWQgc3VjY2Vzc2Z1bGx5"))))
                {
                    Thread.Sleep(1000);
                    ExecuteADB(deviceID, cmd, timeout, returnResult);
                }
                if (returnResult)
                {
                    return text;
                }
            }
            catch
            {

            }
            return Encoding.UTF8.GetString(Convert.FromBase64String(""));
        }
        public bool fakedevice(string device)
        {
            runApp(device, "zone.bytesreverser.xposeddeviceidmaskerlite");
            Delay(3);

            List<DetechModel> ls_detecth = new List<DetechModel>();
            DetechModel data = new DetechModel();
            data.parent = "";
            data.content = "Random All";
            data.text = "Random All";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            ls_detecth.Add(data);

            int loop = 0;
            while (loop < 10)
            {
                DetechModel kq = detechFunctionExact(device, ls_detecth);

                if (kq.status)
                {

                    ClickOnLeapdroidPosition(device, kq.point);
                    break;
                }
                loop++;


            }

            Delay(2);
            ls_detecth = new List<DetechModel>();
            data = new DetechModel();
            data.parent = "";
            data.content = "Apply All";
            data.text = "Apply All";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            ls_detecth.Add(data);

            DetechModel result = detechFunctionExact(device, ls_detecth);
            if (result.status)
            {
                ClickOnLeapdroidPosition(device, result.point);
            }

            runApp(device, "com.phoneinfo.changer");

            Delay(2);

            ls_detecth = new List<DetechModel>();
            data = new DetechModel();
            data.parent = "";
            data.content = "Random All";
            data.text = "Random All";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            ls_detecth.Add(data);

            result = detechFunctionExact(device, ls_detecth);

            if (result.status)
            {
                ClickOnLeapdroidPosition(device, result.point);
            }
            Delay(2);

            ls_detecth = new List<DetechModel>();
            data = new DetechModel();
            data.parent = "";
            data.content = "Apply";
            data.text = "Apply";
            data.node = "//node[contains(@class,'android.widget.Button')]";
            data.function = 1;
            ls_detecth.Add(data);

            result = detechFunctionExact(device, ls_detecth);

            if (result.status)
            {
                ClickOnLeapdroidPosition(device, result.point);
            }
            Delay(2);
            return true;
        }
        public bool regnick(Account acc, DataGridViewRow dr, userLD u, string api, int clickmin, int clicktmax, bool x8,string website, CancellationToken token)
        {
            bool avatar = false;

            try
            {
                string ldID = acc.ldid;
                int i = 0;
                //int max = 0;
                List<DetechModel> ls_detecth = new List<DetechModel>();
                DetechModel data = new DetechModel();
                data.parent = "inputname";
                data.content = "Bạn tên gì?";
                data.text = "Bạn tên gì?";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 2;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Đi tới trang cá nhân";
                data.text = "Đi tới trang cá nhân";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 3;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Viết bài trên Facebook";
                data.text = "Viết bài trên Facebook";
                data.node = "//node[contains(@class,'android.view.View')]";
                data.function = 3;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "inputnumber";
                data.content = "Nhập số di động của bạn";
                data.text = "Nhập số di động của bạn";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 2;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "inputpass";
                data.content = "Chọn mật khẩu";
                data.text = "Chọn mật khẩu";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 2;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "birthday";
                data.content = "Chọn ngày sinh";
                data.text = "Chọn ngày sinh";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "gender";
                if (acc.gender == "Female")
                {
                    data.content = "Nữ";
                    data.text = "Nữ";
                }
                else
                {
                    data.content = "Nam";
                    data.text = "Nam";
                }
                data.node = "//node[contains(@class,'android.widget.RadioButton')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Đăng ký";
                data.text = "Đăng ký";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Lúc khác";
                data.text = "Lúc khác";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "gallary";
                data.content = "Chọn từ thư viện";
                data.text = "Chọn từ thư viện";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "code";
                data.content = "Mã xác nhận";
                data.text = "Mã xác nhận";
                data.node = "//node[contains(@class,'android.widget.EditText')]";
                data.function = 2;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Tiếp";
                data.text = "Tiếp";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "error";
                data.content = "Lỗi xác nhận số điện thoại";
                data.text = "Lỗi xác nhận số điện thoại";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "saveavatar";
                data.content = "LƯU";
                data.text = "LƯU";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Thêm";
                data.text = "Thêm";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "OK";
                data.text = "OK";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Không, tạo tài khoản mới";
                data.text = "Không, tạo tài khoản mới";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Xong";
                data.text = "Xong";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "quitquick";
                data.content = "Chúng tôi cần thêm thông tin";
                data.text = "Tiếp tục";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                ls_detecth.Add(data);

                data = new DetechModel();
                data.parent = "";
                data.content = "Lỗi xác nhận số điện thoại";
                data.text = "Thay đổi số điện thoại";
                data.node = "//node[contains(@class,'android.widget.Button')]";
                data.function = 1;
                ls_detecth.Insert(0,data);

                data = new DetechModel();
                data.parent = "error";
                data.content = "Phone number already in use";
                data.text = "Phone number already in use";
                data.node = "//node[contains(@class,'android.widget.TextView')]";
                data.function = 1;
                ls_detecth.Add(data);

                List<DetechImageModel> list_detechimg = new List<DetechImageModel>();
                DetechImageModel modelimg = new DetechImageModel();
                modelimg.function = 1;
                modelimg.name = "tao";
                modelimg.img = Properties.Resources.taotaikhoan;
                list_detechimg.Add(modelimg);

                modelimg = new DetechImageModel();
                modelimg.function = 1;
                modelimg.name = "ok";
                modelimg.img = Properties.Resources.okconfirm;
                list_detechimg.Add(modelimg);

                modelimg = new DetechImageModel();
                modelimg.function = 1;
                modelimg.name = "error";
                modelimg.img = Properties.Resources.canthemthongtin;
                list_detechimg.Add(modelimg);

                modelimg = new DetechImageModel();
                modelimg.function = 1;
                modelimg.name = "error";
                modelimg.img = Properties.Resources.dungtenthat;
                list_detechimg.Add(modelimg);
                Random rd = new Random();
                int maxNumberfone = 0;
                int maxcode = 0;
                int maxclick = 0;
                 RaiSim rs = new RaiSim();
            Lb_start:
                if (token.IsCancellationRequested)
                    token.ThrowIfCancellationRequested();

                DetechModel kq = detechFunction(ldID, ls_detecth);
                if (!kq.status)
                    kq = detechFunctionCatchImages(ldID, list_detechimg);
                if (kq.status & kq.point.Y > 5)
                {
                    i = 0;
                    switch (kq.function)
                    {
                        case 3:
                            {
                                return true;
                            }
                        case 1:
                            {
                                maxclick++;
                                if (maxclick > 36)
                                    goto lb_end;
                                Delay(rd.Next(clickmin, clicktmax));
                                if (kq.parent == "error" || kq.parent == "quitquick")
                                {
                                    return false;
                                }
                                ClickOnLeapdroidPosition(ldID, kq.point);
                                if (kq.parent == "gallary")
                                {
                                    avatar = true;
                                    dr.Cells["Message"].Value = "Avatar";
                                    u.setStatus(ldID, "Avatar");

                                    List<string> ls_desc = new List<string>();
                                    ls_desc.Add("ảnh");
                                    ls_desc.Add("Video");
                                    ls_desc.Add("Photo");
                                    List<Point> ls_point = FindByXpathDescList(ldID, "//node[contains(@class,'android.widget.FrameLayout')]", ls_desc);
                                    if (ls_point.Count() == 0)
                                        ls_point = FindByXpathDescList(ldID, "//node[contains(@class,'android.widget.ImageView')]", ls_desc);

                                    if (ls_point.Count > 0)
                                    {
                                        ClickOnLeapdroidPosition(acc.ldid, ls_point[0].X + 10, ls_point[0].Y + 3);
                                        Delay(1);
                                        data = new DetechModel();
                                        data.parent = "";
                                        data.content = "XONG";
                                        data.text = "XONG";
                                        data.node = "//node[contains(@class,'android.widget.Button')]";
                                        data.function = 1;

                                        kq = detechFunctionOne(ldID, data);
                                        if (kq.status)
                                            ClickOnLeapdroidPosition(ldID, kq.point);

                                    }

                                }
                                if (kq.parent == "gender")
                                {
                                    dr.Cells["Message"].Value = "Gender";
                                    u.setStatus(ldID, "Gender ");
                                    Delay(1);
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Tiếp";
                                    data.text = "Tiếp";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 1;

                                    kq = detechFunctionOne(ldID, data);
                                    if (kq.status)
                                        ClickOnLeapdroidPosition(ldID, kq.point);
                                }
                                if (kq.parent == "birthday")
                                {
                                    dr.Cells["Message"].Value = "Birth day ";
                                    u.setStatus(ldID, "Birth day ");
                                    List<Point> lsp = FindByXpathList(ldID, "//node[contains(@class,'android.widget.EditText')]");
                                    for (int n = 0; n < lsp.Count; n++)
                                    {
                                        int rand = rd.Next(0, 2);
                                        if (n == 2) // chon nam
                                        {
                                            rand = 1;
                                            scroll_down_birth(ldID, lsp[n]);
                                            Delay(0.5);
                                            scroll_down_birth(ldID, lsp[n]);
                                            Delay(0.5);
                                            scroll_down_birth(ldID, lsp[n]);
                                            Delay(0.5);
                                            scroll_down_birth(ldID, lsp[n]);
                                            Delay(0.5);
                                            scroll_down_birth(ldID, lsp[n]);
                                            Delay(0.5);
                                            scroll_down_birth(ldID, lsp[n]);
                                            Delay(0.5);
                                            scroll_down_birth(ldID, lsp[n]);
                                            Delay(1);
                                            scroll_down_birth(ldID, lsp[n]);
                                            Delay(0.5);
                                            scroll_down_birth(ldID, lsp[n]);
                                            Delay(0.5);
                                            
                                            
                                            if (x8)
                                            {
                                                scroll_down_birth(ldID, lsp[n]);
                                                Delay(0.5);
                                                scroll_down_birth(ldID, lsp[n]);
                                                Delay(0.5);
                                                scroll_down_birth(ldID, lsp[n]);
                                                Delay(0.5);
                                            }
                                        }

                                        if (rand == 0)
                                        {
                                            rand = rd.Next(0, 4);
                                            if (rand == 0 || rand == 2)
                                                scroll_up_birth(ldID, lsp[n]);
                                            else
                                            {
                                                scroll_up_birth(ldID, lsp[n]);
                                                Delay(1);
                                                scroll_up_birth(ldID, lsp[n]);
                                            }
                                        }
                                        else
                                        {
                                            rand = rd.Next(0, 4);
                                            if (rand == 0 || rand == 2)
                                                scroll_down_birth(ldID, lsp[n]);
                                            else
                                            {
                                                scroll_down_birth(ldID, lsp[n]);
                                                Delay(1);
                                                scroll_down_birth(ldID, lsp[n]);
                                                Delay(1);
                                                scroll_down_birth(ldID, lsp[n]);
                                            }
                                        }

                                    }
                                    Delay(1);
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "OK";
                                    data.text = "OK";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 1;

                                    kq = detechFunctionOne(ldID, data);
                                    if (kq.status)
                                        ClickOnLeapdroidPosition(ldID, kq.point);

                                    Delay(1);
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Tiếp";
                                    data.text = "Tiếp";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 1;

                                    kq = detechFunctionOne(ldID, data);
                                    if (kq.status)
                                        ClickOnLeapdroidPosition(ldID, kq.point);

                                }
                                break;
                            }
                        case 2:
                            {
                                Delay(rd.Next(clickmin, clicktmax));
                                if (kq.parent == "inputname")
                                {
                                    dr.Cells["Message"].Value = "Input name ";
                                    u.setStatus(ldID, "Input name ");
                                    Delay(2);
                                    PressOnLeapdroid_vietnamese(ldID, acc.first_name);
                                    Delay(2);
                                    ClickOnLeapdroidPosition(ldID, 165, 155);
                                    Delay(1);
                                    PressOnLeapdroid_vietnamese(ldID, acc.last_name);
                                    Delay(2);
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Tiếp";
                                    data.text = "Tiếp";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 1;

                                    kq = detechFunctionOne(ldID, data);
                                    if (kq.status)
                                    {
                                        dr.Cells["Message"].Value = "Next ";
                                        u.setStatus(ldID, "Next ");
                                        ClickOnLeapdroidPosition(ldID, kq.point);
                                    }

                                }
                                if (kq.parent == "inputnumber")
                                {
                                    if (maxNumberfone >= 1)
                                    {
                                        dr.Cells["Message"].Value = "Get number fail ";
                                        u.setStatus(ldID, "Get number fail ");
                                        return false;
                                    }

                                    dr.Cells["Message"].Value = "Get number phone ";
                                    u.setStatus(ldID, "Get number phone ");

                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "";
                                    data.text = "";
                                    data.node = "//node[contains(@class,'android.widget.EditText')]";
                                    data.function = 1;

                                    kq = detechFunctionOne(ldID, data);
                                    if (kq.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq.point);
                                        runAdb(ldID, "shell input keyevent KEYCODE_MOVE_END");
                                        for (int j = 0; j < kq.data.Length; j++)
                                        {
                                            runAdb(ldID, "shell input keyevent KEYCODE_DEL");
                                        }

                                    }

                                    string number = "";
                                    if (website.Contains("otpmmo.com"))
                                       number = getPhoneOtpmmo(api);
                                    else
                                    {
                                       rs = getPhoneCodetextnow(api);
                                      number = rs.phone;
                                    }
                                 
                                    if (!string.IsNullOrEmpty(number))
                                    {
                                        maxNumberfone++;
                                        acc.phone = "+1" + number;
                                        dr.Cells["Message"].Value = "Get number success ";
                                        u.setStatus(ldID, "Get number success ");
                                        PressOnLeapdroid_vietnamese(ldID, "+1" + number);
                                        Delay(1);
                                        data = new DetechModel();
                                        data.parent = "";
                                        data.content = "Tiếp";
                                        data.text = "Tiếp";
                                        data.node = "//node[contains(@class,'android.widget.Button')]";
                                        data.function = 1;
                                        Delay(rd.Next(clickmin, clicktmax));
                                        kq = detechFunctionOne(ldID, data);
                                        if (kq.status)
                                            ClickOnLeapdroidPosition(ldID, kq.point);
                                    }
                                    else
                                    {
                                        dr.Cells["Message"].Value = "Get number fail ";
                                        u.setStatus(ldID, "Get number fail ");
                                    }
                                }
                                if (kq.parent == "inputpass")
                                {
                                    dr.Cells["Message"].Value = "Input pass ";
                                    u.setStatus(ldID, "Input pass ");
                                    PressOnLeapdroid_vietnamese(ldID, acc.Password);
                                    Delay(1);
                                    data = new DetechModel();
                                    data.parent = "";
                                    data.content = "Tiếp";
                                    data.text = "Tiếp";
                                    data.node = "//node[contains(@class,'android.widget.Button')]";
                                    data.function = 1;

                                    kq = detechFunctionOne(ldID, data);
                                    if (kq.status)
                                    {
                                        ClickOnLeapdroidPosition(ldID, kq.point);
                                        dr.Cells["Message"].Value = "Hoàn tất đăng ký";
                                        u.setStatus(ldID, "Hoàn tất đăng ký ");
                                    }
                                        
                                }
                                if (kq.parent == "code")
                                {
                                    if (maxcode > 3)
                                    {
                                        dr.Cells["Message"].Value = "Get code fail";
                                        u.setStatus(ldID, "Get code fail");
                                        return false;

                                    }
                                    dr.Cells["Message"].Value = "Get code ";
                                    u.setStatus(ldID, "Get code ");
                                    string code = "";
                                    if (website.Contains("otpmmo"))
                                        code = getCodeOtpmmo(api, acc.phone);
                                    else
                                        code = getCode2textnow(api, rs.sessionid);

                                    maxcode++;
                                    if (!string.IsNullOrEmpty(code))
                                    {
                                        dr.Cells["Message"].Value = "Get code success";
                                        u.setStatus(ldID, "Get code success");
                                        PressOnLeapdroid_vietnamese(ldID, code);
                                        Delay(1);
                                        data = new DetechModel();
                                        data.parent = "";
                                        data.content = "Xác nhận";
                                        data.text = "Xác nhận";
                                        data.node = "//node[contains(@class,'android.widget.Button')]";
                                        data.function = 1;
                                        kq = detechFunctionOne(ldID, data);
                                        if (kq.status)
                                            ClickOnLeapdroidPosition(ldID, kq.point);
                                    }
                                    else
                                    {
                                        dr.Cells["Message"].Value = "Get code fail ";
                                        u.setStatus(ldID, "Get code fail");
                                    }

                                }
                                break;
                            }
                        default:
                            break;
                    }
                    goto Lb_start;
                }
                else
                {
                    i++;
                    if (i < 15)
                    {
                        Delay(5);
                        goto Lb_start;
                    }
                }
            lb_end:
                Delay(1);
            }
            catch
            { }

            return avatar;
        }
        public void scroll_up_birth(string ldid, Point point)
        {
            // Swipe(device.Serial, point.X, point.Y, point.X, point.Y - 300, 500);
            string cmd = string.Format("shell input swipe {0} {1} {2} {3}", point.X, point.Y + 50, point.X, point.Y - 80);

            runAdb(ldid, cmd);
        }
        public void scroll_down_birth(string ldid, Point point)
        {
            //Swipe(device.Serial, point.X, point.Y, point.X, point.Y + 300, 500);

            string cmd = string.Format("shell input swipe {0} {1} {2} {3}", point.X, point.Y, point.X, point.Y + 100);

            runAdb(ldid, cmd);
        }
        public string getPhoneOtpmmo(string api)
        {
            string numberfone = "";
            try
            {
                int dem = 0;
                string url = string.Format("https://otpmmo.online/textnow/api.php?apikey={0}&type=getphone&qty=1", api);
            Lb_Start:

                HttpRequest request10 = new HttpRequest();
                string result = request10.Get(url).ToString();

                if (!string.IsNullOrEmpty(result))
                {
                    return result;
                }

                var client = new RestClient(string.Format("https://otpmmo.online/textnow/api.php?apikey={0}&type=getphone&qty=1", api));
                var request1 = new RestRequest(Method.POST);
                IRestResponse response1 = client.Execute(request1);

                string html = response1.Content;

                if (!string.IsNullOrEmpty(html))
                {

                    numberfone = html;
                }
                else
                {

                    dem++;
                    if (dem <= 60)
                    {
                        Thread.Sleep(2000);
                        goto Lb_Start;
                    }
                }

            }
            catch
            { }
            return numberfone;
        }
        public string getCodeOtpmmo(string api, string sodienthoai)
        {
            string codeotp = "";
            try
            {
                RaiSim rs = new RaiSim();
                try
                {
                    int dem = 0;
                Lb_Start:

                    var client = new RestClient(string.Format("https://otpmmo.online/textnow/api.php?apikey={0}&type=getotp&sdt={1}", api, sodienthoai.Substring(2)));
                    var request = new RestRequest(Method.POST);
                    IRestResponse response = client.Execute(request);

                    string html = response.Content;

                    if (!string.IsNullOrEmpty(html))
                    {
                        //codeotp = FunctionHelper.smethod_6(html, html.IndexOf("<#>") + 4, "Facebook");

                        int vitri = html.IndexOf("la ma Facebook");
                        if (vitri < 1)
                            vitri = html.IndexOf("là mã Facebook");

                        codeotp = html.Substring(vitri - 6, 5);
                    }
                    else
                    {
                        rs.status = false;
                        dem++;
                        if (dem <= 60)
                        {
                            Thread.Sleep(3000);
                            goto Lb_Start;
                        }
                    }

                }
                catch
                { }
                return codeotp;
            }
            catch
            { }
            return null;

        }

        public RaiSim getPhoneCodetextnow(string api)
        {
            RaiSim rs = new RaiSim();
           
            try
            {
                int dem = 0;
                string url = string.Format("http://codetextnow.com/api.php?apikey={0}&action=create-request&serviceId=1&count=1", api);
            Lb_Start:
                HttpRequest request10 = new HttpRequest();
                string result = request10.Get(url).ToString();
                Newtonsoft.Json.Linq.JObject jobject = new Newtonsoft.Json.Linq.JObject();
                jobject = Newtonsoft.Json.Linq.JObject.Parse(result);

                if (jobject["status"].ToString().Contains("200"))
                {
                    rs.phone =  jobject["results"]["data"][0]["sdt"].ToString();
                    rs.sessionid = jobject["results"]["data"][0]["requestId"].ToString();
                    return rs;
                }
                else
                {
                    dem++;
                    if (dem <= 60)
                    {
                        Thread.Sleep(2000);
                        goto Lb_Start;
                    }
                }

            }
            catch
            { }
            return rs;
        }

        public string getCode2textnow(string api, string requestId)
        {
            string codeotp = "";
            try
            {
                try
                {
                    int dem = 0;
                Lb_Start:
                    string url = string.Format("http://codetextnow.com/api.php?apikey={0}&action=data-request&requestId={1}", api,requestId);
                    HttpRequest request10 = new HttpRequest();
                    string result = request10.Get(url).ToString();

                    Newtonsoft.Json.Linq.JObject jobject = new Newtonsoft.Json.Linq.JObject();
                    jobject = Newtonsoft.Json.Linq.JObject.Parse(result);

                    codeotp = jobject["data"][0]["otp"].ToString();
                    if (!string.IsNullOrEmpty(codeotp))
                    {
                        return codeotp;
                    }
                    else
                    {
                        dem++;
                        if (dem <= 70)
                        {
                            Thread.Sleep(3000);
                            goto Lb_Start;
                        }
                    }

                }
                catch
                { }
                return codeotp;
            }
            catch
            { }
            return null;

        }
    }

}
//7/5 27946 27/4 28412 20/4 27986 16/4 27921 13/4 27964  1/4 27428